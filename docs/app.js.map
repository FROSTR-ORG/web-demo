{
  "version": 3,
  "sources": ["../node_modules/react/cjs/react.production.min.js", "../node_modules/react/index.js", "../node_modules/scheduler/cjs/scheduler.production.min.js", "../node_modules/scheduler/index.js", "../node_modules/react-dom/cjs/react-dom.production.min.js", "../node_modules/react-dom/index.js", "../node_modules/react-dom/client.js", "../node_modules/react/cjs/react-jsx-runtime.production.min.js", "../node_modules/react/jsx-runtime.js", "../src/index.tsx", "../node_modules/@noble/hashes/src/crypto.ts", "../node_modules/@noble/hashes/src/utils.ts", "../node_modules/@noble/hashes/src/_md.ts", "../node_modules/@noble/hashes/src/sha2.ts", "../node_modules/@noble/hashes/src/sha256.ts", "../node_modules/@cmdcode/buff/src/assert.ts", "../node_modules/@cmdcode/buff/src/format/str.ts", "../node_modules/@scure/base/index.ts", "../node_modules/@cmdcode/buff/src/encode.ts", "../node_modules/@cmdcode/buff/src/format/big.ts", "../node_modules/@cmdcode/buff/src/format/bin.ts", "../node_modules/@cmdcode/buff/src/format/num.ts", "../node_modules/@cmdcode/buff/src/utils.ts", "../node_modules/@cmdcode/buff/src/format/buffer.ts", "../node_modules/@cmdcode/buff/src/buff.ts", "../node_modules/@noble/hashes/src/hmac.ts", "../node_modules/@noble/curves/src/abstract/utils.ts", "../node_modules/@noble/curves/src/abstract/modular.ts", "../node_modules/@noble/curves/src/abstract/curve.ts", "../node_modules/@noble/curves/src/abstract/weierstrass.ts", "../node_modules/@noble/curves/src/_shortw_utils.ts", "../node_modules/@noble/curves/src/abstract/hash-to-curve.ts", "../node_modules/@noble/curves/src/secp256k1.ts", "../node_modules/@noble/ciphers/src/utils.ts", "../node_modules/@noble/ciphers/src/_polyval.ts", "../node_modules/@noble/ciphers/src/aes.ts", "../node_modules/@cmdcode/nostr-p2p/dist/lib/crypto.js", "../node_modules/@cmdcode/nostr-p2p/dist/lib/util.js", "../node_modules/zod/lib/index.mjs", "../node_modules/@cmdcode/nostr-p2p/dist/schema/base.js", "../node_modules/@cmdcode/nostr-p2p/dist/schema/event.js", "../node_modules/@cmdcode/nostr-p2p/dist/schema/msg.js", "../node_modules/@cmdcode/nostr-p2p/dist/schema/index.js", "../node_modules/@cmdcode/nostr-p2p/dist/util/assert.js", "../node_modules/@cmdcode/nostr-p2p/dist/util/helpers.js", "../node_modules/@cmdcode/nostr-p2p/dist/lib/event.js", "../node_modules/@cmdcode/nostr-p2p/dist/lib/message.js", "../node_modules/@cmdcode/nostr-p2p/dist/lib/validate.js", "../node_modules/@cmdcode/frost/dist/ecc/hash.js", "../node_modules/@cmdcode/frost/dist/const.js", "../node_modules/@cmdcode/frost/dist/ecc/util.js", "../node_modules/@cmdcode/frost/dist/ecc/group.js", "../node_modules/@cmdcode/frost/dist/util/assert.js", "../node_modules/@cmdcode/frost/dist/util/helpers.js", "../node_modules/@cmdcode/frost/dist/lib/helpers.js", "../node_modules/@cmdcode/frost/dist/lib/commit.js", "../node_modules/@cmdcode/frost/dist/ecc/state.js", "../node_modules/@cmdcode/frost/dist/lib/context.js", "../node_modules/@cmdcode/frost/dist/lib/poly.js", "../node_modules/@cmdcode/frost/dist/lib/ecdh.js", "../node_modules/@cmdcode/frost/dist/lib/sign.js", "../node_modules/@frostr/bifrost/dist/lib/ecdh.js", "../node_modules/@frostr/bifrost/dist/schema/base.js", "../node_modules/@frostr/bifrost/dist/schema/pkg.js", "../node_modules/@frostr/bifrost/dist/schema/sign.js", "../node_modules/@frostr/bifrost/dist/schema/index.js", "../node_modules/@frostr/bifrost/dist/lib/parse.js", "../node_modules/@frostr/bifrost/dist/util/helpers.js", "../node_modules/@frostr/bifrost/dist/util/assert.js", "../node_modules/@frostr/bifrost/dist/util/crypto.js", "../node_modules/@frostr/bifrost/dist/util/parse.js", "../node_modules/@frostr/bifrost/dist/lib/util.js", "../node_modules/@frostr/bifrost/dist/api/ecdh.js", "../node_modules/@frostr/bifrost/dist/api/ping.js", "../node_modules/@frostr/bifrost/dist/lib/sighash.js", "../node_modules/@frostr/bifrost/dist/lib/group.js", "../node_modules/@frostr/bifrost/dist/lib/session.js", "../node_modules/@frostr/bifrost/dist/lib/sign.js", "../node_modules/@frostr/bifrost/dist/api/sign.js", "../node_modules/@frostr/bifrost/dist/class/emitter.js", "../node_modules/@frostr/bifrost/dist/class/signer.js", "../node_modules/@frostr/bifrost/dist/class/queue.js", "../node_modules/@cmdcode/nostr-p2p/dist/class/emitter.js", "../node_modules/nostr-tools/node_modules/@noble/curves/node_modules/@noble/hashes/src/_assert.ts", "../node_modules/nostr-tools/node_modules/@noble/curves/node_modules/@noble/hashes/src/crypto.ts", "../node_modules/nostr-tools/node_modules/@noble/curves/node_modules/@noble/hashes/src/utils.ts", "../node_modules/nostr-tools/node_modules/@noble/curves/node_modules/@noble/hashes/src/_sha2.ts", "../node_modules/nostr-tools/node_modules/@noble/curves/node_modules/@noble/hashes/src/sha256.ts", "../node_modules/nostr-tools/node_modules/@noble/curves/src/abstract/utils.ts", "../node_modules/nostr-tools/node_modules/@noble/curves/src/abstract/modular.ts", "../node_modules/nostr-tools/node_modules/@noble/curves/src/abstract/curve.ts", "../node_modules/nostr-tools/node_modules/@noble/curves/src/abstract/weierstrass.ts", "../node_modules/nostr-tools/node_modules/@noble/curves/node_modules/@noble/hashes/src/hmac.ts", "../node_modules/nostr-tools/node_modules/@noble/curves/src/_shortw_utils.ts", "../node_modules/nostr-tools/node_modules/@noble/curves/src/secp256k1.ts", "../node_modules/nostr-tools/node_modules/@noble/hashes/src/crypto.ts", "../node_modules/nostr-tools/node_modules/@noble/hashes/src/utils.ts", "../node_modules/nostr-tools/node_modules/@noble/hashes/src/_assert.ts", "../node_modules/nostr-tools/node_modules/@noble/hashes/src/_sha2.ts", "../node_modules/nostr-tools/node_modules/@noble/hashes/src/sha256.ts", "../node_modules/nostr-tools/node_modules/@scure/base/lib/esm/index.js", "../node_modules/nostr-tools/node_modules/@noble/ciphers/src/_assert.ts", "../node_modules/nostr-tools/node_modules/@noble/ciphers/src/utils.ts", "../node_modules/nostr-tools/node_modules/@noble/ciphers/src/_polyval.ts", "../node_modules/nostr-tools/node_modules/@noble/ciphers/src/aes.ts", "../node_modules/nostr-tools/node_modules/@noble/ciphers/src/_poly1305.ts", "../node_modules/nostr-tools/node_modules/@noble/ciphers/src/_arx.ts", "../node_modules/nostr-tools/node_modules/@noble/ciphers/src/chacha.ts", "../node_modules/nostr-tools/node_modules/@noble/hashes/src/hmac.ts", "../node_modules/nostr-tools/node_modules/@noble/hashes/src/hkdf.ts", "../node_modules/nostr-tools/lib/esm/index.js", "../node_modules/@cmdcode/nostr-p2p/dist/class/client.js", "../node_modules/@frostr/bifrost/dist/class/client.js", "../node_modules/@frostr/bifrost/dist/encoder/group.js", "../node_modules/@frostr/bifrost/dist/encoder/share.js", "../node_modules/@frostr/bifrost/dist/encoder/cred.js", "../node_modules/@frostr/bifrost/dist/encoder/index.js", "../src/const.ts", "../src/store/controller.ts", "../src/store/context.tsx", "../src/store/index.tsx", "../src/hooks/useBifrost.ts", "../src/context/node.tsx", "../src/components/layout/header.tsx", "../src/components/layout/tabs.tsx", "../src/components/node/console.tsx", "../src/components/node/dash.tsx", "../src/components/settings/creds.tsx", "../src/components/settings/peers.tsx", "../src/components/settings/relays.tsx", "../src/components/settings/reset.tsx", "../src/components/settings/index.tsx", "../src/components/icons.tsx", "../src/components/layout/app.tsx", "css-ns:/home/cscott/Repos/frostr/web-demo/src/styles/global.css", "css-ns:/home/cscott/Repos/frostr/web-demo/src/styles/layout.css", "css-ns:/home/cscott/Repos/frostr/web-demo/src/styles/node.css", "css-ns:/home/cscott/Repos/frostr/web-demo/src/styles/settings.css"],
  "sourcesContent": ["/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n", "/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n", "/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n", "'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n", "'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n", "/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n", "import { StrictMode }    from 'react'\nimport { createRoot }    from 'react-dom/client'\nimport { NodeProvider }  from '@/context/node.js'\nimport { StoreProvider } from '@/store/index.js'\nimport { App }           from '@/components/layout/app.js'\n\nimport '@/styles/global.css'\nimport '@/styles/layout.css'\nimport '@/styles/node.css'\nimport '@/styles/settings.css'\n\n// Fetch the root container.\nconst container = document.getElementById('root')\n\n// If the root container is not found, throw an error.\nif (!container) throw new Error('[ app ] root container not found')\n\n// Create the react root element.\nconst root = createRoot(container)\n\n// Render the app.\nroot.render(\n  <StrictMode>\n    <StoreProvider>\n      <NodeProvider>\n        <App />\n      </NodeProvider>\n    </StoreProvider>\n  </StrictMode>\n)\n", "/**\n * Internal webcrypto alias.\n * We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n * See utils.ts for details.\n * @module\n */\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto: any =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is positive integer. */\nexport function anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Asserts something is Uint8Array. */\nexport function abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Asserts something is hash */\nexport function ahash(h: IHash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.createHasher');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays: TypedArray[]): void {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n\n/** The byte swap operation for uint32 */\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** @deprecated */\nexport const byteSwapIfBE: typeof swap8IfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): Uint32Array {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n  return arr;\n}\n\nexport const swap32IfBE: (u: Uint32Array) => Uint32Array = isLE\n  ? (u: Uint32Array) => u\n  : byteSwap32;\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = string | Uint8Array;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** KDFs can accept string or Uint8Array for user convenience. */\nexport type KDFInput = string | Uint8Array;\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data: KDFInput): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash interface. */\nexport type IHash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  abstract clone(): T;\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n/** Hash function */\nexport type CHash = ReturnType<typeof createHasher>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof createOptHasher>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof createXOFer>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function createOptHasher<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function createXOFer<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\nexport const wrapConstructor: typeof createHasher = createHasher;\nexport const wrapConstructorWithOpts: typeof createOptHasher = createOptHasher;\nexport const wrapXOFConstructorWithOpts: typeof createXOFer = createXOFer;\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return Uint8Array.from(crypto.randomBytes(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { type Input, Hash, abytes, aexists, aoutput, clean, createView, toBytes } from './utils.ts';\n\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/** Choice: a ? b : c */\nexport function Chi(a: number, b: number, c: number): number {\n  return (a & b) ^ (~a & c);\n}\n\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a: number, b: number, c: number): number {\n  return (a & b) ^ (a & c) ^ (b & c);\n}\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n\n  readonly blockLen: number;\n  readonly outputLen: number;\n  readonly padOffset: number;\n  readonly isLE: boolean;\n\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(blockLen: number, outputLen: number, padOffset: number, isLE: boolean) {\n    super();\n    this.blockLen = blockLen;\n    this.outputLen = outputLen;\n    this.padOffset = padOffset;\n    this.isLE = isLE;\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    aexists(this);\n    data = toBytes(data);\n    abytes(data);\n    const { view, buffer, blockLen } = this;\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    clean(this.buffer.subarray(pos));\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.destroyed = destroyed;\n    to.finished = finished;\n    to.length = length;\n    to.pos = pos;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n  0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n  0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n", "/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from './_md.ts';\nimport * as u64 from './_u64.ts';\nimport { type CHash, clean, createHasher, rotr } from './utils.ts';\n\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  protected A: number = SHA256_IV[0] | 0;\n  protected B: number = SHA256_IV[1] | 0;\n  protected C: number = SHA256_IV[2] | 0;\n  protected D: number = SHA256_IV[3] | 0;\n  protected E: number = SHA256_IV[4] | 0;\n  protected F: number = SHA256_IV[5] | 0;\n  protected G: number = SHA256_IV[6] | 0;\n  protected H: number = SHA256_IV[7] | 0;\n\n  constructor(outputLen: number = 32) {\n    super(64, outputLen, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean(): void {\n    clean(SHA256_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\nexport class SHA224 extends SHA256 {\n  protected A: number = SHA224_IV[0] | 0;\n  protected B: number = SHA224_IV[1] | 0;\n  protected C: number = SHA224_IV[2] | 0;\n  protected D: number = SHA224_IV[3] | 0;\n  protected E: number = SHA224_IV[4] | 0;\n  protected F: number = SHA224_IV[5] | 0;\n  protected G: number = SHA224_IV[6] | 0;\n  protected H: number = SHA224_IV[7] | 0;\n  constructor() {\n    super(28);\n  }\n}\n\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\n\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = SHA512_IV[0] | 0;\n  protected Al: number = SHA512_IV[1] | 0;\n  protected Bh: number = SHA512_IV[2] | 0;\n  protected Bl: number = SHA512_IV[3] | 0;\n  protected Ch: number = SHA512_IV[4] | 0;\n  protected Cl: number = SHA512_IV[5] | 0;\n  protected Dh: number = SHA512_IV[6] | 0;\n  protected Dl: number = SHA512_IV[7] | 0;\n  protected Eh: number = SHA512_IV[8] | 0;\n  protected El: number = SHA512_IV[9] | 0;\n  protected Fh: number = SHA512_IV[10] | 0;\n  protected Fl: number = SHA512_IV[11] | 0;\n  protected Gh: number = SHA512_IV[12] | 0;\n  protected Gl: number = SHA512_IV[13] | 0;\n  protected Hh: number = SHA512_IV[14] | 0;\n  protected Hl: number = SHA512_IV[15] | 0;\n\n  constructor(outputLen: number = 64) {\n    super(128, outputLen, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ): void {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean(): void {\n    clean(SHA512_W_H, SHA512_W_L);\n  }\n  destroy(): void {\n    clean(this.buffer);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nexport class SHA384 extends SHA512 {\n  protected Ah: number = SHA384_IV[0] | 0;\n  protected Al: number = SHA384_IV[1] | 0;\n  protected Bh: number = SHA384_IV[2] | 0;\n  protected Bl: number = SHA384_IV[3] | 0;\n  protected Ch: number = SHA384_IV[4] | 0;\n  protected Cl: number = SHA384_IV[5] | 0;\n  protected Dh: number = SHA384_IV[6] | 0;\n  protected Dl: number = SHA384_IV[7] | 0;\n  protected Eh: number = SHA384_IV[8] | 0;\n  protected El: number = SHA384_IV[9] | 0;\n  protected Fh: number = SHA384_IV[10] | 0;\n  protected Fl: number = SHA384_IV[11] | 0;\n  protected Gh: number = SHA384_IV[12] | 0;\n  protected Gl: number = SHA384_IV[13] | 0;\n  protected Hh: number = SHA384_IV[14] | 0;\n  protected Hl: number = SHA384_IV[15] | 0;\n\n  constructor() {\n    super(48);\n  }\n}\n\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n  0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n  0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n  0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n  0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\n\nexport class SHA512_224 extends SHA512 {\n  protected Ah: number = T224_IV[0] | 0;\n  protected Al: number = T224_IV[1] | 0;\n  protected Bh: number = T224_IV[2] | 0;\n  protected Bl: number = T224_IV[3] | 0;\n  protected Ch: number = T224_IV[4] | 0;\n  protected Cl: number = T224_IV[5] | 0;\n  protected Dh: number = T224_IV[6] | 0;\n  protected Dl: number = T224_IV[7] | 0;\n  protected Eh: number = T224_IV[8] | 0;\n  protected El: number = T224_IV[9] | 0;\n  protected Fh: number = T224_IV[10] | 0;\n  protected Fl: number = T224_IV[11] | 0;\n  protected Gh: number = T224_IV[12] | 0;\n  protected Gl: number = T224_IV[13] | 0;\n  protected Hh: number = T224_IV[14] | 0;\n  protected Hl: number = T224_IV[15] | 0;\n\n  constructor() {\n    super(28);\n  }\n}\n\nexport class SHA512_256 extends SHA512 {\n  protected Ah: number = T256_IV[0] | 0;\n  protected Al: number = T256_IV[1] | 0;\n  protected Bh: number = T256_IV[2] | 0;\n  protected Bl: number = T256_IV[3] | 0;\n  protected Ch: number = T256_IV[4] | 0;\n  protected Cl: number = T256_IV[5] | 0;\n  protected Dh: number = T256_IV[6] | 0;\n  protected Dl: number = T256_IV[7] | 0;\n  protected Eh: number = T256_IV[8] | 0;\n  protected El: number = T256_IV[9] | 0;\n  protected Fh: number = T256_IV[10] | 0;\n  protected Fl: number = T256_IV[11] | 0;\n  protected Gh: number = T256_IV[12] | 0;\n  protected Gl: number = T256_IV[13] | 0;\n  protected Hh: number = T256_IV[14] | 0;\n  protected Hl: number = T256_IV[15] | 0;\n\n  constructor() {\n    super(32);\n  }\n}\n\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256: CHash = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224: CHash = /* @__PURE__ */ createHasher(() => new SHA224());\n\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512: CHash = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384: CHash = /* @__PURE__ */ createHasher(() => new SHA384());\n\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256: CHash = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224: CHash = /* @__PURE__ */ createHasher(() => new SHA512_224());\n", "/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport {\n  SHA224 as SHA224n,\n  sha224 as sha224n,\n  SHA256 as SHA256n,\n  sha256 as sha256n,\n} from './sha2.ts';\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256: typeof SHA256n = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256: typeof sha256n = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224: typeof SHA224n = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224: typeof sha224n = sha224n;\n", "export function within_size (\n  data : number[] | Uint8Array,\n  size : number\n) : void {\n  if (data.length > size) {\n    throw new TypeError(`Data is larger than array size: ${data.length} > ${size}`)\n  }\n}\n\nexport function is_hex (hex : string) : void {\n  if (hex.match(/[^a-fA-f0-9]/) !== null) {\n    throw new TypeError('Invalid characters in hex string: ' + hex)\n  }\n  if (hex.length % 2 !== 0) {\n    throw new Error(`Length of hex string is invalid: ${hex.length}`)\n  }\n}\n\nexport function is_json (str : string) : void {\n  try {\n    JSON.parse(str)\n  } catch {\n    throw new TypeError('JSON string is invalid!')\n  }\n}\n\nexport function is_safe_num (num : number) : void {\n  if (num > Number.MAX_SAFE_INTEGER) {\n    throw new TypeError('Number exceeds safe bounds!')\n  }\n}\n\nexport function is_prefix (\n  actual : string,\n  target : string\n) : void {\n  if (actual !== target) {\n    throw new TypeError(`Bech32 prefix does not match: ${actual} !== ${target}`)\n  }\n}\n", "import { is_hex } from '../assert.js'\nimport { Endian } from '../types.js'\n\nconst ec  = new TextEncoder()\nconst dc  = new TextDecoder()\n\nexport function strToBytes (str : string) : Uint8Array {\n  return ec.encode(str)\n}\n\nexport function bytesToStr (bytes : Uint8Array) : string {\n  return dc.decode(bytes)\n}\n\nfunction hex_size (\n  hexstr  : string,\n  size   ?: number\n) : number {\n  is_hex(hexstr)\n  const len = hexstr.length / 2\n  if (size === undefined) size = len\n  if (len > size) {\n     throw new TypeError(`Hex string is larger than array size: ${len} > ${size}`)\n  }\n  return size\n}\n\nexport function hexToBytes (\n  hexstr : string,\n  size  ?: number,\n  endian : Endian = 'le'\n) : Uint8Array {\n  size = hex_size(hexstr, size)\n  const use_le   = (endian === 'le')\n  const buffer   = new ArrayBuffer(size)\n  const dataView = new DataView(buffer)\n    let offset   = (use_le) ? 0 : size - 1\n  for (let i = 0; i < hexstr.length; i += 2) {\n    const char = hexstr.substring(i, i + 2)\n    const num  = parseInt(char, 16)\n    if (use_le) {\n      dataView.setUint8(offset++, num)\n    } else {\n      dataView.setUint8(offset--, num)\n    }\n  }\n  return new Uint8Array(buffer)\n}\n\nexport function bytesToHex (bytes : Uint8Array) : string {\n  let chars = ''\n  for (let i = 0; i < bytes.length; i++) {\n    chars += bytes[i].toString(16).padStart(2, '0')\n  }\n  return chars\n}\n\n", "/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\nexport interface Coder<F, T> {\n  encode(from: F): T;\n  decode(to: T): F;\n}\n\nexport interface BytesCoder extends Coder<Uint8Array, string> {\n  encode: (data: Uint8Array) => string;\n  decode: (str: string) => Uint8Array;\n}\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\nfunction isArrayOf(isString: boolean, arr: any[]) {\n  if (!Array.isArray(arr)) return false;\n  if (arr.length === 0) return true;\n  if (isString) {\n    return arr.every((item) => typeof item === 'string');\n  } else {\n    return arr.every((item) => Number.isSafeInteger(item));\n  }\n}\n\n// no abytes: seems to have 10% slowdown. Why?!\n\nfunction afn(input: Function): input is Function {\n  if (typeof input !== 'function') throw new Error('function expected');\n  return true;\n}\n\nfunction astr(label: string, input: unknown): input is string {\n  if (typeof input !== 'string') throw new Error(`${label}: string expected`);\n  return true;\n}\n\nfunction anumber(n: number): void {\n  if (!Number.isSafeInteger(n)) throw new Error(`invalid integer: ${n}`);\n}\n\nfunction aArr(input: any[]) {\n  if (!Array.isArray(input)) throw new Error('array expected');\n}\nfunction astrArr(label: string, input: string[]) {\n  if (!isArrayOf(true, input)) throw new Error(`${label}: array of strings expected`);\n}\nfunction anumArr(label: string, input: number[]) {\n  if (!isArrayOf(false, input)) throw new Error(`${label}: array of numbers expected`);\n}\n\n// TODO: some recusive type inference so it would check correct order of input/output inside rest?\n// like <string, number>, <number, bytes>, <bytes, float>\ntype Chain = [Coder<any, any>, ...Coder<any, any>[]];\n// Extract info from Coder type\ntype Input<F> = F extends Coder<infer T, any> ? T : never;\ntype Output<F> = F extends Coder<any, infer T> ? T : never;\n// Generic function for arrays\ntype First<T> = T extends [infer U, ...any[]] ? U : never;\ntype Last<T> = T extends [...any[], infer U] ? U : never;\ntype Tail<T> = T extends [any, ...infer U] ? U : never;\n\ntype AsChain<C extends Chain, Rest = Tail<C>> = {\n  // C[K] = Coder<Input<C[K]>, Input<Rest[k]>>\n  [K in keyof C]: Coder<Input<C[K]>, Input<K extends keyof Rest ? Rest[K] : any>>;\n};\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain<T extends Chain & AsChain<T>>(...args: T): Coder<Input<First<T>>, Output<Last<T>>> {\n  const id = (a: any) => a;\n  // Wrap call in closure so JIT can inline calls\n  const wrap = (a: any, b: any) => (c: any) => a(b(c));\n  // Construct chain of args[-1].encode(args[-2].encode([...]))\n  const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n  // Construct chain of args[0].decode(args[1].decode(...))\n  const decode = args.map((x) => x.decode).reduce(wrap, id);\n  return { encode, decode };\n}\n\n/**\n * Encodes integer radix representation to array of strings using alphabet and back.\n * Could also be array of strings.\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(letters: string | string[]): Coder<number[], string[]> {\n  // mapping 1 to \"b\"\n  const lettersA = typeof letters === 'string' ? letters.split('') : letters;\n  const len = lettersA.length;\n  astrArr('alphabet', lettersA);\n\n  // mapping \"b\" to 1\n  const indexes = new Map(lettersA.map((l, i) => [l, i]));\n  return {\n    encode: (digits: number[]) => {\n      aArr(digits);\n      return digits.map((i) => {\n        if (!Number.isSafeInteger(i) || i < 0 || i >= len)\n          throw new Error(\n            `alphabet.encode: digit index outside alphabet \"${i}\". Allowed: ${letters}`\n          );\n        return lettersA[i]!;\n      });\n    },\n    decode: (input: string[]): number[] => {\n      aArr(input);\n      return input.map((letter) => {\n        astr('alphabet.decode', letter);\n        const i = indexes.get(letter);\n        if (i === undefined) throw new Error(`Unknown letter: \"${letter}\". Allowed: ${letters}`);\n        return i;\n      });\n    },\n  };\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = ''): Coder<string[], string> {\n  astr('join', separator);\n  return {\n    encode: (from) => {\n      astrArr('join.decode', from);\n      return from.join(separator);\n    },\n    decode: (to) => {\n      astr('join.decode', to);\n      return to.split(separator);\n    },\n  };\n}\n\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits: number, chr = '='): Coder<string[], string[]> {\n  anumber(bits);\n  astr('padding', chr);\n  return {\n    encode(data: string[]): string[] {\n      astrArr('padding.encode', data);\n      while ((data.length * bits) % 8) data.push(chr);\n      return data;\n    },\n    decode(input: string[]): string[] {\n      astrArr('padding.decode', input);\n      let end = input.length;\n      if ((end * bits) % 8)\n        throw new Error('padding: invalid, string should have whole number of bytes');\n      for (; end > 0 && input[end - 1] === chr; end--) {\n        const last = end - 1;\n        const byte = last * bits;\n        if (byte % 8 === 0) throw new Error('padding: invalid, string has too much padding');\n      }\n      return input.slice(0, end);\n    },\n  };\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize<T>(fn: (val: T) => T): Coder<T, T> {\n  afn(fn);\n  return { encode: (from: T) => from, decode: (to: T) => fn(to) };\n}\n\n/**\n * Slow: O(n^2) time complexity\n */\nfunction convertRadix(data: number[], from: number, to: number): number[] {\n  // base 1 is impossible\n  if (from < 2) throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);\n  if (to < 2) throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);\n  aArr(data);\n  if (!data.length) return [];\n  let pos = 0;\n  const res = [];\n  const digits = Array.from(data, (d) => {\n    anumber(d);\n    if (d < 0 || d >= from) throw new Error(`invalid integer: ${d}`);\n    return d;\n  });\n  const dlen = digits.length;\n  while (true) {\n    let carry = 0;\n    let done = true;\n    for (let i = pos; i < dlen; i++) {\n      const digit = digits[i]!;\n      const fromCarry = from * carry;\n      const digitBase = fromCarry + digit;\n      if (\n        !Number.isSafeInteger(digitBase) ||\n        fromCarry / from !== carry ||\n        digitBase - digit !== fromCarry\n      ) {\n        throw new Error('convertRadix: carry overflow');\n      }\n      const div = digitBase / to;\n      carry = digitBase % to;\n      const rounded = Math.floor(div);\n      digits[i] = rounded;\n      if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n        throw new Error('convertRadix: carry overflow');\n      if (!done) continue;\n      else if (!rounded) pos = i;\n      else done = false;\n    }\n    res.push(carry);\n    if (done) break;\n  }\n  for (let i = 0; i < data.length - 1 && data[i] === 0; i++) res.push(0);\n  return res.reverse();\n}\n\nconst gcd = (a: number, b: number): number => (b === 0 ? a : gcd(b, a % b));\nconst radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from: number, to: number) =>\n  from + (to - gcd(from, to));\nconst powers: number[] = /* @__PURE__ */ (() => {\n  let res = [];\n  for (let i = 0; i < 40; i++) res.push(2 ** i);\n  return res;\n})();\n/**\n * Implemented with numbers, because BigInt is 5x slower\n */\nfunction convertRadix2(data: number[], from: number, to: number, padding: boolean): number[] {\n  aArr(data);\n  if (from <= 0 || from > 32) throw new Error(`convertRadix2: wrong from=${from}`);\n  if (to <= 0 || to > 32) throw new Error(`convertRadix2: wrong to=${to}`);\n  if (radix2carry(from, to) > 32) {\n    throw new Error(\n      `convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`\n    );\n  }\n  let carry = 0;\n  let pos = 0; // bitwise position in current element\n  const max = powers[from]!;\n  const mask = powers[to]! - 1;\n  const res: number[] = [];\n  for (const n of data) {\n    anumber(n);\n    if (n >= max) throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n    carry = (carry << from) | n;\n    if (pos + from > 32) throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n    pos += from;\n    for (; pos >= to; pos -= to) res.push(((carry >> (pos - to)) & mask) >>> 0);\n    const pow = powers[pos];\n    if (pow === undefined) throw new Error('invalid carry');\n    carry &= pow - 1; // clean carry, otherwise it will cause overflow\n  }\n  carry = (carry << (to - pos)) & mask;\n  if (!padding && pos >= from) throw new Error('Excess padding');\n  if (!padding && carry > 0) throw new Error(`Non-zero padding: ${carry}`);\n  if (padding && pos > 0) res.push(carry >>> 0);\n  return res;\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num: number): Coder<Uint8Array, number[]> {\n  anumber(num);\n  const _256 = 2 ** 8;\n  return {\n    encode: (bytes: Uint8Array) => {\n      if (!isBytes(bytes)) throw new Error('radix.encode input should be Uint8Array');\n      return convertRadix(Array.from(bytes), _256, num);\n    },\n    decode: (digits: number[]) => {\n      anumArr('radix.decode', digits);\n      return Uint8Array.from(convertRadix(digits, num, _256));\n    },\n  };\n}\n\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits: number, revPadding = false): Coder<Uint8Array, number[]> {\n  anumber(bits);\n  if (bits <= 0 || bits > 32) throw new Error('radix2: bits should be in (0..32]');\n  if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n    throw new Error('radix2: carry overflow');\n  return {\n    encode: (bytes: Uint8Array) => {\n      if (!isBytes(bytes)) throw new Error('radix2.encode input should be Uint8Array');\n      return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n    },\n    decode: (digits: number[]) => {\n      anumArr('radix2.decode', digits);\n      return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n    },\n  };\n}\n\ntype ArgumentTypes<F extends Function> = F extends (...args: infer A) => any ? A : never;\nfunction unsafeWrapper<T extends (...args: any) => any>(fn: T) {\n  afn(fn);\n  return function (...args: ArgumentTypes<T>): ReturnType<T> | void {\n    try {\n      return fn.apply(null, args);\n    } catch (e) {}\n  };\n}\n\nfunction checksum(\n  len: number,\n  fn: (data: Uint8Array) => Uint8Array\n): Coder<Uint8Array, Uint8Array> {\n  anumber(len);\n  afn(fn);\n  return {\n    encode(data: Uint8Array) {\n      if (!isBytes(data)) throw new Error('checksum.encode: input should be Uint8Array');\n      const sum = fn(data).slice(0, len);\n      const res = new Uint8Array(data.length + len);\n      res.set(data);\n      res.set(sum, data.length);\n      return res;\n    },\n    decode(data: Uint8Array) {\n      if (!isBytes(data)) throw new Error('checksum.decode: input should be Uint8Array');\n      const payload = data.slice(0, -len);\n      const oldChecksum = data.slice(-len);\n      const newChecksum = fn(payload).slice(0, len);\n      for (let i = 0; i < len; i++)\n        if (newChecksum[i] !== oldChecksum[i]) throw new Error('Invalid checksum');\n      return payload;\n    },\n  };\n}\n\n// prettier-ignore\nexport const utils: { alphabet: typeof alphabet; chain: typeof chain; checksum: typeof checksum; convertRadix: typeof convertRadix; convertRadix2: typeof convertRadix2; radix: typeof radix; radix2: typeof radix2; join: typeof join; padding: typeof padding; } = {\n  alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n\n// RFC 4648 aka RFC 3548\n// ---------------------\n\n/**\n * base16 encoding from RFC 4648.\n * @example\n * ```js\n * base16.encode(Uint8Array.from([0x12, 0xab]));\n * // => '12AB'\n * ```\n */\nexport const base16: BytesCoder = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\n\n/**\n * base32 encoding from RFC 4648. Has padding.\n * Use `base32nopad` for unpadded version.\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\n * @example\n * ```js\n * base32.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'CKVQ===='\n * base32.decode('CKVQ====');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32: BytesCoder = chain(\n  radix2(5),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'),\n  padding(5),\n  join('')\n);\n\n/**\n * base32 encoding from RFC 4648. No padding.\n * Use `base32` for padded version.\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\n * @example\n * ```js\n * base32nopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'CKVQ'\n * base32nopad.decode('CKVQ');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32nopad: BytesCoder = chain(\n  radix2(5),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'),\n  join('')\n);\n/**\n * base32 encoding from RFC 4648. Padded. Compared to ordinary `base32`, slightly different alphabet.\n * Use `base32hexnopad` for unpadded version.\n * @example\n * ```js\n * base32hex.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ALG===='\n * base32hex.decode('2ALG====');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32hex: BytesCoder = chain(\n  radix2(5),\n  alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'),\n  padding(5),\n  join('')\n);\n\n/**\n * base32 encoding from RFC 4648. No padding. Compared to ordinary `base32`, slightly different alphabet.\n * Use `base32hex` for padded version.\n * @example\n * ```js\n * base32hexnopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ALG'\n * base32hexnopad.decode('2ALG');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32hexnopad: BytesCoder = chain(\n  radix2(5),\n  alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'),\n  join('')\n);\n/**\n * base32 encoding from RFC 4648. Doug Crockford's version.\n * https://www.crockford.com/base32.html\n * @example\n * ```js\n * base32crockford.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ANG'\n * base32crockford.decode('2ANG');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32crockford: BytesCoder = chain(\n  radix2(5),\n  alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'),\n  join(''),\n  normalize((s: string) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1'))\n);\n\n// Built-in base64 conversion https://caniuse.com/mdn-javascript_builtins_uint8array_frombase64\n// TODO: temporarily set to false, trying to understand bugs\n// prettier-ignore\nconst hasBase64Builtin: boolean = /* @__PURE__ */ (() =>\n  typeof (Uint8Array as any).from([]).toBase64 === 'function' &&\n  typeof (Uint8Array as any).fromBase64 === 'function')();\n\n/**\n * base64 from RFC 4648. Padded.\n * Use `base64nopad` for unpadded version.\n * Also check out `base64url`, `base64urlnopad`.\n * Falls back to built-in function, when available.\n * @example\n * ```js\n * base64.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs='\n * base64.decode('Eqs=');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\n// prettier-ignore\nexport const base64: BytesCoder = hasBase64Builtin ? {\n  encode(b) { abytes(b); return (b as any).toBase64(); },\n  decode(s) {\n    astr('base64', s); return (Uint8Array as any).fromBase64(s, { lastChunkHandling: 'strict' });\n  },\n} : chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),\n  padding(6),\n  join('')\n);\n/**\n * base64 from RFC 4648. No padding.\n * Use `base64` for padded version.\n * @example\n * ```js\n * base64nopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs'\n * base64nopad.decode('Eqs');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base64nopad: BytesCoder = chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),\n  join('')\n);\n\n/**\n * base64 from RFC 4648, using URL-safe alphabet. Padded.\n * Use `base64urlnopad` for unpadded version.\n * Falls back to built-in function, when available.\n * @example\n * ```js\n * base64url.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs='\n * base64url.decode('Eqs=');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\n// prettier-ignore\nexport const base64url: BytesCoder = hasBase64Builtin ? {\n  encode(b) { abytes(b); return (b as any).toBase64({ alphabet: 'base64url' }); },\n  decode(s) { astr('base64', s); return (Uint8Array as any).fromBase64(s, { alphabet: 'base64url' }); },\n} : chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),\n  padding(6),\n  join('')\n);\n\n/**\n * base64 from RFC 4648, using URL-safe alphabet. No padding.\n * Use `base64url` for padded version.\n * @example\n * ```js\n * base64urlnopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs'\n * base64urlnopad.decode('Eqs');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base64urlnopad: BytesCoder = chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),\n  join('')\n);\n\n// base58 code\n// -----------\nconst genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc: string) =>\n  chain(radix(58), alphabet(abc), join(''));\n\n/**\n * base58: base64 without ambigous characters +, /, 0, O, I, l.\n * Quadratic (O(n^2)) - so, can't be used on large inputs.\n * @example\n * ```js\n * base58.decode('01abcdef');\n * // => '3UhJW'\n * ```\n */\nexport const base58: BytesCoder = genBase58(\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n);\n/**\n * base58: flickr version. Check out `base58`.\n */\nexport const base58flickr: BytesCoder = genBase58(\n  '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n);\n/**\n * base58: XRP version. Check out `base58`.\n */\nexport const base58xrp: BytesCoder = genBase58(\n  'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz'\n);\n\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n\n/**\n * base58: XMR version. Check out `base58`.\n * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n * Block encoding significantly reduces quadratic complexity of base58.\n */\nexport const base58xmr: BytesCoder = {\n  encode(data: Uint8Array) {\n    let res = '';\n    for (let i = 0; i < data.length; i += 8) {\n      const block = data.subarray(i, i + 8);\n      res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length]!, '1');\n    }\n    return res;\n  },\n  decode(str: string) {\n    let res: number[] = [];\n    for (let i = 0; i < str.length; i += 11) {\n      const slice = str.slice(i, i + 11);\n      const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n      const block = base58.decode(slice);\n      for (let j = 0; j < block.length - blockLen; j++) {\n        if (block[j] !== 0) throw new Error('base58xmr: wrong padding');\n      }\n      res = res.concat(Array.from(block.slice(block.length - blockLen)));\n    }\n    return Uint8Array.from(res);\n  },\n};\n\n/**\n * Method, which creates base58check encoder.\n * Requires function, calculating sha256.\n */\nexport const createBase58check = (sha256: (data: Uint8Array) => Uint8Array): BytesCoder =>\n  chain(\n    checksum(4, (data) => sha256(sha256(data))),\n    base58\n  );\n\n/**\n * Use `createBase58check` instead.\n * @deprecated\n */\nexport const base58check: (sha256: (data: Uint8Array) => Uint8Array) => BytesCoder =\n  createBase58check;\n\n// Bech32 code\n// -----------\nexport interface Bech32Decoded<Prefix extends string = string> {\n  prefix: Prefix;\n  words: number[];\n}\nexport interface Bech32DecodedWithArray<Prefix extends string = string> {\n  prefix: Prefix;\n  words: number[];\n  bytes: Uint8Array;\n}\n\nconst BECH_ALPHABET: Coder<number[], string> = chain(\n  alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'),\n  join('')\n);\n\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre: number): number {\n  const b = pre >> 25;\n  let chk = (pre & 0x1ffffff) << 5;\n  for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n    if (((b >> i) & 1) === 1) chk ^= POLYMOD_GENERATORS[i]!;\n  }\n  return chk;\n}\n\nfunction bechChecksum(prefix: string, words: number[], encodingConst = 1): string {\n  const len = prefix.length;\n  let chk = 1;\n  for (let i = 0; i < len; i++) {\n    const c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) throw new Error(`Invalid prefix (${prefix})`);\n    chk = bech32Polymod(chk) ^ (c >> 5);\n  }\n  chk = bech32Polymod(chk);\n  for (let i = 0; i < len; i++) chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n  for (let v of words) chk = bech32Polymod(chk) ^ v;\n  for (let i = 0; i < 6; i++) chk = bech32Polymod(chk);\n  chk ^= encodingConst;\n  return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]!], 30, 5, false));\n}\n\nexport interface Bech32 {\n  encode<Prefix extends string>(\n    prefix: Prefix,\n    words: number[] | Uint8Array,\n    limit?: number | false\n  ): `${Lowercase<Prefix>}1${string}`;\n  decode<Prefix extends string>(\n    str: `${Prefix}1${string}`,\n    limit?: number | false\n  ): Bech32Decoded<Prefix>;\n  encodeFromBytes(prefix: string, bytes: Uint8Array): string;\n  decodeToBytes(str: string): Bech32DecodedWithArray;\n  decodeUnsafe(str: string, limit?: number | false): void | Bech32Decoded<string>;\n  fromWords(to: number[]): Uint8Array;\n  fromWordsUnsafe(to: number[]): void | Uint8Array;\n  toWords(from: Uint8Array): number[];\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding: 'bech32' | 'bech32m'): Bech32 {\n  const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n  const _words = radix2(5);\n  const fromWords = _words.decode;\n  const toWords = _words.encode;\n  const fromWordsUnsafe = unsafeWrapper(fromWords);\n\n  function encode<Prefix extends string>(\n    prefix: Prefix,\n    words: number[] | Uint8Array,\n    limit: number | false = 90\n  ): `${Lowercase<Prefix>}1${string}` {\n    astr('bech32.encode prefix', prefix);\n    if (isBytes(words)) words = Array.from(words);\n    anumArr('bech32.encode', words);\n    const plen = prefix.length;\n    if (plen === 0) throw new TypeError(`Invalid prefix length ${plen}`);\n    const actualLength = plen + 7 + words.length;\n    if (limit !== false && actualLength > limit)\n      throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n    const lowered = prefix.toLowerCase();\n    const sum = bechChecksum(lowered, words, ENCODING_CONST);\n    return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}` as `${Lowercase<Prefix>}1${string}`;\n  }\n\n  function decode<Prefix extends string>(\n    str: `${Prefix}1${string}`,\n    limit?: number | false\n  ): Bech32Decoded<Prefix>;\n  function decode(str: string, limit?: number | false): Bech32Decoded;\n  function decode(str: string, limit: number | false = 90): Bech32Decoded {\n    astr('bech32.decode input', str);\n    const slen = str.length;\n    if (slen < 8 || (limit !== false && slen > limit))\n      throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);\n    // don't allow mixed case\n    const lowered = str.toLowerCase();\n    if (str !== lowered && str !== str.toUpperCase())\n      throw new Error(`String must be lowercase or uppercase`);\n    const sepIndex = lowered.lastIndexOf('1');\n    if (sepIndex === 0 || sepIndex === -1)\n      throw new Error(`Letter \"1\" must be present between prefix and data only`);\n    const prefix = lowered.slice(0, sepIndex);\n    const data = lowered.slice(sepIndex + 1);\n    if (data.length < 6) throw new Error('Data must be at least 6 characters long');\n    const words = BECH_ALPHABET.decode(data).slice(0, -6);\n    const sum = bechChecksum(prefix, words, ENCODING_CONST);\n    if (!data.endsWith(sum)) throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n    return { prefix, words };\n  }\n\n  const decodeUnsafe = unsafeWrapper(decode);\n\n  function decodeToBytes(str: string): Bech32DecodedWithArray {\n    const { prefix, words } = decode(str, false);\n    return { prefix, words, bytes: fromWords(words) };\n  }\n\n  function encodeFromBytes(prefix: string, bytes: Uint8Array) {\n    return encode(prefix, toWords(bytes));\n  }\n\n  return {\n    encode,\n    decode,\n    encodeFromBytes,\n    decodeToBytes,\n    decodeUnsafe,\n    fromWords,\n    fromWordsUnsafe,\n    toWords,\n  };\n}\n\n/**\n * bech32 from BIP 173. Operates on words.\n * For high-level, check out scure-btc-signer:\n * https://github.com/paulmillr/scure-btc-signer.\n */\nexport const bech32: Bech32 = genBech32('bech32');\n\n/**\n * bech32m from BIP 350. Operates on words.\n * It was to mitigate `bech32` weaknesses.\n * For high-level, check out scure-btc-signer:\n * https://github.com/paulmillr/scure-btc-signer.\n */\nexport const bech32m: Bech32 = genBech32('bech32m');\n\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.\n * @example\n * ```js\n * const b = utf8.decode(\"hey\"); // => new Uint8Array([ 104, 101, 121 ])\n * const str = utf8.encode(b); // \"hey\"\n * ```\n */\nexport const utf8: BytesCoder = {\n  encode: (data) => new TextDecoder().decode(data),\n  decode: (str) => new TextEncoder().encode(str),\n};\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\n// prettier-ignore\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  typeof (Uint8Array as any).from([]).toHex === 'function' &&\n  typeof (Uint8Array as any).fromHex === 'function')();\n// prettier-ignore\nconst hexBuiltin: BytesCoder = {\n  encode(data) { abytes(data); return (data as any).toHex(); },\n  decode(s) { astr('hex', s); return (Uint8Array as any).fromHex(s); },\n};\n/**\n * hex string decoder. Uses built-in function, when available.\n * @example\n * ```js\n * const b = hex.decode(\"0102ff\"); // => new Uint8Array([ 1, 2, 255 ])\n * const str = hex.encode(b); // \"0102ff\"\n * ```\n */\nexport const hex: BytesCoder = hasHexBuiltin\n  ? hexBuiltin\n  : chain(\n      radix2(4),\n      alphabet('0123456789abcdef'),\n      join(''),\n      normalize((s: string) => {\n        if (typeof s !== 'string' || s.length % 2 !== 0)\n          throw new TypeError(\n            `hex.decode: expected string, got ${typeof s} with length ${s.length}`\n          );\n        return s.toLowerCase();\n      })\n    );\n\nexport type SomeCoders = {\n  utf8: BytesCoder;\n  hex: BytesCoder;\n  base16: BytesCoder;\n  base32: BytesCoder;\n  base64: BytesCoder;\n  base64url: BytesCoder;\n  base58: BytesCoder;\n  base58xmr: BytesCoder;\n};\n// prettier-ignore\nconst CODERS: SomeCoders = {\n  utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\ntype CoderType = keyof SomeCoders;\nconst coderTypeError =\n  'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\n\n/** @deprecated */\nexport const bytesToString = (type: CoderType, bytes: Uint8Array): string => {\n  if (typeof type !== 'string' || !CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);\n  if (!isBytes(bytes)) throw new TypeError('bytesToString() expects Uint8Array');\n  return CODERS[type].encode(bytes);\n};\n\n/** @deprecated */\nexport const str: (type: CoderType, bytes: Uint8Array) => string = bytesToString; // as in python, but for bytes only\n\n/** @deprecated */\nexport const stringToBytes = (type: CoderType, str: string): Uint8Array => {\n  if (!CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);\n  if (typeof str !== 'string') throw new TypeError('stringToBytes() expects string');\n  return CODERS[type].decode(str);\n};\n/** @deprecated */\nexport const bytes: (type: CoderType, str: string) => Uint8Array = stringToBytes;\n", "import { sha256 } from '@noble/hashes/sha256'\n\nimport {\n  bytesToStr,\n  bytesToHex,\n  hexToBytes,\n  strToBytes\n} from './format/str.js'\n\nimport {\n  base58check,\n  base64,\n  base64urlnopad,\n  bech32,\n  bech32m\n} from '@scure/base'\n\nexport const Hex = {\n  encode : bytesToHex,\n  decode : hexToBytes\n}\n\nexport const Txt = {\n  encode : strToBytes,\n  decode : bytesToStr\n}\n\nexport const B58chk = {\n  encode : (data : Uint8Array) => base58check(sha256).encode(data),\n  decode : (data : string)     => base58check(sha256).decode(data)\n}\n\nexport const Base64 = {\n  encode : (data : Uint8Array) => base64.encode(data),\n  decode : (data : string)     => base64.decode(data)\n}\n\nexport const B64url = {\n  encode : (data : Uint8Array) => base64urlnopad.encode(data),\n  decode : (data : string)     => base64urlnopad.decode(data)\n}\n\nexport const Bech32 = {\n  to_words : bech32.toWords,\n  to_bytes : bech32.fromWords,\n\n  encode: (\n    prefix : string,\n    words  : number[],\n    limit  : number | false = false\n  ) => {\n    return bech32.encode(prefix, words, limit)\n  },\n  decode: (\n    data  : string,\n    limit : number | false = false\n  ) => {\n    const { prefix, words } = bech32.decode(data, limit)\n    return { prefix, words }\n  }\n}\n\nexport const Bech32m = {\n  to_words : bech32m.toWords,\n  to_bytes : bech32m.fromWords,\n\n  encode: (\n    prefix : string,\n    words  : number[],\n    limit  : number | false = false\n  ) => {\n    return bech32m.encode(prefix, words, limit)\n  },\n  decode: (\n    data  : string,\n    limit : number | false = false\n  ) => {\n    const { prefix, words } = bech32m.decode(data, limit)\n    return { prefix, words }\n  }\n}\n", "import { type Endian } from '../types.js'\n\nconst _0n   = BigInt(0)\nconst _255n = BigInt(255)\nconst _256n = BigInt(256)\n\nfunction big_size (\n  big : bigint) : number {\n  // 1 byte.\n  if (big <= 0xFFn) return 1\n  // 2 bytes.\n  if (big <= 0xFFFFn) return 2\n  // 4 bytes.\n  if (big <= 0xFFFFFFFFn) return 4\n  // 8 bytes.\n  if (big <= 0xFFFFFFFFFFFFFFFFn) return 8\n  // 16 bytes.\n  if (big <= 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFn) return 16\n  // 32 bytes.\n  if (big <= 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFn) {\n    return 32\n  }\n  throw new TypeError('Must specify a fixed buffer size for bigints greater than 32 bytes.')\n}\n\nexport function bigToBytes (\n  big    : bigint,\n  size  ?: number,\n  endian : Endian = 'be'\n) : Uint8Array {\n  if (size === undefined) size = big_size(big)\n  const use_le   = (endian === 'le')\n  const buffer   = new ArrayBuffer(size)\n  const dataView = new DataView(buffer)\n    let offset   = (use_le) ? 0 : size - 1\n  while (big > _0n) {\n    const byte = big & _255n\n    const num  = Number(byte)\n    if (use_le) {\n      dataView.setUint8(offset++, num)\n    } else {\n      dataView.setUint8(offset--, num)\n    }\n    big = (big - byte) / _256n\n  }\n  return new Uint8Array(buffer)\n}\n\nexport function bytesToBig (bytes : Uint8Array) : bigint {\n  let num = BigInt(0)\n  for (let i = bytes.length - 1; i >= 0; i--) {\n    num = (num * _256n) + BigInt(bytes[i])\n  }\n  return BigInt(num)\n}\n", "export function binToBytes (binary : string) : Uint8Array {\n  const bins = binary.split('').map(Number)\n\n  if (bins.length % 8 !== 0) {\n    throw new Error(`Binary array is invalid length: ${binary.length}`)\n  }\n\n  const bytes = new Uint8Array(bins.length / 8)\n\n  for (let i = 0, ct = 0; i < bins.length; i += 8, ct++) {\n    let byte = 0\n    for (let j = 0; j < 8; j++) {\n      byte |= (bins[i + j] << (7 - j))\n    }\n    bytes[ct] = byte\n  }\n\n  return bytes\n}\n\nexport function bytesToBin (bytes : Uint8Array) : string {\n  // Create a binary array that is sized to (number of bytes) * 8.\n  const bin = new Array(bytes.length * 8)\n\n  let count = 0\n\n  // Iterate through each number in the byte array.\n  for (const num of bytes) {\n    if (num > 255) {\n      // Throw an error on invalid number ranges.\n      throw new Error(`Invalid byte value: ${num}. Byte values must be between 0 and 255.`)\n    }\n\n    // Convert the current number into bits using bitwise operations.\n    for (let i = 7; i >= 0; i--, count++) {\n      bin[count] = (num >> i) & 1\n    }\n  }\n\n  // Return the complete binary array.\n  return bin.join('')\n}\n", "import { type Endian }      from '../types.js'\nimport { is_safe_num } from '../assert.js'\n\nfunction num_size (\n  num : number) : number {\n  // 1 byte.\n  if (num <= 0xFF) return 1\n  // 2 bytes.\n  if (num <= 0xFFFF) return 2\n  // 4 bytes.\n  if (num <= 0xFFFFFFFF) return 4\n  throw new TypeError('Numbers larger than 4 bytes must specify a fixed size!')\n}\n\nexport function numToBytes (\n  num    : number,\n  size  ?: number,\n  endian : Endian = 'be'\n) : Uint8Array {\n  if (size === undefined) size = num_size(num)\n  const use_le   = (endian === 'le')\n  const buffer   = new ArrayBuffer(size)\n  const dataView = new DataView(buffer)\n    let offset   = (use_le) ? 0 : size - 1\n  while (num > 0) {\n    const byte = num & 255\n    if (use_le) {\n      dataView.setUint8(offset++, num)\n    } else {\n      dataView.setUint8(offset--, num)\n    }\n    num = (num - byte) / 256\n  }\n  return new Uint8Array(buffer)\n}\n\nexport function bytesToNum (bytes : Uint8Array) : number {\n  let num = 0\n  for (let i = bytes.length - 1; i >= 0; i--) {\n    num = (num * 256) + bytes[i]\n    is_safe_num(num)\n  }\n  return num\n}\n", "import { within_size }   from './assert.js'\nimport { Endian, Bytes } from './types.js'\n\nexport function is_hex (input : string) : boolean {\n  if (\n    input.match(/[^a-fA-F0-9]/) === null &&\n    input.length % 2 === 0\n  ) { return true }\n  return false\n}\n\nexport function is_bytes (input : any) : input is Bytes {\n  if (typeof input === 'string' && is_hex(input)) {\n    return true\n  } else if (\n    typeof input === 'number' ||\n    typeof input === 'bigint' ||\n    input instanceof Uint8Array\n  ) {\n    return true\n  } else if (\n    Array.isArray(input) &&\n    input.every(e => typeof e === 'number')\n  ) {\n    return true\n  } else  {\n    return false\n  }\n}\n\nexport function set_buffer (\n  data   : number[] | Uint8Array,\n  size  ?: number,\n  endian : Endian = 'be'\n) : Uint8Array {\n  if (size === undefined) size = data.length\n  within_size(data, size)\n  const buffer = new Uint8Array(size).fill(0)\n  const offset = (endian === 'be') ? 0 : size - data.length\n  buffer.set(data, offset)\n  return buffer\n}\n\nexport function join_array (\n  arr : Array<Uint8Array | number[]>\n) : Uint8Array {\n  let i, offset = 0\n  const size = arr.reduce((len, arr) => len + arr.length, 0)\n  const buff = new Uint8Array(size)\n  for (i = 0; i < arr.length; i++) {\n    const a = arr[i]\n    buff.set(a, offset)\n    offset += a.length\n  }\n  return buff\n}\n\nexport function bigint_replacer (_ : any, v : any) : any {\n  return typeof v === 'bigint'\n    ? `${v}n`\n    : v\n}\n\nexport function bigint_reviver (_ : any, v : any) : any {\n  return typeof v === 'string' && /^[0-9]+n$/.test(v)\n    ? BigInt(v.slice(0, -1))\n    : v\n}\n\nexport function parse_data (\n  data_blob  : Uint8Array,\n  chunk_size : number,\n  total_size : number\n) : Uint8Array[] {\n  const len   = data_blob.length,\n        count = total_size / chunk_size\n  if (total_size % chunk_size !== 0) {\n    throw new TypeError(`Invalid parameters: ${total_size} % ${chunk_size} !== 0`)\n  }\n  if (len !== total_size) {\n    throw new TypeError(`Invalid data stream: ${len} !== ${total_size}`)\n  }\n  if (len % chunk_size !== 0) {\n    throw new TypeError(`Invalid data stream: ${len} % ${chunk_size} !== 0`)\n  }\n  const chunks = new Array(count)\n  for (let i = 0; i < count; i++) {\n    const idx = i * chunk_size\n    chunks[i] = data_blob.subarray(idx, idx + chunk_size)\n  }\n  return chunks\n}\n", "import { bigToBytes }    from './big.js'\nimport { numToBytes }    from './num.js'\nimport { hexToBytes }    from './str.js'\nimport { type Bytes, type Endian } from '../types.js'\n\nimport * as util from '../utils.js'\n\nexport function buffer_data (\n  data    : Bytes | Bytes[] | ArrayBuffer,\n  size   ?: number,\n  endian ?: Endian\n) : Uint8Array {\n  if (data instanceof ArrayBuffer) {\n    return new Uint8Array(data)\n  } else if (data instanceof Uint8Array) {\n    return util.set_buffer(data, size, endian)\n  } else if (Array.isArray(data)) {\n    const bytes = data.map(e => buffer_data(e, size, endian))\n    return util.join_array(bytes)\n  } else if (typeof data === 'string') {\n    return hexToBytes(data, size, endian)\n  } else if (typeof data === 'bigint') {\n    return bigToBytes(data, size, endian)\n  } else if (typeof data === 'number') {\n    return numToBytes(data, size, endian)\n  } else if (typeof data === 'boolean') {\n    return Uint8Array.of(data ? 1 : 0)\n  }\n  throw new TypeError('Unsupported format:' + String(typeof data))\n}\n", "import { sha256 }      from '@noble/hashes/sha256'\nimport { randomBytes } from '@noble/hashes/utils'\n\nimport * as assert  from './assert.js'\nimport * as encoder from './encode.js'\nimport * as fmt     from './format/index.js'\nimport * as util    from './utils.js'\n\nimport { Bytes, Endian, Replacer, Reviver } from './types.js'\n\nexport class Buff extends Uint8Array {\n  static num      = numToBuff\n  static big      = bigToBuff\n  static bin      = binToBuff\n  static raw      = rawToBuff\n  static str      = strToBuff\n  static hex      = hexToBuff\n  static bytes    = buffer\n  static json     = jsonToBuff\n  static base64   = base64ToBuff\n  static b64url   = b64urlToBuff\n  static bech32   = bech32ToBuff\n  static bech32m  = bech32mToBuff\n  static b58chk   = b58chkToBuff\n  static encode   = fmt.strToBytes\n  static decode   = fmt.bytesToStr\n  static parse    = parse_data\n  static is_bytes = util.is_bytes\n  static is_hex   = util.is_hex\n  static is_equal = is_equal\n\n  static random (size = 32) : Buff {\n    const rand = randomBytes(size)\n    return new Buff(rand, size)\n  }\n\n  static now (size = 4) : Buff {\n    const stamp = Math.floor(Date.now() / 1000)\n    return new Buff(stamp, size)\n  }\n\n  constructor (\n    data    : Bytes | Bytes[] | ArrayBuffer,\n    size   ?: number,\n    endian ?: Endian\n  ) {\n    if (\n      data instanceof Buff &&\n      size === undefined\n    ) {\n      return data\n    }\n\n    const buffer = fmt.buffer_data(data, size, endian)\n    super(buffer)\n  }\n\n  get arr () : number[] {\n    return [ ...this ]\n  }\n\n  get num () : number {\n    return this.to_num()\n  }\n\n  get big () : bigint {\n    return this.to_big()\n  }\n\n  get str () : string {\n    return this.to_str()\n  }\n\n  get hex () : string {\n    return this.to_hex()\n  }\n\n  get raw () : Uint8Array {\n    return new Uint8Array(this)\n  }\n\n  get bin () : string {\n    return this.to_bin()\n  }\n\n  get b58chk () : string {\n    return this.to_b58chk()\n  }\n\n  get base64 () : string {\n    return this.to_base64()\n  }\n\n  get b64url () : string {\n    return this.to_b64url()\n  }\n\n  get digest () : Buff {\n    return this.to_hash()\n  }\n\n  get id () : string {\n    return this.to_hash().hex\n  }\n\n  get stream () : Stream {\n    return new Stream(this)\n  }\n\n  to_num (endian : Endian = 'be') : number {\n    const bytes = (endian === 'be')\n      ? this.reverse()\n      : this\n    return fmt.bytesToNum(bytes)\n  }\n\n  to_big (endian : Endian = 'be') : bigint {\n    const bytes = (endian === 'be')\n      ? this.reverse()\n      : this\n    return fmt.bytesToBig(bytes)\n  }\n\n  to_bin () : string {\n    return fmt.bytesToBin(this)\n  }\n\n  to_hash () : Buff {\n    const digest = sha256(this)\n    return new Buff(digest)\n  }\n\n  to_json <T = any> (reviver ?: Reviver) : T {\n    if (reviver === undefined) {\n      reviver = util.bigint_reviver\n    }\n    const str = fmt.bytesToStr(this)\n    return JSON.parse(str, reviver)\n  }\n\n  to_bech32 (\n    prefix : string,\n    limit ?: number\n  ) : string {\n    const { encode, to_words } = encoder.Bech32\n    const words = to_words(this)\n    return encode(prefix, words, limit)\n  }\n\n  to_bech32m (\n    prefix : string,\n    limit ?: number\n  ) : string {\n    const { encode, to_words } = encoder.Bech32m\n    const words = to_words(this)\n    return encode(prefix, words, limit)\n  }\n\n  to_str    () : string     { return fmt.bytesToStr(this) }\n  to_hex    () : string     { return fmt.bytesToHex(this) }\n  to_bytes  () : Uint8Array { return new Uint8Array(this) }\n  to_b58chk () : string     { return encoder.B58chk.encode(this) }\n  to_base64 () : string     { return encoder.Base64.encode(this) }\n  to_b64url () : string     { return encoder.B64url.encode(this) }\n\n  append (data : Bytes) : Buff {\n    return Buff.join([ this, Buff.bytes(data) ])\n  }\n\n  equals (data : Bytes) : boolean {\n    return buffer(data).hex === this.hex\n  }\n\n  prepend (data : Bytes) : Buff {\n    return Buff.join([ Buff.bytes(data), this ])\n  }\n\n  reverse () : Buff {\n    const arr = new Uint8Array(this).reverse()\n    return new Buff(arr)\n  }\n\n  slice (start ?: number, end ?: number) : Buff {\n    const arr = new Uint8Array(this).slice(start, end)\n    return new Buff(arr)\n  }\n\n  set (array : ArrayLike<number>, offset ?: number) : void {\n    this.set(array, offset)\n  }\n\n  subarray (begin ?: number, end ?: number) : Buff {\n    const arr = new Uint8Array(this).subarray(begin, end)\n    return new Buff(arr)\n  }\n\n  write (bytes : Bytes, offset ?: number) : void {\n    const b = Buff.bytes(bytes)\n    this.set(b, offset)\n  }\n\n  add_varint (endian ?: Endian) : Buff {\n    const size = Buff.calc_varint(this.length, endian)\n    return Buff.join([ size, this ])\n  }\n\n  toJSON () {\n    return this.hex\n  }\n\n  toString () {\n    return this.hex\n  }\n\n  static from (data : Uint8Array | number[]) : Buff {\n    return new Buff(Uint8Array.from(data))\n  }\n\n  static of (...args : number[]) : Buff {\n    return new Buff(Uint8Array.of(...args))\n  }\n\n  static join (arr : Bytes[]) : Buff {\n    const bytes  = arr.map(e => Buff.bytes(e))\n    const joined = util.join_array(bytes)\n    return new Buff(joined)\n  }\n\n  static sort (arr : Bytes[], size ?: number) : Buff[] {\n    const hex = arr.map(e => buffer(e, size).hex)\n    hex.sort()\n    return hex.map(e => Buff.hex(e, size))\n  }\n\n  static calc_varint (num : number, endian ?: Endian) : Buff {\n    if (num < 0xFD) {\n      return Buff.num(num, 1)\n    } else if (num < 0x10000) {\n      return Buff.of(0xFD, ...Buff.num(num, 2, endian))\n    } else if (num < 0x100000000) {\n      return Buff.of(0xFE, ...Buff.num(num, 4, endian))\n    } else if (BigInt(num) < 0x10000000000000000n) {\n      return Buff.of(0xFF, ...Buff.num(num, 8, endian))\n    } else {\n      throw new Error(`Value is too large: ${num}`)\n    }\n  }\n}\n\nfunction numToBuff (\n  number  : number,\n  size   ?: number,\n  endian ?: Endian\n) : Buff {\n  return new Buff(number, size, endian)\n}\n\nfunction binToBuff (\n  data    : string,\n  size   ?: number,\n  endian ?: Endian\n) : Buff {\n  return new Buff(fmt.binToBytes(data), size, endian)\n}\n\nfunction bigToBuff (\n  bigint  : bigint,\n  size   ?: number,\n  endian ?: Endian\n) : Buff {\n  return new Buff(bigint, size, endian)\n}\n\nfunction rawToBuff (\n  data    : Uint8Array,\n  size   ?: number,\n  endian ?: Endian\n) : Buff {\n  return new Buff(data, size, endian)\n}\n\nfunction strToBuff (\n  data    : string,\n  size   ?: number,\n  endian ?: Endian\n) : Buff {\n  return new Buff(fmt.strToBytes(data), size, endian)\n}\n\nfunction hexToBuff (\n  data    : string,\n  size   ?: number,\n  endian ?: Endian\n) : Buff {\n  return new Buff(data, size, endian)\n}\n\nfunction jsonToBuff <T> (\n  data      : T,\n  replacer ?: Replacer\n) : Buff {\n  if (replacer === undefined) {\n    replacer = util.bigint_replacer\n  }\n  const str = JSON.stringify(data, replacer)\n  return new Buff(fmt.strToBytes(str))\n}\n\nfunction base64ToBuff (\n  data : string\n) : Buff {\n  return new Buff(encoder.Base64.decode(data))\n}\n\nfunction b64urlToBuff (\n  data : string\n) : Buff {\n  return new Buff(encoder.B64url.decode(data))\n}\n\nfunction bech32ToBuff (\n  data        : string,\n  limit      ?: number | false,\n  chk_prefix ?: string\n) : Buff {\n  const { decode, to_bytes } = encoder.Bech32\n  const { prefix, words } = decode(data, limit)\n  const bytes = to_bytes(words)\n  if (typeof chk_prefix === 'string') {\n    assert.is_prefix(prefix, chk_prefix)\n  }\n  return new Buff(bytes)\n}\n\nfunction bech32mToBuff (\n  data        : string,\n  limit      ?: number | false,\n  chk_prefix ?: string\n) : Buff {\n  const { decode, to_bytes } = encoder.Bech32m\n  const { prefix, words } = decode(data, limit)\n  const bytes = to_bytes(words)\n  if (typeof chk_prefix === 'string') {\n    assert.is_prefix(prefix, chk_prefix)\n  }\n  return new Buff(bytes)\n}\n\nfunction b58chkToBuff (\n  data : string\n) : Buff {\n  return new Buff(encoder.B58chk.decode(data))\n}\n\nfunction parse_data (\n  data_blob  : Bytes,\n  chunk_size : number,\n  total_size : number\n) : Buff[] {\n  const bytes  = fmt.buffer_data(data_blob)\n  const chunks = util.parse_data(bytes, chunk_size, total_size)\n  return chunks.map(e => Buff.bytes(e))\n}\n\nfunction is_equal (a : Bytes, b : Bytes) : boolean {\n  return new Buff(a).hex === new Buff(b).hex\n}\n\nexport function buffer (\n  bytes : Bytes | Bytes[] | ArrayBuffer,\n  size ?: number,\n  end  ?: Endian\n) : Buff {\n  return new Buff(bytes, size, end)\n}\n\nexport class Stream {\n  public size : number\n  public data : Uint8Array\n\n  constructor (data : Bytes) {\n    this.data = Buff.bytes(data)\n    this.size = this.data.length\n  }\n\n  peek (size : number) : Buff {\n    if (size > this.size) {\n      throw new Error(`Size greater than stream: ${size} > ${this.size}`)\n    }\n    return new Buff(this.data.slice(0, size))\n  }\n\n  read (size : number) : Buff {\n    const chunk = this.peek(size)\n    this.data = this.data.slice(size)\n    this.size = this.data.length\n    return chunk\n  }\n\n  read_varint (endian ?: Endian) : number {\n    const num = this.read(1).num\n    switch (true) {\n      case (num >= 0 && num < 0xFD):\n        return num\n      case (num === 0xFD):\n        return this.read(2).to_num(endian)\n      case (num === 0xFE):\n        return this.read(4).to_num(endian)\n      case (num === 0xFF):\n        return this.read(8).to_num(endian)\n      default:\n        throw new Error(`Varint is out of range: ${num}`)\n    }\n  }\n}\n", "/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean, Hash, toBytes, type CHash, type Input } from './utils.ts';\n\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    ahash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    clean(pad);\n  }\n  update(buf: Input): this {\n    aexists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    abytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest(): Uint8Array {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  clone(): HMAC<T> {\n    return this._cloneInto();\n  }\n  destroy(): void {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac: {\n  (hash: CHash, key: Input, message: Input): Uint8Array;\n  create(hash: CHash, key: Input): HMAC<any>;\n} = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\nexport function abytes(item: unknown): void {\n  if (!isBytes(item)) throw new Error('Uint8Array expected');\n}\n\nexport function abool(title: string, value: boolean): void {\n  if (typeof value !== 'boolean') throw new Error(title + ' boolean expected, got ' + value);\n}\n\n// Used in weierstrass, der\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? '0' + hex : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean =\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function';\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  abytes(bytes);\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(title + ' must be hex string or Uint8Array');\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Is positive bigint\nconst isPosBig = (n: bigint) => typeof n === 'bigint' && _0n <= n;\n\nexport function inRange(n: bigint, min: bigint, max: bigint): boolean {\n  return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title: string, n: bigint, min: bigint, max: bigint): void {\n  // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n  // consider P=256n, min=0n, max=P\n  // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n  // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n  // - our way is the cleanest:               `inRange('x', x, 0n, P)\n  if (!inRange(n, min, max))\n    throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n * TODO: merge with nLength in modular\n */\nexport function bitLen(n: bigint): number {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number): bigint {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n: bigint, pos: number, value: boolean): bigint {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number): bigint => (_1n << BigInt(n)) - _1n;\n\n// DRBG\n\nconst u8n = (len: number) => new Uint8Array(len); // creates Uint8Array\nconst u8fr = (arr: ArrayLike<number>) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n(0)) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any): boolean => typeof val === 'bigint',\n  function: (val: any): boolean => typeof val === 'function',\n  boolean: (val: any): boolean => typeof val === 'boolean',\n  string: (val: any): boolean => typeof val === 'string',\n  stringOrUint8Array: (val: any): boolean => typeof val === 'string' || isBytes(val),\n  isSafeInteger: (val: any): boolean => Number.isSafeInteger(val),\n  array: (val: any): boolean => Array.isArray(val),\n  field: (val: any, object: any): any => (object as any).Fp.isValid(val),\n  hash: (val: any): boolean => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n): T {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function') throw new Error('invalid validator function');\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        'param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n\n/**\n * throws not implemented error\n */\nexport const notImplemented = (): never => {\n  throw new Error('not implemented');\n};\n\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized<T extends object, R, O extends any[]>(\n  fn: (arg: T, ...args: O) => R\n): (arg: T, ...args: O) => R {\n  const map = new WeakMap<T, R>();\n  return (arg: T, ...args: O): R => {\n    const val = map.get(arg);\n    if (val !== undefined) return val;\n    const computed = fn(arg, ...args);\n    map.set(arg, computed);\n    return computed;\n  };\n}\n", "/**\n * Utils for modular division and finite fields.\n * A finite field over 11 is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { anumber } from '@noble/hashes/utils';\nimport {\n  bitMask,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  numberToBytesBE,\n  numberToBytesLE,\n  validateObject,\n} from './utils.ts';\n\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _8n = /* @__PURE__ */ BigInt(8);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * TODO: remove.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  return FpPow(Field(modulo), num, power);\n}\n\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n) throw new Error('invert: expected non-zero number');\n  if (modulo <= _0n) throw new Error('invert: expected positive modulus, got ' + modulo);\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n// Not all roots are possible! Example which will throw:\n// const NUM =\n// n = 72057594037927816n;\n// Fp = Field(BigInt('0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab'));\nfunction sqrt3mod4<T>(Fp: IField<T>, n: T) {\n  const p1div4 = (Fp.ORDER + _1n) / _4n;\n  const root = Fp.pow(n, p1div4);\n  // Throw if root^2 != n\n  if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n  return root;\n}\n\nfunction sqrt5mod8<T>(Fp: IField<T>, n: T) {\n  const p5div8 = (Fp.ORDER - _5n) / _8n;\n  const n2 = Fp.mul(n, _2n);\n  const v = Fp.pow(n2, p5div8);\n  const nv = Fp.mul(n, v);\n  const i = Fp.mul(Fp.mul(nv, _2n), v);\n  const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n  if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n  return root;\n}\n\n// TODO: Commented-out for now. Provide test vectors.\n// Tonelli is too slow for extension fields Fp2.\n// That means we can't use sqrt (c1, c2...) even for initialization constants.\n// if (P % _16n === _9n) return sqrt9mod16;\n// // prettier-ignore\n// function sqrt9mod16<T>(Fp: IField<T>, n: T, p7div16?: bigint) {\n//   if (p7div16 === undefined) p7div16 = (Fp.ORDER + BigInt(7)) / _16n;\n//   const c1 = Fp.sqrt(Fp.neg(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n//   const c2 = Fp.sqrt(c1);             //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n//   const c3 = Fp.sqrt(Fp.neg(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n//   const c4 = p7div16;                 //  4. c4 = (q + 7) / 16        # Integer arithmetic\n//   let tv1 = Fp.pow(n, c4);            //  1. tv1 = x^c4\n//   let tv2 = Fp.mul(c1, tv1);          //  2. tv2 = c1 * tv1\n//   const tv3 = Fp.mul(c2, tv1);        //  3. tv3 = c2 * tv1\n//   let tv4 = Fp.mul(c3, tv1);          //  4. tv4 = c3 * tv1\n//   const e1 = Fp.eql(Fp.sqr(tv2), n);  //  5.  e1 = (tv2^2) == x\n//   const e2 = Fp.eql(Fp.sqr(tv3), n);  //  6.  e2 = (tv3^2) == x\n//   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n//   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n//   const e3 = Fp.eql(Fp.sqr(tv2), n);  //  9.  e3 = (tv2^2) == x\n//   return Fp.cmov(tv1, tv2, e3); // 10.  z = CMOV(tv1, tv2, e3) # Select the sqrt from tv1 and tv2\n// }\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  // Initialization (precomputation).\n  if (P < BigInt(3)) throw new Error('sqrt is not defined for small field');\n  // Factor P - 1 = Q * 2^S, where Q is odd\n  let Q = P - _1n;\n  let S = 0;\n  while (Q % _2n === _0n) {\n    Q /= _2n;\n    S++;\n  }\n\n  // Find the first quadratic non-residue Z >= 2\n  let Z = _2n;\n  const _Fp = Field(P);\n  while (FpLegendre(_Fp, Z) === 1) {\n    // Basic primality test for P. After x iterations, chance of\n    // not finding quadratic non-residue is 2^x, so 2^1000.\n    if (Z++ > 1000) throw new Error('Cannot find square root: probably non-prime P');\n  }\n  // Fast-path; usually done before Z, but we do \"primality test\".\n  if (S === 1) return sqrt3mod4;\n\n  // Slow-path\n  // TODO: test on Fp2 and others\n  let cc = _Fp.pow(Z, Q); // c = z^Q\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    if (Fp.is0(n)) return n;\n    // Check if n is a quadratic residue using Legendre symbol\n    if (FpLegendre(Fp, n) !== 1) throw new Error('Cannot find square root');\n\n    // Initialize variables for the main loop\n    let M = S;\n    let c = Fp.mul(Fp.ONE, cc); // c = z^Q, move cc from field _Fp into field Fp\n    let t = Fp.pow(n, Q); // t = n^Q, first guess at the fudge factor\n    let R = Fp.pow(n, Q1div2); // R = n^((Q+1)/2), first guess at the square root\n\n    // Main loop\n    // while t != 1\n    while (!Fp.eql(t, Fp.ONE)) {\n      if (Fp.is0(t)) return Fp.ZERO; // if t=0 return R=0\n      let i = 1;\n\n      // Find the smallest i >= 1 such that t^(2^i) \u2261 1 (mod P)\n      let t_tmp = Fp.sqr(t); // t^(2^1)\n      while (!Fp.eql(t_tmp, Fp.ONE)) {\n        i++;\n        t_tmp = Fp.sqr(t_tmp); // t^(2^2)...\n        if (i === M) throw new Error('Cannot find square root');\n      }\n\n      // Calculate the exponent for b: 2^(M - i - 1)\n      const exponent = _1n << BigInt(M - i - 1); // bigint is important\n      const b = Fp.pow(c, exponent); // b = 2^(M - i - 1)\n\n      // Update variables\n      M = i;\n      c = Fp.sqr(b); // c = b^2\n      t = Fp.mul(t, c); // t = (t * b^2)\n      R = Fp.mul(R, b); // R = R*b\n    }\n    return R;\n  };\n}\n\n/**\n * Square root for a finite field. Will try optimized versions first:\n *\n * 1. P \u2261 3 (mod 4)\n * 2. P \u2261 5 (mod 8)\n * 3. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  // P \u2261 3 (mod 4) => \u221An = n^((P+1)/4)\n  if (P % _4n === _3n) return sqrt3mod4;\n  // P \u2261 5 (mod 8) => Atkin algorithm, page 10 of https://eprint.iacr.org/2012/685.pdf\n  if (P % _8n === _5n) return sqrt5mod8;\n  // P \u2261 9 (mod 16) not implemented, see above\n  // Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint): boolean =>\n  (mod(num, modulo) & _1n) === _1n;\n\n/** Field is not always over prime: for example, Fp2 has ORDER(q)=p^m. */\nexport interface IField<T> {\n  ORDER: bigint;\n  isLE: boolean;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>): IField<T> {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(Fp: IField<T>, num: T, power: bigint): T {\n  if (power < _0n) throw new Error('invalid exponent, negatives unsupported');\n  if (power === _0n) return Fp.ONE;\n  if (power === _1n) return num;\n  let p = Fp.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = Fp.mul(p, d);\n    d = Fp.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * Exception-free. Will return `undefined` for 0 elements.\n * @param passZero map 0 to 0 (instead of undefined)\n */\nexport function FpInvertBatch<T>(Fp: IField<T>, nums: T[], passZero = false): T[] {\n  const inverted = new Array(nums.length).fill(passZero ? Fp.ZERO : undefined);\n  // Walk from first to last, multiply them by each other MOD p\n  const multipliedAcc = nums.reduce((acc, num, i) => {\n    if (Fp.is0(num)) return acc;\n    inverted[i] = acc;\n    return Fp.mul(acc, num);\n  }, Fp.ONE);\n  // Invert last element\n  const invertedAcc = Fp.inv(multipliedAcc);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (Fp.is0(num)) return acc;\n    inverted[i] = Fp.mul(acc, inverted[i]);\n    return Fp.mul(acc, num);\n  }, invertedAcc);\n  return inverted;\n}\n\n// TODO: remove\nexport function FpDiv<T>(Fp: IField<T>, lhs: T, rhs: T | bigint): T {\n  return Fp.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, Fp.ORDER) : Fp.inv(rhs));\n}\n\n/**\n * Legendre symbol.\n * Legendre constant is used to calculate Legendre symbol (a | p)\n * which denotes the value of a^((p-1)/2) (mod p).\n *\n * * (a | p) \u2261 1    if a is a square (mod p), quadratic residue\n * * (a | p) \u2261 -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) \u2261 0    if a \u2261 0 (mod p)\n */\nexport function FpLegendre<T>(Fp: IField<T>, n: T): -1 | 0 | 1 {\n  // We can use 3rd argument as optional cache of this value\n  // but seems unneeded for now. The operation is very fast.\n  const p1mod2 = (Fp.ORDER - _1n) / _2n;\n  const powered = Fp.pow(n, p1mod2);\n  const yes = Fp.eql(powered, Fp.ONE);\n  const zero = Fp.eql(powered, Fp.ZERO);\n  const no = Fp.eql(powered, Fp.neg(Fp.ONE));\n  if (!yes && !zero && !no) throw new Error('invalid Legendre symbol result');\n  return yes ? 1 : zero ? 0 : -1;\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(Fp: IField<T>, n: T): boolean {\n  const l = FpLegendre(Fp, n);\n  return l === 1;\n}\n\n// CURVE.n lengths\nexport function nLength(\n  n: bigint,\n  nBitLength?: number\n): {\n  nBitLength: number;\n  nByteLength: number;\n} {\n  // Bit size, byte size of CURVE.n\n  if (nBitLength !== undefined) anumber(nBitLength);\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n  let sqrtP: ReturnType<typeof FpSqrt>; // cached sqrtP\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    isLE,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error('invalid field element: expected bigint, got ' + typeof num);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt:\n      redef.sqrt ||\n      ((n) => {\n        if (!sqrtP) sqrtP = FpSqrt(ORDER);\n        return sqrtP(f, n);\n      }),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n    // TODO: we don't need it here, move out to separate fn\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // We can't move this out because Fp6, Fp12 implement it\n    // and it's unclear what to return in there.\n    cmov: (a, b, c) => (c ? b : a),\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T): T {\n  if (!Fp.isOdd) throw new Error(\"Field doesn't have isOdd\");\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T): T {\n  if (!Fp.isOdd) throw new Error(\"Field doesn't have isOdd\");\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(\n      'hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen\n    );\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n  const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { type IField, nLength, validateField } from './modular.ts';\nimport { bitLen, bitMask, validateObject } from './utils.ts';\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\nfunction constTimeNegate<T extends Group<T>>(condition: boolean, item: T): T {\n  const neg = item.negate();\n  return condition ? neg : item;\n}\n\nfunction validateW(W: number, bits: number) {\n  if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n    throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\n\n/** Internal wNAF opts for specific W and scalarBits */\nexport type WOpts = {\n  windows: number;\n  windowSize: number;\n  mask: bigint;\n  maxNumber: number;\n  shiftBy: bigint;\n};\n\nfunction calcWOpts(W: number, scalarBits: number): WOpts {\n  validateW(W, scalarBits);\n  const windows = Math.ceil(scalarBits / W) + 1; // W=8 33. Not 32, because we skip zero\n  const windowSize = 2 ** (W - 1); // W=8 128. Not 256, because we skip zero\n  const maxNumber = 2 ** W; // W=8 256\n  const mask = bitMask(W); // W=8 255 == mask 0b11111111\n  const shiftBy = BigInt(W); // W=8 8\n  return { windows, windowSize, mask, maxNumber, shiftBy };\n}\n\nfunction calcOffsets(n: bigint, window: number, wOpts: WOpts) {\n  const { windowSize, mask, maxNumber, shiftBy } = wOpts;\n  let wbits = Number(n & mask); // extract W bits.\n  let nextN = n >> shiftBy; // shift number by W bits.\n\n  // What actually happens here:\n  // const highestBit = Number(mask ^ (mask >> 1n));\n  // let wbits2 = wbits - 1; // skip zero\n  // if (wbits2 & highestBit) { wbits2 ^= Number(mask); // (~);\n\n  // split if bits > max: +224 => 256-32\n  if (wbits > windowSize) {\n    // we skip zero, which means instead of `>= size-1`, we do `> size`\n    wbits -= maxNumber; // -32, can be maxNumber - wbits, but then we need to set isNeg here.\n    nextN += _1n; // +256 (carry)\n  }\n  const offsetStart = window * windowSize;\n  const offset = offsetStart + Math.abs(wbits) - 1; // -1 because we skip zero\n  const isZero = wbits === 0; // is current window slice a 0?\n  const isNeg = wbits < 0; // is current window slice negative?\n  const isNegF = window % 2 !== 0; // fake random statement for noise\n  const offsetF = offsetStart; // fake offset for noise\n  return { nextN, offset, isZero, isNeg, isNegF, offsetF };\n}\n\nfunction validateMSMPoints(points: any[], c: any) {\n  if (!Array.isArray(points)) throw new Error('array expected');\n  points.forEach((p, i) => {\n    if (!(p instanceof c)) throw new Error('invalid point at index ' + i);\n  });\n}\nfunction validateMSMScalars(scalars: any[], field: any) {\n  if (!Array.isArray(scalars)) throw new Error('array of scalars expected');\n  scalars.forEach((s, i) => {\n    if (!field.isValid(s)) throw new Error('invalid scalar at index ' + i);\n  });\n}\n\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes.\n// Allows to make points frozen / immutable.\nconst pointPrecomputes = new WeakMap<any, any[]>();\nconst pointWindowSizes = new WeakMap<any, number>();\n\nfunction getW(P: any): number {\n  return pointWindowSizes.get(P) || 1;\n}\n\nexport type IWNAF<T extends Group<T>> = {\n  constTimeNegate: <T extends Group<T>>(condition: boolean, item: T) => T;\n  hasPrecomputes(elm: T): boolean;\n  unsafeLadder(elm: T, n: bigint, p?: T): T;\n  precomputeWindow(elm: T, W: number): Group<T>[];\n  getPrecomputes(W: number, P: T, transform: Mapper<T>): T[];\n  wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T };\n  wNAFUnsafe(W: number, precomputes: T[], n: bigint, acc?: T): T;\n  wNAFCached(P: T, n: bigint, transform: Mapper<T>): { p: T; f: T };\n  wNAFCachedUnsafe(P: T, n: bigint, transform: Mapper<T>, prev?: T): T;\n  setWindowSize(P: T, W: number): void;\n};\n\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / \uD835\uDC4A) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number): IWNAF<T> {\n  return {\n    constTimeNegate,\n\n    hasPrecomputes(elm: T) {\n      return getW(elm) !== 1;\n    },\n\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint, p = c.ZERO) {\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(\uD835\uDC4A\u22121) * (Math.ceil(\uD835\uDC5B / \uD835\uDC4A) + 1), where:\n     * - \uD835\uDC4A is the window size\n     * - \uD835\uDC5B is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @param elm Point instance\n     * @param W window size\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = calcWOpts(W, bits);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // i=1, bc we skip 0\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // Smaller version:\n      // https://github.com/paulmillr/noble-secp256k1/blob/47cb1669b6e506ad66b35fe7d76132ae97465da2/index.ts#L502-L541\n      // TODO: check the scalar is less than group order?\n      // wNAF behavior is undefined otherwise. But have to carefully remove\n      // other checks before wNAF. ORDER == bits here.\n      // Accumulators\n      let p = c.ZERO;\n      let f = c.BASE;\n      // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n      // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n      // there is negate now: it is possible that negated element from low value\n      // would be the same as high element, which will create carry into next window.\n      // It's not obvious how this can fail, but still worth investigating later.\n      const wo = calcWOpts(W, bits);\n      for (let window = 0; window < wo.windows; window++) {\n        // (n === _0n) is handled and not early-exited. isEven and offsetF are used for noise\n        const { nextN, offset, isZero, isNeg, isNegF, offsetF } = calcOffsets(n, window, wo);\n        n = nextN;\n        if (isZero) {\n          // bits are 0: add garbage to fake point\n          // Important part for const-time getPublicKey: add random \"noise\" point to f.\n          f = f.add(constTimeNegate(isNegF, precomputes[offsetF]));\n        } else {\n          // bits are 1: add to result point\n          p = p.add(constTimeNegate(isNeg, precomputes[offset]));\n        }\n      }\n      // Return both real and fake points: JIT won't eliminate f.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    /**\n     * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @param acc accumulator point to add result of multiplication\n     * @returns point\n     */\n    wNAFUnsafe(W: number, precomputes: T[], n: bigint, acc: T = c.ZERO): T {\n      const wo = calcWOpts(W, bits);\n      for (let window = 0; window < wo.windows; window++) {\n        if (n === _0n) break; // Early-exit, skip 0 value\n        const { nextN, offset, isZero, isNeg } = calcOffsets(n, window, wo);\n        n = nextN;\n        if (isZero) {\n          // Window bits are 0: skip processing.\n          // Move to next window.\n          continue;\n        } else {\n          const item = precomputes[offset];\n          acc = acc.add(isNeg ? item.negate() : item); // Re-using acc allows to save adds in MSM\n        }\n      }\n      return acc;\n    },\n\n    getPrecomputes(W: number, P: T, transform: Mapper<T>): T[] {\n      // Calculate precomputes on a first run, reuse them after\n      let comp = pointPrecomputes.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) pointPrecomputes.set(P, transform(comp));\n      }\n      return comp;\n    },\n\n    wNAFCached(P: T, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      const W = getW(P);\n      return this.wNAF(W, this.getPrecomputes(W, P, transform), n);\n    },\n\n    wNAFCachedUnsafe(P: T, n: bigint, transform: Mapper<T>, prev?: T): T {\n      const W = getW(P);\n      if (W === 1) return this.unsafeLadder(P, n, prev); // For W=1 ladder is ~x2 faster\n      return this.wNAFUnsafe(W, this.getPrecomputes(W, P, transform), n, prev);\n    },\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n\n    setWindowSize(P: T, W: number) {\n      validateW(W, bits);\n      pointWindowSizes.set(P, W);\n      pointPrecomputes.delete(P);\n    },\n  };\n}\n\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster than precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger<T extends Group<T>>(\n  c: GroupConstructor<T>,\n  fieldN: IField<bigint>,\n  points: T[],\n  scalars: bigint[]\n): T {\n  // If we split scalars by some window (let's say 8 bits), every chunk will only\n  // take 256 buckets even if there are 4096 scalars, also re-uses double.\n  // TODO:\n  // - https://eprint.iacr.org/2024/750.pdf\n  // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n  // 0 is accepted in scalars\n  validateMSMPoints(points, c);\n  validateMSMScalars(scalars, fieldN);\n  const plength = points.length;\n  const slength = scalars.length;\n  if (plength !== slength) throw new Error('arrays of points and scalars must have equal length');\n  // if (plength === 0) throw new Error('array must be of length >= 2');\n  const zero = c.ZERO;\n  const wbits = bitLen(BigInt(plength));\n  let windowSize = 1; // bits\n  if (wbits > 12) windowSize = wbits - 3;\n  else if (wbits > 4) windowSize = wbits - 2;\n  else if (wbits > 0) windowSize = 2;\n  const MASK = bitMask(windowSize);\n  const buckets = new Array(Number(MASK) + 1).fill(zero); // +1 for zero array\n  const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n  let sum = zero;\n  for (let i = lastBits; i >= 0; i -= windowSize) {\n    buckets.fill(zero);\n    for (let j = 0; j < slength; j++) {\n      const scalar = scalars[j];\n      const wbits = Number((scalar >> BigInt(i)) & MASK);\n      buckets[wbits] = buckets[wbits].add(points[j]);\n    }\n    let resI = zero; // not using this will do small speed-up, but will lose ct\n    // Skip first bucket, because it is zero\n    for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n      sumI = sumI.add(buckets[j]);\n      resI = resI.add(sumI);\n    }\n    sum = sum.add(resI);\n    if (i !== 0) for (let j = 0; j < windowSize; j++) sum = sum.double();\n  }\n  return sum as T;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe<T extends Group<T>>(\n  c: GroupConstructor<T>,\n  fieldN: IField<bigint>,\n  points: T[],\n  windowSize: number\n): (scalars: bigint[]) => T {\n  /**\n   * Performance Analysis of Window-based Precomputation\n   *\n   * Base Case (256-bit scalar, 8-bit window):\n   * - Standard precomputation requires:\n   *   - 31 additions per scalar \u00D7 256 scalars = 7,936 ops\n   *   - Plus 255 summary additions = 8,191 total ops\n   *   Note: Summary additions can be optimized via accumulator\n   *\n   * Chunked Precomputation Analysis:\n   * - Using 32 chunks requires:\n   *   - 255 additions per chunk\n   *   - 256 doublings\n   *   - Total: (255 \u00D7 32) + 256 = 8,416 ops\n   *\n   * Memory Usage Comparison:\n   * Window Size | Standard Points | Chunked Points\n   * ------------|-----------------|---------------\n   *     4-bit   |     520         |      15\n   *     8-bit   |    4,224        |     255\n   *    10-bit   |   13,824        |   1,023\n   *    16-bit   |  557,056        |  65,535\n   *\n   * Key Advantages:\n   * 1. Enables larger window sizes due to reduced memory overhead\n   * 2. More efficient for smaller scalar counts:\n   *    - 16 chunks: (16 \u00D7 255) + 256 = 4,336 ops\n   *    - ~2x faster than standard 8,191 ops\n   *\n   * Limitations:\n   * - Not suitable for plain precomputes (requires 256 constant doublings)\n   * - Performance degrades with larger scalar counts:\n   *   - Optimal for ~256 scalars\n   *   - Less efficient for 4096+ scalars (Pippenger preferred)\n   */\n  validateW(windowSize, fieldN.BITS);\n  validateMSMPoints(points, c);\n  const zero = c.ZERO;\n  const tableSize = 2 ** windowSize - 1; // table size (without zero)\n  const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n  const MASK = bitMask(windowSize);\n  const tables = points.map((p: T) => {\n    const res = [];\n    for (let i = 0, acc = p; i < tableSize; i++) {\n      res.push(acc);\n      acc = acc.add(p);\n    }\n    return res;\n  });\n  return (scalars: bigint[]): T => {\n    validateMSMScalars(scalars, fieldN);\n    if (scalars.length > points.length)\n      throw new Error('array of scalars must be smaller than array of points');\n    let res = zero;\n    for (let i = 0; i < chunks; i++) {\n      // No need to double if accumulator is still zero.\n      if (res !== zero) for (let j = 0; j < windowSize; j++) res = res.double();\n      const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n      for (let j = 0; j < scalars.length; j++) {\n        const n = scalars[j];\n        const curr = Number((n >> shiftBy) & MASK);\n        if (!curr) continue; // skip zero scalars chunks\n        res = res.add(tables[j][curr - 1]);\n      }\n    }\n    return res;\n  };\n}\n\n/**\n * Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n * Though generator can be different (Fp2 / Fp6 for BLS).\n */\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(\n  curve: BasicCurve<FP> & T\n): Readonly<\n  {\n    readonly nBitLength: number;\n    readonly nByteLength: number;\n  } & BasicCurve<FP> &\n    T & {\n      p: bigint;\n    }\n> {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/**\n * Short Weierstrass curve methods. The formula is: y\u00B2 = x\u00B3 + ax + b.\n *\n * ### Parameters\n *\n * To initialize a weierstrass curve, one needs to pass following params:\n *\n * * a: formula param\n * * b: formula param\n * * Fp: finite field of prime characteristic P; may be complex (Fp2). Arithmetics is done in field\n * * n: order of prime subgroup a.k.a total amount of valid curve points\n * * Gx: Base point (x, y) aka generator point. Gx = x coordinate\n * * Gy: ...y coordinate\n * * h: cofactor, usually 1. h*n = curve group order (n is only subgroup order)\n * * lowS: whether to enable (default) or disable \"low-s\" non-malleable signatures\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// prettier-ignore\nimport {\n  pippenger, validateBasic, wNAF,\n  type AffinePoint, type BasicCurve, type Group, type GroupConstructor\n} from './curve.ts';\n// prettier-ignore\nimport {\n  Field,\n  FpInvertBatch,\n  getMinHashLength, invert, mapHashToField, mod, validateField,\n  type IField\n} from './modular.ts';\n// prettier-ignore\nimport {\n  aInRange, abool,\n  bitMask,\n  bytesToHex, bytesToNumberBE, concatBytes, createHmacDrbg, ensureBytes, hexToBytes,\n  inRange, isBytes, memoized, numberToBytesBE, numberToHexUnpadded, validateObject,\n  type CHash, type Hex, type PrivKey\n} from './utils.ts';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\n/**\n * When Weierstrass curve has `a=0`, it becomes Koblitz curve.\n * Koblitz curves allow using **efficiently-computable GLV endomorphism \u03C8**.\n * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n *\n * Endomorphism consists of beta, lambda and splitScalar:\n *\n * 1. GLV endomorphism \u03C8 transforms a point: `P = (x, y) \u21A6 \u03C8(P) = (\u03B2\u00B7x mod p, y)`\n * 2. GLV scalar decomposition transforms a scalar: `k \u2261 k\u2081 + k\u2082\u00B7\u03BB (mod n)`\n * 3. Then these are combined: `k\u00B7P = k\u2081\u00B7P + k\u2082\u00B7\u03C8(P)`\n * 4. Two 128-bit point-by-scalar multiplications + one point addition is faster than\n *    one 256-bit multiplication.\n *\n * where\n * * beta: \u03B2 \u2208 F\u209A with \u03B2\u00B3 = 1, \u03B2 \u2260 1\n * * lambda: \u03BB \u2208 F\u2099 with \u03BB\u00B3 = 1, \u03BB \u2260 1\n * * splitScalar decomposes k \u21A6 k\u2081, k\u2082, by using reduced basis vectors.\n *   Gauss lattice reduction calculates them from initial basis vectors `(n, 0), (-\u03BB, 0)`\n *\n * Check out `test/misc/endomorphism.js` and\n * [gist](https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066).\n */\nexport type EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts;\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\nexport type Entropy = Hex | boolean;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean; format?: 'compact' | 'der' | undefined };\n\nfunction validateSigVerOpts(opts: SignOpts | VerOpts) {\n  if (opts.lowS !== undefined) abool('lowS', opts.lowS);\n  if (opts.prehash !== undefined) abool('prehash', opts.prehash);\n}\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  toAffine(iz?: T): AffinePoint<T>;\n  toHex(isCompressed?: boolean): string;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n  msm(points: ProjPointType<T>[], scalars: bigint[]): ProjPointType<T>;\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nexport type CurvePointsTypeWithLength<T> = Readonly<\n  CurvePointsType<T> & { nByteLength: number; nBitLength: number }\n>;\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>): CurvePointsTypeWithLength<T> {\n  const opts = validateBasic(curve);\n  validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowInfinityPoint: 'boolean',\n      allowedPrivateKeyLengths: 'array',\n      clearCofactor: 'function',\n      fromBytes: 'function',\n      isTorsionFree: 'function',\n      toBytes: 'function',\n      wrapPrivateKey: 'boolean',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('invalid endo: CURVE.a must be 0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('invalid endo: expected \"beta\": bigint and \"splitScalar\": function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  CURVE: ReturnType<typeof validatePointOpts<T>>;\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\nexport class DERErr extends Error {\n  constructor(m = '') {\n    super(m);\n  }\n}\nexport type IDER = {\n  // asn.1 DER encoding utils\n  Err: typeof DERErr;\n  // Basic building block is TLV (Tag-Length-Value)\n  _tlv: {\n    encode: (tag: number, data: string) => string;\n    // v - value, l - left bytes (unparsed)\n    decode(tag: number, data: Uint8Array): { v: Uint8Array; l: Uint8Array };\n  };\n  // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n  // since we always use positive integers here. It must always be empty:\n  // - add zero byte if exists\n  // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n  _int: {\n    encode(num: bigint): string;\n    decode(data: Uint8Array): bigint;\n  };\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint };\n  hexFromSig(sig: { r: bigint; s: bigint }): string;\n};\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER: IDER = {\n  // asn.1 DER encoding utils\n  Err: DERErr,\n  // Basic building block is TLV (Tag-Length-Value)\n  _tlv: {\n    encode: (tag: number, data: string): string => {\n      const { Err: E } = DER;\n      if (tag < 0 || tag > 256) throw new E('tlv.encode: wrong tag');\n      if (data.length & 1) throw new E('tlv.encode: unpadded data');\n      const dataLen = data.length / 2;\n      const len = numberToHexUnpadded(dataLen);\n      if ((len.length / 2) & 0b1000_0000) throw new E('tlv.encode: long form length too big');\n      // length of length with long form flag\n      const lenLen = dataLen > 127 ? numberToHexUnpadded((len.length / 2) | 0b1000_0000) : '';\n      const t = numberToHexUnpadded(tag);\n      return t + lenLen + len + data;\n    },\n    // v - value, l - left bytes (unparsed)\n    decode(tag: number, data: Uint8Array): { v: Uint8Array; l: Uint8Array } {\n      const { Err: E } = DER;\n      let pos = 0;\n      if (tag < 0 || tag > 256) throw new E('tlv.encode: wrong tag');\n      if (data.length < 2 || data[pos++] !== tag) throw new E('tlv.decode: wrong tlv');\n      const first = data[pos++];\n      const isLong = !!(first & 0b1000_0000); // First bit of first length byte is flag for short/long form\n      let length = 0;\n      if (!isLong) length = first;\n      else {\n        // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n        const lenLen = first & 0b0111_1111;\n        if (!lenLen) throw new E('tlv.decode(long): indefinite length not supported');\n        if (lenLen > 4) throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n        const lengthBytes = data.subarray(pos, pos + lenLen);\n        if (lengthBytes.length !== lenLen) throw new E('tlv.decode: length bytes not complete');\n        if (lengthBytes[0] === 0) throw new E('tlv.decode(long): zero leftmost byte');\n        for (const b of lengthBytes) length = (length << 8) | b;\n        pos += lenLen;\n        if (length < 128) throw new E('tlv.decode(long): not minimal encoding');\n      }\n      const v = data.subarray(pos, pos + length);\n      if (v.length !== length) throw new E('tlv.decode: wrong value length');\n      return { v, l: data.subarray(pos + length) };\n    },\n  },\n  // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n  // since we always use positive integers here. It must always be empty:\n  // - add zero byte if exists\n  // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n  _int: {\n    encode(num: bigint): string {\n      const { Err: E } = DER;\n      if (num < _0n) throw new E('integer: negative integers are not allowed');\n      let hex = numberToHexUnpadded(num);\n      // Pad with zero byte if negative flag is present\n      if (Number.parseInt(hex[0], 16) & 0b1000) hex = '00' + hex;\n      if (hex.length & 1) throw new E('unexpected DER parsing assertion: unpadded hex');\n      return hex;\n    },\n    decode(data: Uint8Array): bigint {\n      const { Err: E } = DER;\n      if (data[0] & 0b1000_0000) throw new E('invalid signature integer: negative');\n      if (data[0] === 0x00 && !(data[1] & 0b1000_0000))\n        throw new E('invalid signature integer: unnecessary leading zero');\n      return bytesToNumberBE(data);\n    },\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E, _int: int, _tlv: tlv } = DER;\n    const data = ensureBytes('signature', hex);\n    const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n    if (seqLeftBytes.length) throw new E('invalid signature: left bytes after parsing');\n    const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n    const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n    if (sLeftBytes.length) throw new E('invalid signature: left bytes after parsing');\n    return { r: int.decode(rBytes), s: int.decode(sBytes) };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    const { _tlv: tlv, _int: int } = DER;\n    const rs = tlv.encode(0x02, int.encode(sig.r));\n    const ss = tlv.encode(0x02, int.encode(sig.s));\n    const seq = rs + ss;\n    return tlv.encode(0x30, seq);\n  },\n};\n\nfunction numToSizedHex(num: bigint, size: number): string {\n  return bytesToHex(numberToBytesBE(num, size));\n}\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>): CurvePointsRes<T> {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n  const Fn = Field(CURVE.n, CURVE.nBitLength);\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y\u00B2 = x\u00B3 + ax + b: Short weierstrass curve formula. Takes x, returns y\u00B2.\n   * @returns y\u00B2\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x\u00B2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x\u00B3 + a * x + b\n  }\n\n  function isValidXY(x: T, y: T): boolean {\n    const left = Fp.sqr(y); // y\u00B2\n    const right = weierstrassEquation(x); // x\u00B3 + ax + b\n    return Fp.eql(left, right);\n  }\n\n  // Validate whether the passed curve params are valid.\n  // Test 1: equation y\u00B2 = x\u00B3 + ax + b should work for generator point.\n  if (!isValidXY(CURVE.Gx, CURVE.Gy)) throw new Error('bad curve params: generator point');\n\n  // Test 2: discriminant \u0394 part should be non-zero: 4a\u00B3 + 27b\u00B2 != 0.\n  // Guarantees curve is genus-1, smooth (non-singular).\n  const _4a3 = Fp.mul(Fp.pow(CURVE.a, _3n), _4n);\n  const _27b2 = Fp.mul(Fp.sqr(CURVE.b), BigInt(27));\n  if (Fp.is0(Fp.add(_4a3, _27b2))) throw new Error('bad curve params: a or b');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return inRange(num, _1n, CURVE.n);\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: N } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (isBytes(key)) key = bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length))\n        throw new Error('invalid private key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(\n        'invalid private key, expected hex or ' + nByteLength + ' bytes, got ' + typeof key\n      );\n    }\n    if (wrapPrivateKey) num = mod(num, N); // disabled by default, enabled for BLS\n    aInRange('private key', num, _1n, N); // num in range [1..N-1]\n    return num;\n  }\n\n  function aprjpoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n\n  // Memoized toAffine / validity check. They are heavy. Points are immutable.\n\n  // Converts Projective point to affine (x, y) coordinates.\n  // Can accept precomputed Z^-1 - for example, from invertBatch.\n  // (X, Y, Z) \u220B (x=X/Z, y=Y/Z)\n  const toAffineMemo = memoized((p: Point, iz?: T): AffinePoint<T> => {\n    const { px: x, py: y, pz: z } = p;\n    // Fast-path for normalized points\n    if (Fp.eql(z, Fp.ONE)) return { x, y };\n    const is0 = p.is0();\n    // If invZ was 0, we return zero point. However we still want to execute\n    // all operations, so we replace invZ with a random number, 1.\n    if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n    const ax = Fp.mul(x, iz);\n    const ay = Fp.mul(y, iz);\n    const zz = Fp.mul(z, iz);\n    if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n    if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n    return { x: ax, y: ay };\n  });\n  // NOTE: on exception this will crash 'cached' and no value will be set.\n  // Otherwise true will be return\n  const assertValidMemo = memoized((p: Point) => {\n    if (p.is0()) {\n      // (0, 1, 0) aka ZERO is invalid in most contexts.\n      // In BLS, ZERO can be serialized, so we allow it.\n      // (0, 0, 0) is invalid representation of ZERO.\n      if (CURVE.allowInfinityPoint && !Fp.is0(p.py)) return;\n      throw new Error('bad point: ZERO');\n    }\n    // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n    const { x, y } = p.toAffine();\n    // Check if x, y are valid field elements\n    if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n    if (!isValidXY(x, y)) throw new Error('bad point: equation left != right');\n    if (!p.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    return true;\n  });\n\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (X, Y, Z) \u220B (x=X/Z, y=Y/Z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    // base / generator point\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    // zero / infinity / identity point\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO); // 0, 1, 0\n    readonly px: T;\n    readonly py: T;\n    readonly pz: T;\n\n    constructor(px: T, py: T, pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py) || Fp.is0(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n      this.px = px;\n      this.py = py;\n      this.pz = pz;\n      Object.freeze(this);\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = FpInvertBatch(\n        Fp,\n        points.map((p) => p.pz)\n      );\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // Multiscalar Multiplication\n    static msm(points: Point[], scalars: bigint[]): Point {\n      return pippenger(Point, Fn, points, scalars);\n    }\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      wnaf.setWindowSize(this, windowSize);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      assertValidMemo(this);\n    }\n\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      aprjpoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      aprjpoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    is0() {\n      return this.equals(Point.ZERO);\n    }\n\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, n, Point.normalizeZ);\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(sc: bigint): Point {\n      const { endo, n: N } = CURVE;\n      aInRange('scalar', sc, _0n, N);\n      const I = Point.ZERO;\n      if (sc === _0n) return I;\n      if (this.is0() || sc === _1n) return this;\n\n      // Case a: no endomorphism. Case b: has precomputes.\n      if (!endo || wnaf.hasPrecomputes(this))\n        return wnaf.wNAFCachedUnsafe(this, sc, Point.normalizeZ);\n\n      // Case c: endomorphism\n      /** See docs for {@link EndomorphismOpts} */\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      const { endo, n: N } = CURVE;\n      aInRange('scalar', scalar, _1n, N);\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      /** See docs for {@link EndomorphismOpts} */\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(scalar);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) \u220B (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      return toAffineMemo(this, iz);\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      abool('isCompressed', isCompressed);\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      abool('isCompressed', isCompressed);\n      return bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const { endo, nBitLength } = CURVE;\n  const wnaf = wNAF(Point, endo ? Math.ceil(nBitLength / 2) : nBitLength);\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(\n  curve: CurveType\n): Readonly<CurveType & { nByteLength: number; nBitLength: number }> {\n  const opts = validateBasic(curve);\n  validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\n/**\n * Creates short weierstrass curve and ECDSA signature methods for it.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, b, p, n, Gx, Gy\n * const curve = weierstrass({ a, b, Fp: Field(p), n, Gx, Gy, h: 1n })\n */\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER, nByteLength, nBitLength } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function modN(a: bigint) {\n    return mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = concatBytes;\n      abool('isCompressed', isCompressed);\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = bytesToNumberBE(tail);\n        if (!inRange(x, _1n, Fp.ORDER)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y\u00B2 = x\u00B3 + ax + b\n        let y: bigint;\n        try {\n          y = Fp.sqrt(y2); // y = y\u00B2 ^ (p+1)/4\n        } catch (sqrtError) {\n          const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n          throw new Error('Point is not on curve' + suffix);\n        }\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        const cl = compressedLen;\n        const ul = uncompressedLen;\n        throw new Error(\n          'invalid Point, expected length of ' + cl + ', or uncompressed ' + ul + ', got ' + len\n        );\n      }\n    },\n  });\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    readonly r: bigint;\n    readonly s: bigint;\n    readonly recovery?: number;\n    constructor(r: bigint, s: bigint, recovery?: number) {\n      aInRange('r', r, _1n, CURVE_ORDER); // r in [1..N]\n      aInRange('s', s, _1n, CURVE_ORDER); // s in [1..N]\n      this.r = r;\n      this.s = s;\n      if (recovery != null) this.recovery = recovery;\n      Object.freeze(this);\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    /**\n     * @todo remove\n     * @deprecated\n     */\n    assertValidity(): void {}\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToSizedHex(radj, Fp.BYTES));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig(this);\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      const l = nByteLength;\n      return numToSizedHex(this.r, l) + numToSizedHex(this.s, l);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = getMinHashLength(CURVE.n);\n      return mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean | undefined {\n    if (typeof item === 'bigint') return false;\n    if (item instanceof Point) return true;\n    const arr = ensureBytes('key', item);\n    const len = arr.length;\n    const fpl = Fp.BYTES;\n    const compLen = fpl + 1; // e.g. 33 for 32\n    const uncompLen = 2 * fpl + 1; // e.g. 65 for 32\n    if (CURVE.allowedPrivateKeyLengths || nByteLength === compLen) {\n      return undefined;\n    } else {\n      return len === compLen || len === uncompLen;\n    }\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA) === true) throw new Error('first arg must be private key');\n    if (isProbPub(publicB) === false) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // Our custom check \"just in case\", for protection against DoS\n      if (bytes.length > 8192) throw new Error('input is too large');\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = bitMask(nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    aInRange('num < 2^' + nBitLength, num, _0n, ORDER_MASK);\n    // works with order, can have different size than numToField!\n    return numberToBytesBE(num, nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order,\n  // this will be invalid at least for P521. Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    validateSigVerOpts(opts);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null && ent !== false) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b \u2208 [1,q\u22121] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G \u00D7 k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1\u22C5G - U2\u22C5P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    const { lowS, prehash, format } = opts;\n\n    // Verify opts, deduce signature format\n    validateSigVerOpts(opts);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    if (format !== undefined && format !== 'compact' && format !== 'der')\n      throw new Error('format must be compact or der');\n    const isHex = typeof sg === 'string' || isBytes(sg);\n    const isObj =\n      !isHex &&\n      !format &&\n      typeof sg === 'object' &&\n      sg !== null &&\n      typeof sg.r === 'bigint' &&\n      typeof sg.s === 'bigint';\n    if (!isHex && !isObj)\n      throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (isObj) _sig = new Signature(sg.r, sg.s);\n      if (isHex) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          if (format !== 'compact') _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n        }\n        if (!_sig && format !== 'der') _sig = Signature.fromCompact(sg);\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      return false;\n    }\n    if (!_sig) return false;\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1\u22C5G + u2\u22C5P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(\n  Fp: IField<T>,\n  Z: T\n): (u: T, v: T) => { isValid: boolean; value: T } {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n): (u: T) => { x: T; y: T } {\n  validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    const tv4_inv = FpInvertBatch(Fp, [tv4], true)[0];\n    x = Fp.mul(x, tv4_inv); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport type { CHash } from './abstract/utils.ts';\nimport { type CurveFn, type CurveType, weierstrass } from './abstract/weierstrass.ts';\n\n/** connects noble-curves to noble-hashes */\nexport function getHash(hash: CHash): {\n  hash: CHash;\n  hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => Uint8Array;\n  randomBytes: typeof randomBytes;\n} {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n/** Same API as @noble/hashes, with ability to create curve with custom hash */\nexport type CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport type CurveFnWithCreate = CurveFn & { create: (hash: CHash) => CurveFn };\n\nexport function createCurve(curveDef: CurveDef, defHash: CHash): CurveFnWithCreate {\n  const create = (hash: CHash): CurveFn => weierstrass({ ...curveDef, ...getHash(hash) });\n  return { ...create(defHash), create };\n}\n", "/**\n * hash-to-curve from RFC 9380.\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F.\n * https://www.rfc-editor.org/rfc/rfc9380\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { AffinePoint, Group, GroupConstructor } from './curve.ts';\nimport { FpInvertBatch, type IField, mod } from './modular.ts';\nimport type { CHash } from './utils.ts';\nimport { abytes, bytesToNumberBE, concatBytes, utf8ToBytes, validateObject } from './utils.ts';\n\nexport type UnicodeOrBytes = string | Uint8Array;\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  anum(value);\n  anum(length);\n  if (value < 0 || value >= 1 << (8 * length)) throw new Error('invalid I2OSP input: ' + value);\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction anum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n/**\n * Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits.\n * [RFC 9380 5.3.1](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1).\n */\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  anum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (lenInBytes > 65535 || ell > 255) throw new Error('expand_message_xmd: invalid lenInBytes');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\n/**\n * Produces a uniformly random byte string using an extendable-output function (XOF) H.\n * 1. The collision resistance of H MUST be at least k bits.\n * 2. H MUST be an XOF that has been proved indifferentiable from\n *    a random oracle under a reasonable cryptographic assumption.\n * [RFC 9380 5.3.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2).\n */\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  anum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F.\n * [RFC 9380 5.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.2).\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'stringOrUint8Array',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  abytes(msg);\n  anum(count);\n  const DST = typeof _DST === 'string' ? utf8ToBytes(_DST) : _DST;\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport type XY<T> = (x: T, y: T) => { x: T; y: T };\nexport type XYRatio<T> = [T[], T[], T[], T[]]; // xn/xd, yn/yd\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: XYRatio<T>): XY<T> {\n  // Make same order as in spec\n  const coeff = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xn, xd, yn, yd] = coeff.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    // 6.6.3\n    // Exceptional cases of iso_map are inputs that cause the denominator of\n    // either rational function to evaluate to zero; such cases MUST return\n    // the identity point on E.\n    const [xd_inv, yd_inv] = FpInvertBatch(field, [xd, yd], true);\n    x = field.mul(xn, xd_inv); // xNum / xDen\n    y = field.mul(y, field.mul(yn, yd_inv)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\n/** Point interface, which curves must implement to work correctly with the module. */\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\nexport type HTFMethod<T> = (msg: Uint8Array, options?: htfBasicOpts) => H2CPoint<T>;\nexport type MapMethod<T> = (scalars: bigint[]) => H2CPoint<T>;\nexport type Hasher<T> = {\n  hashToCurve: HTFMethod<T>;\n  encodeToCurve: HTFMethod<T>;\n  mapToCurve: MapMethod<T>;\n  defaults: Opts & { encodeDST?: UnicodeOrBytes };\n};\n\n/** Creates hash-to-curve methods from EC Point and mapToCurve function. */\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  defaults: Opts & { encodeDST?: UnicodeOrBytes }\n): Hasher<T> {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  function map(num: bigint[]) {\n    return Point.fromAffine(mapToCurve(num));\n  }\n  function clear(initial: H2CPoint<T>) {\n    const P = initial.clearCofactor();\n    if (P.equals(Point.ZERO)) return Point.ZERO; // zero will throw in assert\n    P.assertValidity();\n    return P;\n  }\n\n  return {\n    defaults,\n\n    // Encodes byte string to elliptic curve.\n    // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts): H2CPoint<T> {\n      const u = hash_to_field(msg, 2, { ...defaults, DST: defaults.DST, ...options } as Opts);\n      const u0 = map(u[0]);\n      const u1 = map(u[1]);\n      return clear(u0.add(u1));\n    },\n\n    // Encodes byte string to elliptic curve.\n    // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts): H2CPoint<T> {\n      const u = hash_to_field(msg, 1, { ...defaults, DST: defaults.encodeDST, ...options } as Opts);\n      return clear(map(u[0]));\n    },\n\n    // Same as encodeToCurve, but without hash\n    mapToCurve(scalars: bigint[]): H2CPoint<T> {\n      if (!Array.isArray(scalars)) throw new Error('expected array of bigints');\n      for (const i of scalars)\n        if (typeof i !== 'bigint') throw new Error('expected array of bigints');\n      return clear(map(scalars));\n    },\n  };\n}\n", "/**\n * NIST secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Seems to be rigid (not backdoored)\n * [as per discussion](https://bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975).\n *\n * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n * [See explanation](https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha2';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve, type CurveFnWithCreate } from './_shortw_utils.ts';\nimport { createHasher, type Hasher, type HTFMethod, isogenyMap } from './abstract/hash-to-curve.ts';\nimport { Field, mod, pow2 } from './abstract/modular.ts';\nimport type { Hex, PrivKey } from './abstract/utils.ts';\nimport {\n  aInRange,\n  bytesToNumberBE,\n  concatBytes,\n  ensureBytes,\n  inRange,\n  numberToBytesBE,\n} from './abstract/utils.ts';\nimport { mapToCurveSimpleSWU, type ProjPointType as PointType } from './abstract/weierstrass.ts';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * \u221An = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fpk1.eql(Fpk1.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fpk1 = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\n/**\n * secp256k1 curve, ECDSA and ECDH methods.\n *\n * Field: `2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n`\n *\n * @example\n * ```js\n * import { secp256k1 } from '@noble/curves/secp256k1';\n * const priv = secp256k1.utils.randomPrivateKey();\n * const pub = secp256k1.getPublicKey(priv);\n * const msg = new Uint8Array(32).fill(1); // message hash (not message) in ecdsa\n * const sig = secp256k1.sign(msg, priv); // `{prehash: true}` option is available\n * const isValid = secp256k1.verify(sig, msg, pub) === true;\n * ```\n */\nexport const secp256k1: CurveFnWithCreate = createCurve(\n  {\n    a: _0n,\n    b: BigInt(7),\n    Fp: Fpk1,\n    n: secp256k1N,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    endo: {\n      // Endomorphism, see above\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = /* @__PURE__ */ (() => secp256k1.ProjectivePoint)();\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'\u22C5G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  aInRange('x', x, _1n, secp256k1P); // Fail if x \u2265 p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x\u00B3 + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(num(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'\u2265n. Ret bytes(d'\u22C5G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(num(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'\u22C5G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r \u2265 p.\n    if (!inRange(r, _1n, secp256k1P)) return false;\n    const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s \u2265 n.\n    if (!inRange(s, _1n, secp256k1N)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s\u22C5G - e\u22C5P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) \u2260 r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport type SecpSchnorr = {\n  getPublicKey: typeof schnorrGetPublicKey;\n  sign: typeof schnorrSign;\n  verify: typeof schnorrVerify;\n  utils: {\n    randomPrivateKey: () => Uint8Array;\n    lift_x: typeof lift_x;\n    pointToBytes: (point: PointType<bigint>) => Uint8Array;\n    numberToBytesBE: typeof numberToBytesBE;\n    bytesToNumberBE: typeof bytesToNumberBE;\n    taggedHash: typeof taggedHash;\n    mod: typeof mod;\n  };\n};\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * ```js\n * import { schnorr } from '@noble/curves/secp256k1';\n * const priv = schnorr.utils.randomPrivateKey();\n * const pub = schnorr.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, priv);\n * const isValid = schnorr.verify(sig, msg, pub);\n * ```\n */\nexport const schnorr: SecpSchnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fpk1,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n  }))();\n/** Hashing / encoding to secp256k1 points / field. RFC 9380 methods. */\nexport const secp256k1_hasher: Hasher<bigint> = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fpk1.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    } as const\n  ))();\n\nexport const hashToCurve: HTFMethod<bigint> = /* @__PURE__ */ (() =>\n  secp256k1_hasher.hashToCurve)();\n\nexport const encodeToCurve: HTFMethod<bigint> = /* @__PURE__ */ (() =>\n  secp256k1_hasher.encodeToCurve)();\n", "/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\n\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is boolean. */\nexport function abool(b: boolean): void {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n/** Asserts something is positive integer. */\nexport function anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Asserts something is Uint8Array. */\nexport function abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/**\n * Asserts something is hash\n * TODO: remove\n * @deprecated\n */\nexport function ahash(h: IHash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.createHasher');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\nexport type IHash = {\n  (data: string | Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays: TypedArray[]): void {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n// Used in micro\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  return BigInt(hex === '' ? '0' : '0x' + hex); // Big Endian\n}\n\n// Used in ff1\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\n\n// Used in micro, ff1\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\n\n// TODO: remove\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async (): Promise<void> => {};\n\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\n// TODO: remove\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: string | Uint8Array): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  else if (isBytes(data)) data = copyBytes(data);\n  else throw new Error('Uint8Array expected, got ' + typeof data);\n  return data;\n}\n\n/**\n * Checks if two U8A use same underlying buffer and overlaps.\n * This is invalid and can corrupt data.\n */\nexport function overlapBytes(a: Uint8Array, b: Uint8Array): boolean {\n  return (\n    a.buffer === b.buffer && // best we can do, may fail with an obscure Proxy\n    a.byteOffset < b.byteOffset + b.byteLength && // a starts before b end\n    b.byteOffset < a.byteOffset + a.byteLength // b starts before a end\n  );\n}\n\n/**\n * If input and output overlap and input starts before output, we will overwrite end of input before\n * we start processing it, so this is not supported for most ciphers (except chacha/salse, which designed with this)\n */\nexport function complexOverlapBytes(input: Uint8Array, output: Uint8Array): void {\n  // This is very cursed. It works somehow, but I'm completely unsure,\n  // reasoning about overlapping aligned windows is very hard.\n  if (overlapBytes(input, output) && input.byteOffset < output.byteOffset)\n    throw new Error('complex overlap of input and output is not supported');\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Used in ARX only\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts: T2\n): T1 & T2 {\n  if (opts == null || typeof opts !== 'object') throw new Error('options must be defined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Compares 2 uint8array-s in kinda constant time. */\nexport function equalBytes(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// TODO: remove\n/** For runtime check if class implements interface. */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: string | Uint8Array): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n}\n\n// This will allow to re-use with composable things like packed & base encoders\n// Also, we probably can make tags composable\n\n/** Sync cipher: takes byte array and returns byte array. */\nexport type Cipher = {\n  encrypt(plaintext: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array): Uint8Array;\n};\n\n/** Async cipher e.g. from built-in WebCrypto. */\nexport type AsyncCipher = {\n  encrypt(plaintext: Uint8Array): Promise<Uint8Array>;\n  decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;\n};\n\n/** Cipher with `output` argument which can optimize by doing 1 less allocation. */\nexport type CipherWithOutput = Cipher & {\n  encrypt(plaintext: Uint8Array, output?: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array, output?: Uint8Array): Uint8Array;\n};\n\n/**\n * Params are outside of return type, so it is accessible before calling constructor.\n * If function support multiple nonceLength's, we return the best one.\n */\nexport type CipherParams = {\n  blockSize: number;\n  nonceLength?: number;\n  tagLength?: number;\n  varSizeNonce?: boolean;\n};\n/** ARX cipher, like salsa or chacha. */\nexport type ARXCipher = ((\n  key: Uint8Array,\n  nonce: Uint8Array,\n  AAD?: Uint8Array\n) => CipherWithOutput) & {\n  blockSize: number;\n  nonceLength: number;\n  tagLength: number;\n};\nexport type CipherCons<T extends any[]> = (key: Uint8Array, ...args: T) => Cipher;\n/**\n * Wraps a cipher: validates args, ensures encrypt() can only be called once.\n * @__NO_SIDE_EFFECTS__\n */\nexport const wrapCipher = <C extends CipherCons<any>, P extends CipherParams>(\n  params: P,\n  constructor: C\n): C & P => {\n  function wrappedCipher(key: Uint8Array, ...args: any[]): CipherWithOutput {\n    // Validate key\n    abytes(key);\n\n    // Big-Endian hardware is rare. Just in case someone still decides to run ciphers:\n    if (!isLE) throw new Error('Non little-endian hardware is not yet supported');\n\n    // Validate nonce if nonceLength is present\n    if (params.nonceLength !== undefined) {\n      const nonce = args[0];\n      if (!nonce) throw new Error('nonce / iv required');\n      if (params.varSizeNonce) abytes(nonce);\n      else abytes(nonce, params.nonceLength);\n    }\n\n    // Validate AAD if tagLength present\n    const tagl = params.tagLength;\n    if (tagl && args[1] !== undefined) {\n      abytes(args[1]);\n    }\n\n    const cipher = constructor(key, ...args);\n    const checkOutput = (fnLength: number, output?: Uint8Array) => {\n      if (output !== undefined) {\n        if (fnLength !== 2) throw new Error('cipher output not supported');\n        abytes(output);\n      }\n    };\n    // Create wrapped cipher with validation and single-use encryption\n    let called = false;\n    const wrCipher = {\n      encrypt(data: Uint8Array, output?: Uint8Array) {\n        if (called) throw new Error('cannot encrypt() twice with same key + nonce');\n        called = true;\n        abytes(data);\n        checkOutput(cipher.encrypt.length, output);\n        return (cipher as CipherWithOutput).encrypt(data, output);\n      },\n      decrypt(data: Uint8Array, output?: Uint8Array) {\n        abytes(data);\n        if (tagl && data.length < tagl)\n          throw new Error('invalid ciphertext length: smaller than tagLength=' + tagl);\n        checkOutput(cipher.decrypt.length, output);\n        return (cipher as CipherWithOutput).decrypt(data, output);\n      },\n    };\n\n    return wrCipher;\n  }\n\n  Object.assign(wrappedCipher, params);\n  return wrappedCipher as C & P;\n};\n\n/** Represents salsa / chacha stream. */\nexport type XorStream = (\n  key: Uint8Array,\n  nonce: Uint8Array,\n  data: Uint8Array,\n  output?: Uint8Array,\n  counter?: number\n) => Uint8Array;\n\n/**\n * By default, returns u8a of length.\n * When out is available, it checks it for validity and uses it.\n */\nexport function getOutput(\n  expectedLength: number,\n  out?: Uint8Array,\n  onlyAligned = true\n): Uint8Array {\n  if (out === undefined) return new Uint8Array(expectedLength);\n  if (out.length !== expectedLength)\n    throw new Error('invalid output length, expected ' + expectedLength + ', got: ' + out.length);\n  if (onlyAligned && !isAligned32(out)) throw new Error('invalid output, must be aligned');\n  return out;\n}\n\n/** Polyfill for Safari 14. */\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\nexport function u64Lengths(dataLength: number, aadLength: number, isLE: boolean): Uint8Array {\n  abool(isLE);\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  setBigUint64(view, 0, BigInt(aadLength), isLE);\n  setBigUint64(view, 8, BigInt(dataLength), isLE);\n  return num;\n}\n\n// Is byte array aligned to 4 byte offset (u32)?\nexport function isAligned32(bytes: Uint8Array): boolean {\n  return bytes.byteOffset % 4 === 0;\n}\n\n// copy bytes to new u8a (aligned). Because Buffer.slice is broken.\nexport function copyBytes(bytes: Uint8Array): Uint8Array {\n  return Uint8Array.from(bytes);\n}\n", "/**\n * GHash from AES-GCM and its little-endian \"mirror image\" Polyval from AES-SIV.\n *\n * Implemented in terms of GHash with conversion function for keys\n * GCM GHASH from\n * [NIST SP800-38d](https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf),\n * SIV from\n * [RFC 8452](https://datatracker.ietf.org/doc/html/rfc8452).\n *\n * GHASH   modulo: x^128 + x^7   + x^2   + x     + 1\n * POLYVAL modulo: x^128 + x^127 + x^126 + x^121 + 1\n *\n * @module\n */\n// prettier-ignore\nimport {\n  abytes, aexists, aoutput,\n  clean, copyBytes, createView, Hash, type Input, toBytes, u32,\n} from './utils.ts';\n\nconst BLOCK_SIZE = 16;\n// TODO: rewrite\n// temporary padding buffer\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\nconst ZEROS32 = u32(ZEROS16);\nconst POLY = 0xe1; // v = 2*v % POLY\n\n// v = 2*v % POLY\n// NOTE: because x + x = 0 (add/sub is same), mul2(x) != x+x\n// We can multiply any number using montgomery ladder and this function (works as double, add is simple xor)\nconst mul2 = (s0: number, s1: number, s2: number, s3: number) => {\n  const hiBit = s3 & 1;\n  return {\n    s3: (s2 << 31) | (s3 >>> 1),\n    s2: (s1 << 31) | (s2 >>> 1),\n    s1: (s0 << 31) | (s1 >>> 1),\n    s0: (s0 >>> 1) ^ ((POLY << 24) & -(hiBit & 1)), // reduce % poly\n  };\n};\n\nconst swapLE = (n: number) =>\n  (((n >>> 0) & 0xff) << 24) |\n  (((n >>> 8) & 0xff) << 16) |\n  (((n >>> 16) & 0xff) << 8) |\n  ((n >>> 24) & 0xff) |\n  0;\n\n/**\n * `mulX_POLYVAL(ByteReverse(H))` from spec\n * @param k mutated in place\n */\nexport function _toGHASHKey(k: Uint8Array): Uint8Array {\n  k.reverse();\n  const hiBit = k[15] & 1;\n  // k >>= 1\n  let carry = 0;\n  for (let i = 0; i < k.length; i++) {\n    const t = k[i];\n    k[i] = (t >>> 1) | carry;\n    carry = (t & 1) << 7;\n  }\n  k[0] ^= -hiBit & 0xe1; // if (hiBit) n ^= 0xe1000000000000000000000000000000;\n  return k;\n}\n\ntype Value = { s0: number; s1: number; s2: number; s3: number };\n\nconst estimateWindow = (bytes: number) => {\n  if (bytes > 64 * 1024) return 8;\n  if (bytes > 1024) return 4;\n  return 2;\n};\n\nclass GHASH implements Hash<GHASH> {\n  readonly blockLen = BLOCK_SIZE;\n  readonly outputLen = BLOCK_SIZE;\n  protected s0 = 0;\n  protected s1 = 0;\n  protected s2 = 0;\n  protected s3 = 0;\n  protected finished = false;\n  protected t: Value[];\n  private W: number;\n  private windowSize: number;\n  // We select bits per window adaptively based on expectedLength\n  constructor(key: Input, expectedLength?: number) {\n    key = toBytes(key);\n    abytes(key, 16);\n    const kView = createView(key);\n    let k0 = kView.getUint32(0, false);\n    let k1 = kView.getUint32(4, false);\n    let k2 = kView.getUint32(8, false);\n    let k3 = kView.getUint32(12, false);\n    // generate table of doubled keys (half of montgomery ladder)\n    const doubles: Value[] = [];\n    for (let i = 0; i < 128; i++) {\n      doubles.push({ s0: swapLE(k0), s1: swapLE(k1), s2: swapLE(k2), s3: swapLE(k3) });\n      ({ s0: k0, s1: k1, s2: k2, s3: k3 } = mul2(k0, k1, k2, k3));\n    }\n    const W = estimateWindow(expectedLength || 1024);\n    if (![1, 2, 4, 8].includes(W))\n      throw new Error('ghash: invalid window size, expected 2, 4 or 8');\n    this.W = W;\n    const bits = 128; // always 128 bits;\n    const windows = bits / W;\n    const windowSize = (this.windowSize = 2 ** W);\n    const items: Value[] = [];\n    // Create precompute table for window of W bits\n    for (let w = 0; w < windows; w++) {\n      // truth table: 00, 01, 10, 11\n      for (let byte = 0; byte < windowSize; byte++) {\n        // prettier-ignore\n        let s0 = 0, s1 = 0, s2 = 0, s3 = 0;\n        for (let j = 0; j < W; j++) {\n          const bit = (byte >>> (W - j - 1)) & 1;\n          if (!bit) continue;\n          const { s0: d0, s1: d1, s2: d2, s3: d3 } = doubles[W * w + j];\n          (s0 ^= d0), (s1 ^= d1), (s2 ^= d2), (s3 ^= d3);\n        }\n        items.push({ s0, s1, s2, s3 });\n      }\n    }\n    this.t = items;\n  }\n  protected _updateBlock(s0: number, s1: number, s2: number, s3: number) {\n    (s0 ^= this.s0), (s1 ^= this.s1), (s2 ^= this.s2), (s3 ^= this.s3);\n    const { W, t, windowSize } = this;\n    // prettier-ignore\n    let o0 = 0, o1 = 0, o2 = 0, o3 = 0;\n    const mask = (1 << W) - 1; // 2**W will kill performance.\n    let w = 0;\n    for (const num of [s0, s1, s2, s3]) {\n      for (let bytePos = 0; bytePos < 4; bytePos++) {\n        const byte = (num >>> (8 * bytePos)) & 0xff;\n        for (let bitPos = 8 / W - 1; bitPos >= 0; bitPos--) {\n          const bit = (byte >>> (W * bitPos)) & mask;\n          const { s0: e0, s1: e1, s2: e2, s3: e3 } = t[w * windowSize + bit];\n          (o0 ^= e0), (o1 ^= e1), (o2 ^= e2), (o3 ^= e3);\n          w += 1;\n        }\n      }\n    }\n    this.s0 = o0;\n    this.s1 = o1;\n    this.s2 = o2;\n    this.s3 = o3;\n  }\n  update(data: Input): this {\n    aexists(this);\n    data = toBytes(data);\n    abytes(data);\n    const b32 = u32(data);\n    const blocks = Math.floor(data.length / BLOCK_SIZE);\n    const left = data.length % BLOCK_SIZE;\n    for (let i = 0; i < blocks; i++) {\n      this._updateBlock(b32[i * 4 + 0], b32[i * 4 + 1], b32[i * 4 + 2], b32[i * 4 + 3]);\n    }\n    if (left) {\n      ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n      this._updateBlock(ZEROS32[0], ZEROS32[1], ZEROS32[2], ZEROS32[3]);\n      clean(ZEROS32); // clean tmp buffer\n    }\n    return this;\n  }\n  destroy() {\n    const { t } = this;\n    // clean precompute table\n    for (const elm of t) {\n      (elm.s0 = 0), (elm.s1 = 0), (elm.s2 = 0), (elm.s3 = 0);\n    }\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    const { s0, s1, s2, s3 } = this;\n    const o32 = u32(out);\n    o32[0] = s0;\n    o32[1] = s1;\n    o32[2] = s2;\n    o32[3] = s3;\n    return out;\n  }\n  digest(): Uint8Array {\n    const res = new Uint8Array(BLOCK_SIZE);\n    this.digestInto(res);\n    this.destroy();\n    return res;\n  }\n}\n\nclass Polyval extends GHASH {\n  constructor(key: Input, expectedLength?: number) {\n    key = toBytes(key);\n    abytes(key);\n    const ghKey = _toGHASHKey(copyBytes(key));\n    super(ghKey, expectedLength);\n    clean(ghKey);\n  }\n  update(data: Input): this {\n    data = toBytes(data);\n    aexists(this);\n    const b32 = u32(data);\n    const left = data.length % BLOCK_SIZE;\n    const blocks = Math.floor(data.length / BLOCK_SIZE);\n    for (let i = 0; i < blocks; i++) {\n      this._updateBlock(\n        swapLE(b32[i * 4 + 3]),\n        swapLE(b32[i * 4 + 2]),\n        swapLE(b32[i * 4 + 1]),\n        swapLE(b32[i * 4 + 0])\n      );\n    }\n    if (left) {\n      ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n      this._updateBlock(\n        swapLE(ZEROS32[3]),\n        swapLE(ZEROS32[2]),\n        swapLE(ZEROS32[1]),\n        swapLE(ZEROS32[0])\n      );\n      clean(ZEROS32);\n    }\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // tmp ugly hack\n    const { s0, s1, s2, s3 } = this;\n    const o32 = u32(out);\n    o32[0] = s0;\n    o32[1] = s1;\n    o32[2] = s2;\n    o32[3] = s3;\n    return out.reverse();\n  }\n}\n\nexport type CHashPV = ReturnType<typeof wrapConstructorWithKey>;\nfunction wrapConstructorWithKey<H extends Hash<H>>(\n  hashCons: (key: Input, expectedLength?: number) => Hash<H>\n): {\n  (msg: Input, key: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(key: Input, expectedLength?: number): Hash<H>;\n} {\n  const hashC = (msg: Input, key: Input): Uint8Array =>\n    hashCons(key, msg.length).update(toBytes(msg)).digest();\n  const tmp = hashCons(new Uint8Array(16), 0);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (key: Input, expectedLength?: number) => hashCons(key, expectedLength);\n  return hashC;\n}\n\n/** GHash MAC for AES-GCM. */\nexport const ghash: CHashPV = wrapConstructorWithKey(\n  (key, expectedLength) => new GHASH(key, expectedLength)\n);\n\n/** Polyval MAC for AES-SIV. */\nexport const polyval: CHashPV = wrapConstructorWithKey(\n  (key, expectedLength) => new Polyval(key, expectedLength)\n);\n", "/**\n * [AES](https://en.wikipedia.org/wiki/Advanced_Encryption_Standard)\n * a.k.a. Advanced Encryption Standard\n * is a variant of Rijndael block cipher, standardized by NIST in 2001.\n * We provide the fastest available pure JS implementation.\n *\n * Data is split into 128-bit blocks. Encrypted in 10/12/14 rounds (128/192/256 bits). In every round:\n * 1. **S-box**, table substitution\n * 2. **Shift rows**, cyclic shift left of all rows of data array\n * 3. **Mix columns**, multiplying every column by fixed polynomial\n * 4. **Add round key**, round_key xor i-th column of array\n *\n * Check out [FIPS-197](https://csrc.nist.gov/files/pubs/fips/197/final/docs/fips-197.pdf)\n * and [original proposal](https://csrc.nist.gov/csrc/media/projects/cryptographic-standards-and-guidelines/documents/aes-development/rijndael-ammended.pdf)\n * @module\n */\nimport { ghash, polyval } from './_polyval.ts';\n// prettier-ignore\nimport {\n  abytes, clean, complexOverlapBytes, concatBytes,\n  copyBytes, createView, equalBytes, getOutput, isAligned32, overlapBytes,\n  setBigUint64, u32, u64Lengths, u8, wrapCipher,\n  type Cipher, type CipherWithOutput,\n} from './utils.ts';\n\nconst BLOCK_SIZE = 16;\nconst BLOCK_SIZE32 = 4;\nconst EMPTY_BLOCK = /* @__PURE__ */ new Uint8Array(BLOCK_SIZE);\nconst POLY = 0x11b; // 1 + x + x**3 + x**4 + x**8\n\n// TODO: remove multiplication, binary ops only\nfunction mul2(n: number) {\n  return (n << 1) ^ (POLY & -(n >> 7));\n}\n\nfunction mul(a: number, b: number) {\n  let res = 0;\n  for (; b > 0; b >>= 1) {\n    // Montgomery ladder\n    res ^= a & -(b & 1); // if (b&1) res ^=a (but const-time).\n    a = mul2(a); // a = 2*a\n  }\n  return res;\n}\n\n// AES S-box is generated using finite field inversion,\n// an affine transform, and xor of a constant 0x63.\nconst sbox = /* @__PURE__ */ (() => {\n  const t = new Uint8Array(256);\n  for (let i = 0, x = 1; i < 256; i++, x ^= mul2(x)) t[i] = x;\n  const box = new Uint8Array(256);\n  box[0] = 0x63; // first elm\n  for (let i = 0; i < 255; i++) {\n    let x = t[255 - i];\n    x |= x << 8;\n    box[t[i]] = (x ^ (x >> 4) ^ (x >> 5) ^ (x >> 6) ^ (x >> 7) ^ 0x63) & 0xff;\n  }\n  clean(t);\n  return box;\n})();\n\n// Inverted S-box\nconst invSbox = /* @__PURE__ */ sbox.map((_, j) => sbox.indexOf(j));\n\n// Rotate u32 by 8\nconst rotr32_8 = (n: number) => (n << 24) | (n >>> 8);\nconst rotl32_8 = (n: number) => (n << 8) | (n >>> 24);\n// The byte swap operation for uint32 (LE<->BE)\nconst byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n\n// T-table is optimization suggested in 5.2 of original proposal (missed from FIPS-197). Changes:\n// - LE instead of BE\n// - bigger tables: T0 and T1 are merged into T01 table and T2 & T3 into T23;\n//   so index is u16, instead of u8. This speeds up things, unexpectedly\nfunction genTtable(sbox: Uint8Array, fn: (n: number) => number) {\n  if (sbox.length !== 256) throw new Error('Wrong sbox length');\n  const T0 = new Uint32Array(256).map((_, j) => fn(sbox[j]));\n  const T1 = T0.map(rotl32_8);\n  const T2 = T1.map(rotl32_8);\n  const T3 = T2.map(rotl32_8);\n  const T01 = new Uint32Array(256 * 256);\n  const T23 = new Uint32Array(256 * 256);\n  const sbox2 = new Uint16Array(256 * 256);\n  for (let i = 0; i < 256; i++) {\n    for (let j = 0; j < 256; j++) {\n      const idx = i * 256 + j;\n      T01[idx] = T0[i] ^ T1[j];\n      T23[idx] = T2[i] ^ T3[j];\n      sbox2[idx] = (sbox[i] << 8) | sbox[j];\n    }\n  }\n  return { sbox, sbox2, T0, T1, T2, T3, T01, T23 };\n}\n\nconst tableEncoding = /* @__PURE__ */ genTtable(\n  sbox,\n  (s: number) => (mul(s, 3) << 24) | (s << 16) | (s << 8) | mul(s, 2)\n);\nconst tableDecoding = /* @__PURE__ */ genTtable(\n  invSbox,\n  (s) => (mul(s, 11) << 24) | (mul(s, 13) << 16) | (mul(s, 9) << 8) | mul(s, 14)\n);\n\nconst xPowers = /* @__PURE__ */ (() => {\n  const p = new Uint8Array(16);\n  for (let i = 0, x = 1; i < 16; i++, x = mul2(x)) p[i] = x;\n  return p;\n})();\n\n/** Key expansion used in CTR. */\nfunction expandKeyLE(key: Uint8Array): Uint32Array {\n  abytes(key);\n  const len = key.length;\n  if (![16, 24, 32].includes(len))\n    throw new Error('aes: invalid key size, should be 16, 24 or 32, got ' + len);\n  const { sbox2 } = tableEncoding;\n  const toClean = [];\n  if (!isAligned32(key)) toClean.push((key = copyBytes(key)));\n  const k32 = u32(key);\n  const Nk = k32.length;\n  const subByte = (n: number) => applySbox(sbox2, n, n, n, n);\n  const xk = new Uint32Array(len + 28); // expanded key\n  xk.set(k32);\n  // 4.3.1 Key expansion\n  for (let i = Nk; i < xk.length; i++) {\n    let t = xk[i - 1];\n    if (i % Nk === 0) t = subByte(rotr32_8(t)) ^ xPowers[i / Nk - 1];\n    else if (Nk > 6 && i % Nk === 4) t = subByte(t);\n    xk[i] = xk[i - Nk] ^ t;\n  }\n  clean(...toClean);\n  return xk;\n}\n\nfunction expandKeyDecLE(key: Uint8Array): Uint32Array {\n  const encKey = expandKeyLE(key);\n  const xk = encKey.slice();\n  const Nk = encKey.length;\n  const { sbox2 } = tableEncoding;\n  const { T0, T1, T2, T3 } = tableDecoding;\n  // Inverse key by chunks of 4 (rounds)\n  for (let i = 0; i < Nk; i += 4) {\n    for (let j = 0; j < 4; j++) xk[i + j] = encKey[Nk - i - 4 + j];\n  }\n  clean(encKey);\n  // apply InvMixColumn except first & last round\n  for (let i = 4; i < Nk - 4; i++) {\n    const x = xk[i];\n    const w = applySbox(sbox2, x, x, x, x);\n    xk[i] = T0[w & 0xff] ^ T1[(w >>> 8) & 0xff] ^ T2[(w >>> 16) & 0xff] ^ T3[w >>> 24];\n  }\n  return xk;\n}\n\n// Apply tables\nfunction apply0123(\n  T01: Uint32Array,\n  T23: Uint32Array,\n  s0: number,\n  s1: number,\n  s2: number,\n  s3: number\n) {\n  return (\n    T01[((s0 << 8) & 0xff00) | ((s1 >>> 8) & 0xff)] ^\n    T23[((s2 >>> 8) & 0xff00) | ((s3 >>> 24) & 0xff)]\n  );\n}\n\nfunction applySbox(sbox2: Uint16Array, s0: number, s1: number, s2: number, s3: number) {\n  return (\n    sbox2[(s0 & 0xff) | (s1 & 0xff00)] |\n    (sbox2[((s2 >>> 16) & 0xff) | ((s3 >>> 16) & 0xff00)] << 16)\n  );\n}\n\nfunction encrypt(\n  xk: Uint32Array,\n  s0: number,\n  s1: number,\n  s2: number,\n  s3: number\n): { s0: number; s1: number; s2: number; s3: number } {\n  const { sbox2, T01, T23 } = tableEncoding;\n  let k = 0;\n  (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n  const rounds = xk.length / 4 - 2;\n  for (let i = 0; i < rounds; i++) {\n    const t0 = xk[k++] ^ apply0123(T01, T23, s0, s1, s2, s3);\n    const t1 = xk[k++] ^ apply0123(T01, T23, s1, s2, s3, s0);\n    const t2 = xk[k++] ^ apply0123(T01, T23, s2, s3, s0, s1);\n    const t3 = xk[k++] ^ apply0123(T01, T23, s3, s0, s1, s2);\n    (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n  }\n  // last round (without mixcolumns, so using SBOX2 table)\n  const t0 = xk[k++] ^ applySbox(sbox2, s0, s1, s2, s3);\n  const t1 = xk[k++] ^ applySbox(sbox2, s1, s2, s3, s0);\n  const t2 = xk[k++] ^ applySbox(sbox2, s2, s3, s0, s1);\n  const t3 = xk[k++] ^ applySbox(sbox2, s3, s0, s1, s2);\n  return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\n\n// Can't be merged with encrypt: arg positions for apply0123 / applySbox are different\nfunction decrypt(\n  xk: Uint32Array,\n  s0: number,\n  s1: number,\n  s2: number,\n  s3: number\n): {\n  s0: number;\n  s1: number;\n  s2: number;\n  s3: number;\n} {\n  const { sbox2, T01, T23 } = tableDecoding;\n  let k = 0;\n  (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n  const rounds = xk.length / 4 - 2;\n  for (let i = 0; i < rounds; i++) {\n    const t0 = xk[k++] ^ apply0123(T01, T23, s0, s3, s2, s1);\n    const t1 = xk[k++] ^ apply0123(T01, T23, s1, s0, s3, s2);\n    const t2 = xk[k++] ^ apply0123(T01, T23, s2, s1, s0, s3);\n    const t3 = xk[k++] ^ apply0123(T01, T23, s3, s2, s1, s0);\n    (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n  }\n  // Last round\n  const t0: number = xk[k++] ^ applySbox(sbox2, s0, s3, s2, s1);\n  const t1: number = xk[k++] ^ applySbox(sbox2, s1, s0, s3, s2);\n  const t2: number = xk[k++] ^ applySbox(sbox2, s2, s1, s0, s3);\n  const t3: number = xk[k++] ^ applySbox(sbox2, s3, s2, s1, s0);\n  return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\n\n// TODO: investigate merging with ctr32\nfunction ctrCounter(\n  xk: Uint32Array,\n  nonce: Uint8Array,\n  src: Uint8Array,\n  dst?: Uint8Array\n): Uint8Array {\n  abytes(nonce, BLOCK_SIZE);\n  abytes(src);\n  const srcLen = src.length;\n  dst = getOutput(srcLen, dst);\n  complexOverlapBytes(src, dst);\n  const ctr = nonce;\n  const c32 = u32(ctr);\n  // Fill block (empty, ctr=0)\n  let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n  const src32 = u32(src);\n  const dst32 = u32(dst);\n  // process blocks\n  for (let i = 0; i + 4 <= src32.length; i += 4) {\n    dst32[i + 0] = src32[i + 0] ^ s0;\n    dst32[i + 1] = src32[i + 1] ^ s1;\n    dst32[i + 2] = src32[i + 2] ^ s2;\n    dst32[i + 3] = src32[i + 3] ^ s3;\n    // Full 128 bit counter with wrap around\n    let carry = 1;\n    for (let i = ctr.length - 1; i >= 0; i--) {\n      carry = (carry + (ctr[i] & 0xff)) | 0;\n      ctr[i] = carry & 0xff;\n      carry >>>= 8;\n    }\n    ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n  }\n  // leftovers (less than block)\n  // It's possible to handle > u32 fast, but is it worth it?\n  const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n  if (start < srcLen) {\n    const b32 = new Uint32Array([s0, s1, s2, s3]);\n    const buf = u8(b32);\n    for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n    clean(b32);\n  }\n  return dst;\n}\n\n// AES CTR with overflowing 32 bit counter\n// It's possible to do 32le significantly simpler (and probably faster) by using u32.\n// But, we need both, and perf bottleneck is in ghash anyway.\nfunction ctr32(\n  xk: Uint32Array,\n  isLE: boolean,\n  nonce: Uint8Array,\n  src: Uint8Array,\n  dst?: Uint8Array\n): Uint8Array {\n  abytes(nonce, BLOCK_SIZE);\n  abytes(src);\n  dst = getOutput(src.length, dst);\n  const ctr = nonce; // write new value to nonce, so it can be re-used\n  const c32 = u32(ctr);\n  const view = createView(ctr);\n  const src32 = u32(src);\n  const dst32 = u32(dst);\n  const ctrPos = isLE ? 0 : 12;\n  const srcLen = src.length;\n  // Fill block (empty, ctr=0)\n  let ctrNum = view.getUint32(ctrPos, isLE); // read current counter value\n  let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n  // process blocks\n  for (let i = 0; i + 4 <= src32.length; i += 4) {\n    dst32[i + 0] = src32[i + 0] ^ s0;\n    dst32[i + 1] = src32[i + 1] ^ s1;\n    dst32[i + 2] = src32[i + 2] ^ s2;\n    dst32[i + 3] = src32[i + 3] ^ s3;\n    ctrNum = (ctrNum + 1) >>> 0; // u32 wrap\n    view.setUint32(ctrPos, ctrNum, isLE);\n    ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n  }\n  // leftovers (less than a block)\n  const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n  if (start < srcLen) {\n    const b32 = new Uint32Array([s0, s1, s2, s3]);\n    const buf = u8(b32);\n    for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n    clean(b32);\n  }\n  return dst;\n}\n\n/**\n * CTR: counter mode. Creates stream cipher.\n * Requires good IV. Parallelizable. OK, but no MAC.\n */\nexport const ctr: ((key: Uint8Array, nonce: Uint8Array) => CipherWithOutput) & {\n  blockSize: number;\n  nonceLength: number;\n} = /* @__PURE__ */ wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function aesctr(key: Uint8Array, nonce: Uint8Array): CipherWithOutput {\n    function processCtr(buf: Uint8Array, dst?: Uint8Array) {\n      abytes(buf);\n      if (dst !== undefined) {\n        abytes(dst);\n        if (!isAligned32(dst)) throw new Error('unaligned destination');\n      }\n      const xk = expandKeyLE(key);\n      const n = copyBytes(nonce); // align + avoid changing\n      const toClean = [xk, n];\n      if (!isAligned32(buf)) toClean.push((buf = copyBytes(buf)));\n      const out = ctrCounter(xk, n, buf, dst);\n      clean(...toClean);\n      return out;\n    }\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => processCtr(plaintext, dst),\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => processCtr(ciphertext, dst),\n    };\n  }\n);\n\nfunction validateBlockDecrypt(data: Uint8Array) {\n  abytes(data);\n  if (data.length % BLOCK_SIZE !== 0) {\n    throw new Error(\n      'aes-(cbc/ecb).decrypt ciphertext should consist of blocks with size ' + BLOCK_SIZE\n    );\n  }\n}\n\nfunction validateBlockEncrypt(plaintext: Uint8Array, pcks5: boolean, dst?: Uint8Array) {\n  abytes(plaintext);\n  let outLen = plaintext.length;\n  const remaining = outLen % BLOCK_SIZE;\n  if (!pcks5 && remaining !== 0)\n    throw new Error('aec/(cbc-ecb): unpadded plaintext with disabled padding');\n  if (!isAligned32(plaintext)) plaintext = copyBytes(plaintext);\n  const b = u32(plaintext);\n  if (pcks5) {\n    let left = BLOCK_SIZE - remaining;\n    if (!left) left = BLOCK_SIZE; // if no bytes left, create empty padding block\n    outLen = outLen + left;\n  }\n  dst = getOutput(outLen, dst);\n  complexOverlapBytes(plaintext, dst);\n  const o = u32(dst);\n  return { b, o, out: dst };\n}\n\nfunction validatePCKS(data: Uint8Array, pcks5: boolean) {\n  if (!pcks5) return data;\n  const len = data.length;\n  if (!len) throw new Error('aes/pcks5: empty ciphertext not allowed');\n  const lastByte = data[len - 1];\n  if (lastByte <= 0 || lastByte > 16) throw new Error('aes/pcks5: wrong padding');\n  const out = data.subarray(0, -lastByte);\n  for (let i = 0; i < lastByte; i++)\n    if (data[len - i - 1] !== lastByte) throw new Error('aes/pcks5: wrong padding');\n  return out;\n}\n\nfunction padPCKS(left: Uint8Array) {\n  const tmp = new Uint8Array(16);\n  const tmp32 = u32(tmp);\n  tmp.set(left);\n  const paddingByte = BLOCK_SIZE - left.length;\n  for (let i = BLOCK_SIZE - paddingByte; i < BLOCK_SIZE; i++) tmp[i] = paddingByte;\n  return tmp32;\n}\n\n/** Options for ECB and CBC. */\nexport type BlockOpts = { disablePadding?: boolean };\n\n/**\n * ECB: Electronic CodeBook. Simple deterministic replacement.\n * Dangerous: always map x to y. See [AES Penguin](https://words.filippo.io/the-ecb-penguin/).\n */\nexport const ecb: ((key: Uint8Array, opts?: BlockOpts) => CipherWithOutput) & {\n  blockSize: number;\n} = /* @__PURE__ */ wrapCipher(\n  { blockSize: 16 },\n  function aesecb(key: Uint8Array, opts: BlockOpts = {}): CipherWithOutput {\n    const pcks5 = !opts.disablePadding;\n    return {\n      encrypt(plaintext: Uint8Array, dst?: Uint8Array) {\n        const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n        const xk = expandKeyLE(key);\n        let i = 0;\n        for (; i + 4 <= b.length; ) {\n          const { s0, s1, s2, s3 } = encrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        if (pcks5) {\n          const tmp32 = padPCKS(plaintext.subarray(i * 4));\n          const { s0, s1, s2, s3 } = encrypt(xk, tmp32[0], tmp32[1], tmp32[2], tmp32[3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        clean(xk);\n        return _out;\n      },\n      decrypt(ciphertext: Uint8Array, dst?: Uint8Array) {\n        validateBlockDecrypt(ciphertext);\n        const xk = expandKeyDecLE(key);\n        dst = getOutput(ciphertext.length, dst);\n        const toClean: (Uint8Array | Uint32Array)[] = [xk];\n        if (!isAligned32(ciphertext)) toClean.push((ciphertext = copyBytes(ciphertext)));\n        complexOverlapBytes(ciphertext, dst);\n        const b = u32(ciphertext);\n        const o = u32(dst);\n        for (let i = 0; i + 4 <= b.length; ) {\n          const { s0, s1, s2, s3 } = decrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        clean(...toClean);\n        return validatePCKS(dst, pcks5);\n      },\n    };\n  }\n);\n\n/**\n * CBC: Cipher-Block-Chaining. Key is previous round\u2019s block.\n * Fragile: needs proper padding. Unauthenticated: needs MAC.\n */\nexport const cbc: ((key: Uint8Array, iv: Uint8Array, opts?: BlockOpts) => CipherWithOutput) & {\n  blockSize: number;\n  nonceLength: number;\n} = /* @__PURE__ */ wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function aescbc(key: Uint8Array, iv: Uint8Array, opts: BlockOpts = {}): CipherWithOutput {\n    const pcks5 = !opts.disablePadding;\n    return {\n      encrypt(plaintext: Uint8Array, dst?: Uint8Array) {\n        const xk = expandKeyLE(key);\n        const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n        let _iv = iv;\n        const toClean: (Uint8Array | Uint32Array)[] = [xk];\n        if (!isAligned32(_iv)) toClean.push((_iv = copyBytes(_iv)));\n        const n32 = u32(_iv);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        let i = 0;\n        for (; i + 4 <= b.length; ) {\n          (s0 ^= b[i + 0]), (s1 ^= b[i + 1]), (s2 ^= b[i + 2]), (s3 ^= b[i + 3]);\n          ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        if (pcks5) {\n          const tmp32 = padPCKS(plaintext.subarray(i * 4));\n          (s0 ^= tmp32[0]), (s1 ^= tmp32[1]), (s2 ^= tmp32[2]), (s3 ^= tmp32[3]);\n          ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        clean(...toClean);\n        return _out;\n      },\n      decrypt(ciphertext: Uint8Array, dst?: Uint8Array) {\n        validateBlockDecrypt(ciphertext);\n        const xk = expandKeyDecLE(key);\n        let _iv = iv;\n        const toClean: (Uint8Array | Uint32Array)[] = [xk];\n        if (!isAligned32(_iv)) toClean.push((_iv = copyBytes(_iv)));\n        const n32 = u32(_iv);\n        dst = getOutput(ciphertext.length, dst);\n        if (!isAligned32(ciphertext)) toClean.push((ciphertext = copyBytes(ciphertext)));\n        complexOverlapBytes(ciphertext, dst);\n        const b = u32(ciphertext);\n        const o = u32(dst);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        for (let i = 0; i + 4 <= b.length; ) {\n          // prettier-ignore\n          const ps0 = s0, ps1 = s1, ps2 = s2, ps3 = s3;\n          (s0 = b[i + 0]), (s1 = b[i + 1]), (s2 = b[i + 2]), (s3 = b[i + 3]);\n          const { s0: o0, s1: o1, s2: o2, s3: o3 } = decrypt(xk, s0, s1, s2, s3);\n          (o[i++] = o0 ^ ps0), (o[i++] = o1 ^ ps1), (o[i++] = o2 ^ ps2), (o[i++] = o3 ^ ps3);\n        }\n        clean(...toClean);\n        return validatePCKS(dst, pcks5);\n      },\n    };\n  }\n);\n\n/**\n * CFB: Cipher Feedback Mode. The input for the block cipher is the previous cipher output.\n * Unauthenticated: needs MAC.\n */\nexport const cfb: ((key: Uint8Array, iv: Uint8Array) => CipherWithOutput) & {\n  blockSize: number;\n  nonceLength: number;\n} = /* @__PURE__ */ wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function aescfb(key: Uint8Array, iv: Uint8Array): CipherWithOutput {\n    function processCfb(src: Uint8Array, isEncrypt: boolean, dst?: Uint8Array) {\n      abytes(src);\n      const srcLen = src.length;\n      dst = getOutput(srcLen, dst);\n      if (overlapBytes(src, dst)) throw new Error('overlapping src and dst not supported.');\n      const xk = expandKeyLE(key);\n      let _iv = iv;\n      const toClean: (Uint8Array | Uint32Array)[] = [xk];\n      if (!isAligned32(_iv)) toClean.push((_iv = copyBytes(_iv)));\n      if (!isAligned32(src)) toClean.push((src = copyBytes(src)));\n      const src32 = u32(src);\n      const dst32 = u32(dst);\n      const next32 = isEncrypt ? dst32 : src32;\n      const n32 = u32(_iv);\n      // prettier-ignore\n      let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n      for (let i = 0; i + 4 <= src32.length; ) {\n        const { s0: e0, s1: e1, s2: e2, s3: e3 } = encrypt(xk, s0, s1, s2, s3);\n        dst32[i + 0] = src32[i + 0] ^ e0;\n        dst32[i + 1] = src32[i + 1] ^ e1;\n        dst32[i + 2] = src32[i + 2] ^ e2;\n        dst32[i + 3] = src32[i + 3] ^ e3;\n        (s0 = next32[i++]), (s1 = next32[i++]), (s2 = next32[i++]), (s3 = next32[i++]);\n      }\n      // leftovers (less than block)\n      const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n      if (start < srcLen) {\n        ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n        const buf = u8(new Uint32Array([s0, s1, s2, s3]));\n        for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n        clean(buf);\n      }\n      clean(...toClean);\n      return dst;\n    }\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => processCfb(plaintext, true, dst),\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => processCfb(ciphertext, false, dst),\n    };\n  }\n);\n\n// TODO: merge with chacha, however gcm has bitLen while chacha has byteLen\nfunction computeTag(\n  fn: typeof ghash,\n  isLE: boolean,\n  key: Uint8Array,\n  data: Uint8Array,\n  AAD?: Uint8Array\n) {\n  const aadLength = AAD ? AAD.length : 0;\n  const h = fn.create(key, data.length + aadLength);\n  if (AAD) h.update(AAD);\n  const num = u64Lengths(8 * data.length, 8 * aadLength, isLE);\n  h.update(data);\n  h.update(num);\n  const res = h.digest();\n  clean(num);\n  return res;\n}\n\n/**\n * GCM: Galois/Counter Mode.\n * Modern, parallel version of CTR, with MAC.\n * Be careful: MACs can be forged.\n * Unsafe to use random nonces under the same key, due to collision chance.\n * As for nonce size, prefer 12-byte, instead of 8-byte.\n */\nexport const gcm: ((key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array) => Cipher) & {\n  blockSize: number;\n  nonceLength: number;\n  tagLength: number;\n  varSizeNonce: true;\n} = /* @__PURE__ */ wrapCipher(\n  { blockSize: 16, nonceLength: 12, tagLength: 16, varSizeNonce: true },\n  function aesgcm(key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): Cipher {\n    // NIST 800-38d doesn't enforce minimum nonce length.\n    // We enforce 8 bytes for compat with openssl.\n    // 12 bytes are recommended. More than 12 bytes would be converted into 12.\n    if (nonce.length < 8) throw new Error('aes/gcm: invalid nonce length');\n    const tagLength = 16;\n    function _computeTag(authKey: Uint8Array, tagMask: Uint8Array, data: Uint8Array) {\n      const tag = computeTag(ghash, false, authKey, data, AAD);\n      for (let i = 0; i < tagMask.length; i++) tag[i] ^= tagMask[i];\n      return tag;\n    }\n    function deriveKeys() {\n      const xk = expandKeyLE(key);\n      const authKey = EMPTY_BLOCK.slice();\n      const counter = EMPTY_BLOCK.slice();\n      ctr32(xk, false, counter, counter, authKey);\n      // NIST 800-38d, page 15: different behavior for 96-bit and non-96-bit nonces\n      if (nonce.length === 12) {\n        counter.set(nonce);\n      } else {\n        const nonceLen = EMPTY_BLOCK.slice();\n        const view = createView(nonceLen);\n        setBigUint64(view, 8, BigInt(nonce.length * 8), false);\n        // ghash(nonce || u64be(0) || u64be(nonceLen*8))\n        const g = ghash.create(authKey).update(nonce).update(nonceLen);\n        g.digestInto(counter); // digestInto doesn't trigger '.destroy'\n        g.destroy();\n      }\n      const tagMask = ctr32(xk, false, counter, EMPTY_BLOCK);\n      return { xk, authKey, counter, tagMask };\n    }\n    return {\n      encrypt(plaintext: Uint8Array) {\n        const { xk, authKey, counter, tagMask } = deriveKeys();\n        const out = new Uint8Array(plaintext.length + tagLength);\n        const toClean: (Uint8Array | Uint32Array)[] = [xk, authKey, counter, tagMask];\n        if (!isAligned32(plaintext)) toClean.push((plaintext = copyBytes(plaintext)));\n        ctr32(xk, false, counter, plaintext, out.subarray(0, plaintext.length));\n        const tag = _computeTag(authKey, tagMask, out.subarray(0, out.length - tagLength));\n        toClean.push(tag);\n        out.set(tag, plaintext.length);\n        clean(...toClean);\n        return out;\n      },\n      decrypt(ciphertext: Uint8Array) {\n        const { xk, authKey, counter, tagMask } = deriveKeys();\n        const toClean: (Uint8Array | Uint32Array)[] = [xk, authKey, tagMask, counter];\n        if (!isAligned32(ciphertext)) toClean.push((ciphertext = copyBytes(ciphertext)));\n        const data = ciphertext.subarray(0, -tagLength);\n        const passedTag = ciphertext.subarray(-tagLength);\n        const tag = _computeTag(authKey, tagMask, data);\n        toClean.push(tag);\n        if (!equalBytes(tag, passedTag)) throw new Error('aes/gcm: invalid ghash tag');\n        const out = ctr32(xk, false, counter, data);\n        clean(...toClean);\n        return out;\n      },\n    };\n  }\n);\n\nconst limit = (name: string, min: number, max: number) => (value: number) => {\n  if (!Number.isSafeInteger(value) || min > value || value > max) {\n    const minmax = '[' + min + '..' + max + ']';\n    throw new Error('' + name + ': expected value in range ' + minmax + ', got ' + value);\n  }\n};\n\n/**\n * AES-GCM-SIV: classic AES-GCM with nonce-misuse resistance.\n * Guarantees that, when a nonce is repeated, the only security loss is that identical\n * plaintexts will produce identical ciphertexts.\n * RFC 8452, https://datatracker.ietf.org/doc/html/rfc8452\n */\nexport const gcmsiv: ((key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array) => Cipher) & {\n  blockSize: number;\n  nonceLength: number;\n  tagLength: number;\n  varSizeNonce: true;\n} = /* @__PURE__ */ wrapCipher(\n  { blockSize: 16, nonceLength: 12, tagLength: 16, varSizeNonce: true },\n  function aessiv(key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): Cipher {\n    const tagLength = 16;\n    // From RFC 8452: Section 6\n    const AAD_LIMIT = limit('AAD', 0, 2 ** 36);\n    const PLAIN_LIMIT = limit('plaintext', 0, 2 ** 36);\n    const NONCE_LIMIT = limit('nonce', 12, 12);\n    const CIPHER_LIMIT = limit('ciphertext', 16, 2 ** 36 + 16);\n    abytes(key, 16, 24, 32);\n    NONCE_LIMIT(nonce.length);\n    if (AAD !== undefined) AAD_LIMIT(AAD.length);\n    function deriveKeys() {\n      const xk = expandKeyLE(key);\n      const encKey = new Uint8Array(key.length);\n      const authKey = new Uint8Array(16);\n      const toClean: (Uint8Array | Uint32Array)[] = [xk, encKey];\n      let _nonce = nonce;\n      if (!isAligned32(_nonce)) toClean.push((_nonce = copyBytes(_nonce)));\n      const n32 = u32(_nonce);\n      // prettier-ignore\n      let s0 = 0, s1 = n32[0], s2 = n32[1], s3 = n32[2];\n      let counter = 0;\n      for (const derivedKey of [authKey, encKey].map(u32)) {\n        const d32 = u32(derivedKey);\n        for (let i = 0; i < d32.length; i += 2) {\n          // aes(u32le(0) || nonce)[:8] || aes(u32le(1) || nonce)[:8] ...\n          const { s0: o0, s1: o1 } = encrypt(xk, s0, s1, s2, s3);\n          d32[i + 0] = o0;\n          d32[i + 1] = o1;\n          s0 = ++counter; // increment counter inside state\n        }\n      }\n      const res = { authKey, encKey: expandKeyLE(encKey) };\n      // Cleanup\n      clean(...toClean);\n      return res;\n    }\n    function _computeTag(encKey: Uint32Array, authKey: Uint8Array, data: Uint8Array) {\n      const tag = computeTag(polyval, true, authKey, data, AAD);\n      // Compute the expected tag by XORing S_s and the nonce, clearing the\n      // most significant bit of the last byte and encrypting with the\n      // message-encryption key.\n      for (let i = 0; i < 12; i++) tag[i] ^= nonce[i];\n      tag[15] &= 0x7f; // Clear the highest bit\n      // encrypt tag as block\n      const t32 = u32(tag);\n      // prettier-ignore\n      let s0 = t32[0], s1 = t32[1], s2 = t32[2], s3 = t32[3];\n      ({ s0, s1, s2, s3 } = encrypt(encKey, s0, s1, s2, s3));\n      (t32[0] = s0), (t32[1] = s1), (t32[2] = s2), (t32[3] = s3);\n      return tag;\n    }\n    // actual decrypt/encrypt of message.\n    function processSiv(encKey: Uint32Array, tag: Uint8Array, input: Uint8Array) {\n      let block = copyBytes(tag);\n      block[15] |= 0x80; // Force highest bit\n      const res = ctr32(encKey, true, block, input);\n      // Cleanup\n      clean(block);\n      return res;\n    }\n    return {\n      encrypt(plaintext: Uint8Array) {\n        PLAIN_LIMIT(plaintext.length);\n        const { encKey, authKey } = deriveKeys();\n        const tag = _computeTag(encKey, authKey, plaintext);\n        const toClean: (Uint8Array | Uint32Array)[] = [encKey, authKey, tag];\n        if (!isAligned32(plaintext)) toClean.push((plaintext = copyBytes(plaintext)));\n        const out = new Uint8Array(plaintext.length + tagLength);\n        out.set(tag, plaintext.length);\n        out.set(processSiv(encKey, tag, plaintext));\n        // Cleanup\n        clean(...toClean);\n        return out;\n      },\n      decrypt(ciphertext: Uint8Array) {\n        CIPHER_LIMIT(ciphertext.length);\n        const tag = ciphertext.subarray(-tagLength);\n        const { encKey, authKey } = deriveKeys();\n        const toClean: (Uint8Array | Uint32Array)[] = [encKey, authKey];\n        if (!isAligned32(ciphertext)) toClean.push((ciphertext = copyBytes(ciphertext)));\n        const plaintext = processSiv(encKey, tag, ciphertext.subarray(0, -tagLength));\n        const expectedTag = _computeTag(encKey, authKey, plaintext);\n        toClean.push(expectedTag);\n        if (!equalBytes(tag, expectedTag)) {\n          clean(...toClean);\n          throw new Error('invalid polyval tag');\n        }\n        // Cleanup\n        clean(...toClean);\n        return plaintext;\n      },\n    };\n  }\n);\n\n/**\n * AES-GCM-SIV, not AES-SIV.\n * This is legace name, use `gcmsiv` export instead.\n * @deprecated\n */\nexport const siv: typeof gcmsiv = gcmsiv;\n\nfunction isBytes32(a: unknown): a is Uint32Array {\n  return (\n    a instanceof Uint32Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint32Array')\n  );\n}\n\nfunction encryptBlock(xk: Uint32Array, block: Uint8Array): Uint8Array {\n  abytes(block, 16);\n  if (!isBytes32(xk)) throw new Error('_encryptBlock accepts result of expandKeyLE');\n  const b32 = u32(block);\n  let { s0, s1, s2, s3 } = encrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n  (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n  return block;\n}\n\nfunction decryptBlock(xk: Uint32Array, block: Uint8Array): Uint8Array {\n  abytes(block, 16);\n  if (!isBytes32(xk)) throw new Error('_decryptBlock accepts result of expandKeyLE');\n  const b32 = u32(block);\n  let { s0, s1, s2, s3 } = decrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n  (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n  return block;\n}\n\n/**\n * AES-W (base for AESKW/AESKWP).\n * Specs: [SP800-38F](https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-38F.pdf),\n * [RFC 3394](https://datatracker.ietf.org/doc/rfc3394/),\n * [RFC 5649](https://datatracker.ietf.org/doc/rfc5649/).\n */\nconst AESW = {\n  /*\n  High-level pseudocode:\n  ```\n  A: u64 = IV\n  out = []\n  for (let i=0, ctr = 0; i<6; i++) {\n    for (const chunk of chunks(plaintext, 8)) {\n      A ^= swapEndianess(ctr++)\n      [A, res] = chunks(encrypt(A || chunk), 8);\n      out ||= res\n    }\n  }\n  out = A || out\n  ```\n  Decrypt is the same, but reversed.\n  */\n  encrypt(kek: Uint8Array, out: Uint8Array) {\n    // Size is limited to 4GB, otherwise ctr will overflow and we'll need to switch to bigints.\n    // If you need it larger, open an issue.\n    if (out.length >= 2 ** 32) throw new Error('plaintext should be less than 4gb');\n    const xk = expandKeyLE(kek);\n    if (out.length === 16) encryptBlock(xk, out);\n    else {\n      const o32 = u32(out);\n      // prettier-ignore\n      let a0 = o32[0], a1 = o32[1]; // A\n      for (let j = 0, ctr = 1; j < 6; j++) {\n        for (let pos = 2; pos < o32.length; pos += 2, ctr++) {\n          const { s0, s1, s2, s3 } = encrypt(xk, a0, a1, o32[pos], o32[pos + 1]);\n          // A = MSB(64, B) ^ t where t = (n*j)+i\n          (a0 = s0), (a1 = s1 ^ byteSwap(ctr)), (o32[pos] = s2), (o32[pos + 1] = s3);\n        }\n      }\n      (o32[0] = a0), (o32[1] = a1); // out = A || out\n    }\n    xk.fill(0);\n  },\n  decrypt(kek: Uint8Array, out: Uint8Array) {\n    if (out.length - 8 >= 2 ** 32) throw new Error('ciphertext should be less than 4gb');\n    const xk = expandKeyDecLE(kek);\n    const chunks = out.length / 8 - 1; // first chunk is IV\n    if (chunks === 1) decryptBlock(xk, out);\n    else {\n      const o32 = u32(out);\n      // prettier-ignore\n      let a0 = o32[0], a1 = o32[1]; // A\n      for (let j = 0, ctr = chunks * 6; j < 6; j++) {\n        for (let pos = chunks * 2; pos >= 1; pos -= 2, ctr--) {\n          a1 ^= byteSwap(ctr);\n          const { s0, s1, s2, s3 } = decrypt(xk, a0, a1, o32[pos], o32[pos + 1]);\n          (a0 = s0), (a1 = s1), (o32[pos] = s2), (o32[pos + 1] = s3);\n        }\n      }\n      (o32[0] = a0), (o32[1] = a1);\n    }\n    xk.fill(0);\n  },\n};\n\nconst AESKW_IV = /* @__PURE__ */ new Uint8Array(8).fill(0xa6); // A6A6A6A6A6A6A6A6\n\n/**\n * AES-KW (key-wrap). Injects static IV into plaintext, adds counter, encrypts 6 times.\n * Reduces block size from 16 to 8 bytes.\n * For padded version, use aeskwp.\n * [RFC 3394](https://datatracker.ietf.org/doc/rfc3394/),\n * [NIST.SP.800-38F](https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-38F.pdf).\n */\nexport const aeskw: ((kek: Uint8Array) => Cipher) & {\n  blockSize: number;\n} = /* @__PURE__ */ wrapCipher(\n  { blockSize: 8 },\n  (kek: Uint8Array): Cipher => ({\n    encrypt(plaintext: Uint8Array) {\n      if (!plaintext.length || plaintext.length % 8 !== 0)\n        throw new Error('invalid plaintext length');\n      if (plaintext.length === 8)\n        throw new Error('8-byte keys not allowed in AESKW, use AESKWP instead');\n      const out = concatBytes(AESKW_IV, plaintext);\n      AESW.encrypt(kek, out);\n      return out;\n    },\n    decrypt(ciphertext: Uint8Array) {\n      // ciphertext must be at least 24 bytes and a multiple of 8 bytes\n      // 24 because should have at least two block (1 iv + 2).\n      // Replace with 16 to enable '8-byte keys'\n      if (ciphertext.length % 8 !== 0 || ciphertext.length < 3 * 8)\n        throw new Error('invalid ciphertext length');\n      const out = copyBytes(ciphertext);\n      AESW.decrypt(kek, out);\n      if (!equalBytes(out.subarray(0, 8), AESKW_IV)) throw new Error('integrity check failed');\n      out.subarray(0, 8).fill(0); // ciphertext.subarray(0, 8) === IV, but we clean it anyway\n      return out.subarray(8);\n    },\n  })\n);\n\n/*\nWe don't support 8-byte keys. The rabbit hole:\n\n- Wycheproof says: \"NIST SP 800-38F does not define the wrapping of 8 byte keys.\n  RFC 3394 Section 2  on the other hand specifies that 8 byte keys are wrapped\n  by directly encrypting one block with AES.\"\n    - https://github.com/C2SP/wycheproof/blob/master/doc/key_wrap.md\n    - \"RFC 3394 specifies in Section 2, that the input for the key wrap\n      algorithm must be at least two blocks and otherwise the constant\n      field and key are simply encrypted with ECB as a single block\"\n- What RFC 3394 actually says (in Section 2):\n    - \"Before being wrapped, the key data is parsed into n blocks of 64 bits.\n      The only restriction the key wrap algorithm places on n is that n be\n      at least two\"\n    - \"For key data with length less than or equal to 64 bits, the constant\n      field used in this specification and the key data form a single\n      128-bit codebook input making this key wrap unnecessary.\"\n- Which means \"assert(n >= 2)\" and \"use something else for 8 byte keys\"\n- NIST SP800-38F actually prohibits 8-byte in \"5.3.1 Mandatory Limits\".\n  It states that plaintext for KW should be \"2 to 2^54 -1 semiblocks\".\n- So, where does \"directly encrypt single block with AES\" come from?\n    - Not RFC 3394. Pseudocode of key wrap in 2.2 explicitly uses\n      loop of 6 for any code path\n    - There is a weird W3C spec:\n      https://www.w3.org/TR/2002/REC-xmlenc-core-20021210/Overview.html#kw-aes128\n    - This spec is outdated, as admitted by Wycheproof authors\n    - There is RFC 5649 for padded key wrap, which is padding construction on\n      top of AESKW. In '4.1.2' it says: \"If the padded plaintext contains exactly\n      eight octets, then prepend the AIV as defined in Section 3 above to P[1] and\n      encrypt the resulting 128-bit block using AES in ECB mode [Modes] with key\n      K (the KEK).  In this case, the output is two 64-bit blocks C[0] and C[1]:\"\n    - Browser subtle crypto is actually crashes on wrapping keys less than 16 bytes:\n      `Error: error:1C8000E6:Provider routines::invalid input length] { opensslErrorStack: [ 'error:030000BD:digital envelope routines::update error' ]`\n\nIn the end, seems like a bug in Wycheproof.\nThe 8-byte check can be easily disabled inside of AES_W.\n*/\n\nconst AESKWP_IV = 0xa65959a6; // single u32le value\n\n/**\n * AES-KW, but with padding and allows random keys.\n * Second u32 of IV is used as counter for length.\n * [RFC 5649](https://www.rfc-editor.org/rfc/rfc5649)\n */\nexport const aeskwp: ((kek: Uint8Array) => Cipher) & {\n  blockSize: number;\n} = /* @__PURE__ */ wrapCipher(\n  { blockSize: 8 },\n  (kek: Uint8Array): Cipher => ({\n    encrypt(plaintext: Uint8Array) {\n      if (!plaintext.length) throw new Error('invalid plaintext length');\n      const padded = Math.ceil(plaintext.length / 8) * 8;\n      const out = new Uint8Array(8 + padded);\n      out.set(plaintext, 8);\n      const out32 = u32(out);\n      out32[0] = AESKWP_IV;\n      out32[1] = byteSwap(plaintext.length);\n      AESW.encrypt(kek, out);\n      return out;\n    },\n    decrypt(ciphertext: Uint8Array) {\n      // 16 because should have at least one block\n      if (ciphertext.length < 16) throw new Error('invalid ciphertext length');\n      const out = copyBytes(ciphertext);\n      const o32 = u32(out);\n      AESW.decrypt(kek, out);\n      const len = byteSwap(o32[1]) >>> 0;\n      const padded = Math.ceil(len / 8) * 8;\n      if (o32[0] !== AESKWP_IV || out.length - 8 !== padded)\n        throw new Error('integrity check failed');\n      for (let i = len; i < padded; i++)\n        if (out[8 + i] !== 0) throw new Error('integrity check failed');\n      out.subarray(0, 8).fill(0); // ciphertext.subarray(0, 8) === IV, but we clean it anyway\n      return out.subarray(8, 8 + len);\n    },\n  })\n);\n\n/** Unsafe low-level internal methods. May change at any time. */\nexport const unsafe: {\n  expandKeyLE: typeof expandKeyLE;\n  expandKeyDecLE: typeof expandKeyDecLE;\n  encrypt: typeof encrypt;\n  decrypt: typeof decrypt;\n  encryptBlock: typeof encryptBlock;\n  decryptBlock: typeof decryptBlock;\n  ctrCounter: typeof ctrCounter;\n  ctr32: typeof ctr32;\n} = {\n  expandKeyLE,\n  expandKeyDecLE,\n  encrypt,\n  decrypt,\n  encryptBlock,\n  decryptBlock,\n  ctrCounter,\n  ctr32,\n};\n", "import { Buff } from '@cmdcode/buff';\nimport { secp256k1, schnorr } from '@noble/curves/secp256k1';\nimport { gcm } from '@noble/ciphers/aes';\nimport { mod } from '@noble/curves/abstract/modular';\nexport function gen_seckey(secret) {\n    let sbig = (secret !== undefined)\n        ? Buff.hex(secret).big\n        : Buff.random(32).big;\n    sbig = mod(sbig, secp256k1.CURVE.n);\n    return Buff.big(sbig).hex;\n}\nexport function get_pubkey(seckey) {\n    const pbytes = schnorr.getPublicKey(seckey);\n    return new Buff(pbytes).hex;\n}\nexport function get_shared_secret(seckey, peer_pk) {\n    const pubkey = (peer_pk.length === 66)\n        ? peer_pk\n        : '02' + peer_pk;\n    const sbytes = secp256k1.getSharedSecret(seckey, pubkey, true);\n    return new Buff(sbytes).slice(1).hex;\n}\nexport function sign_msg(seckey, message) {\n    const sig = schnorr.sign(message, seckey);\n    return new Buff(sig).hex;\n}\nexport function verify_sig(message, pubkey, signature) {\n    return schnorr.verify(signature, message, pubkey);\n}\nexport function encrypt_content(secret, content, iv) {\n    const cbytes = Buff.str(content);\n    const sbytes = Buff.hex(secret);\n    const vector = (iv !== undefined)\n        ? Buff.hex(iv, 24)\n        : Buff.random(24);\n    const encrypted = gcm(sbytes, vector).encrypt(cbytes);\n    return new Buff(encrypted).b64url + '?iv=' + vector.b64url;\n}\nexport function decrypt_content(secret, content) {\n    const [encryped, iv] = content.split('?iv=');\n    const cbytes = Buff.b64url(encryped);\n    const sbytes = Buff.hex(secret);\n    const vector = Buff.b64url(iv);\n    const decrypted = gcm(sbytes, vector).decrypt(cbytes);\n    return new Buff(decrypted).str;\n}\n", "import { Buff } from '@cmdcode/buff';\nexport function gen_message_id() {\n    return Buff.random(16).hex;\n}\nexport function get_event_id(template) {\n    const preimg = JSON.stringify([\n        0,\n        template.pubkey,\n        template.created_at,\n        template.kind,\n        template.tags,\n        template.content,\n    ]);\n    return Buff.str(preimg).digest.hex;\n}\nexport function get_tags(event, tag) {\n    return event.tags.filter(e => e.at(0) === tag);\n}\nexport function is_recipient(event, pubkey) {\n    const peers = get_tags(event, 'p');\n    return peers.some(e => e[1] === pubkey);\n}\nexport function get_unique_items(arr) {\n    const ret = new Set();\n    for (const row of arr) {\n        for (const item of row) {\n            ret.add(item);\n        }\n    }\n    return [...ret];\n}\n", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\"\n        ? params(data)\n        : typeof params === \"string\"\n            ? { message: params }\n            : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nfunction custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    var _a, _b;\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n", "import { z } from 'zod';\nconst big = z.bigint(), bool = z.boolean(), date = z.date(), num = z.number(), uint = z.number().max(Number.MAX_SAFE_INTEGER), str = z.string(), stamp = z.number().min(500_000_000).max(Number.MAX_SAFE_INTEGER), url = z.string().url(), any = z.any();\nconst hex = z.string()\n    .regex(/^[0-9a-fA-F]*$/)\n    .refine(e => e.length % 2 === 0);\nconst literal = z.union([z.string(), z.number(), z.boolean(), z.null()]);\nconst hex16 = hex.refine((e) => e.length === 32);\nconst hex20 = hex.refine((e) => e.length === 40);\nconst hex32 = hex.refine((e) => e.length === 64);\nconst hex64 = hex.refine((e) => e.length === 128);\nconst pubkey = hex.refine((e) => e.length === 66);\nconst base58 = z.string().regex(/^[1-9A-HJ-NP-Za-km-z]+$/);\nconst base64 = z.string().regex(/^[a-zA-Z0-9+/]+={0,2}$/);\nconst b64url = z.string().regex(/^[a-zA-Z0-9\\-_]+={0,2}$/);\nconst bech32 = z.string().regex(/^[a-z]+1[023456789acdefghjklmnpqrstuvwxyz]+$/);\nexport default {\n    any,\n    base58,\n    base64,\n    b64url,\n    bech32,\n    big,\n    bool,\n    date,\n    hex32,\n    hex16,\n    hex20,\n    hex64,\n    hex,\n    literal,\n    num,\n    pubkey,\n    str,\n    stamp,\n    uint,\n    url\n};\n", "import { z } from 'zod';\nimport base from './base.js';\nconst tags = base.str.array();\nconst template = z.object({\n    content: base.str,\n    created_at: base.stamp,\n    kind: base.num,\n    pubkey: base.hex32,\n    tags: tags.array()\n});\nconst unsigned = template.extend({\n    id: base.hex32\n});\nconst signed = unsigned.extend({\n    sig: base.hex64,\n});\nexport default { signed, tags, template, unsigned };\n", "import { z } from 'zod';\nimport base from './base.js';\nconst mid = base.hex16;\nconst payload = base.str;\nconst topic = base.str.min(3).max(256);\nconst envelope = z.tuple([topic, mid, payload]);\nexport default { envelope };\n", "import base from './base.js';\nimport event from './event.js';\nimport msg from './msg.js';\nexport default { base, event, msg };\n", "import { Buff } from '@cmdcode/buff';\nexport var Assert;\n(function (Assert) {\n    function ok(value, message) {\n        if (value === false)\n            throw new Error(message ?? 'Assertion failed!');\n    }\n    Assert.ok = ok;\n    function exists(input, err_msg) {\n        if (typeof input === 'undefined') {\n            throw new TypeError(err_msg ?? 'Input is undefined!');\n        }\n        if (input === null) {\n            throw new TypeError(err_msg ?? 'Input is null!');\n        }\n    }\n    Assert.exists = exists;\n    function size(input, size, err_msg) {\n        const bytes = Buff.bytes(input);\n        if (bytes.length !== size) {\n            throw new Error(err_msg ?? `Invalid byte size: ${bytes.hex} !== ${size}`);\n        }\n        return true;\n    }\n    Assert.size = size;\n})(Assert || (Assert = {}));\n", "export const now = () => Math.floor(Date.now() / 1000);\nexport const sleep = (ms = 1000) => new Promise(res => setTimeout(res, ms));\nexport function parse_error(err) {\n    if (err instanceof Error)\n        return err.message;\n    if (typeof err === 'string')\n        return err;\n    return String(err);\n}\n", "import { get_event_id } from './util.js';\nimport { encrypt_content, get_pubkey, get_shared_secret, sign_msg, verify_sig } from './crypto.js';\nimport Schema from '../schema/index.js';\nimport * as Util from '../util/index.js';\nexport function create_event(config, payload, peer_pk, seckey) {\n    const created_at = config.created_at ?? Util.now();\n    const pubkey = get_pubkey(seckey);\n    const secret = get_shared_secret(seckey, peer_pk);\n    const content = encrypt_content(secret, payload);\n    const event = { ...config, pubkey, content, created_at };\n    event.tags.push(['p', peer_pk]);\n    return sign_event(seckey, event);\n}\nexport function sign_event(seckey, template) {\n    const id = get_event_id(template);\n    const sig = sign_msg(seckey, id);\n    return { ...template, id, sig };\n}\nexport function verify_event(event) {\n    const { id, sig, ...template } = event;\n    const schema = Schema.event.signed;\n    const parsed = schema.safeParse(event);\n    const vid = get_event_id(template);\n    if (!parsed.success) {\n        return 'event failed schema validation';\n    }\n    else if (id !== vid) {\n        return 'event id mismatch';\n    }\n    else if (!verify_sig(id, event.pubkey, sig)) {\n        return 'invalid event signature';\n    }\n    else {\n        return null;\n    }\n}\n", "import { verify_event } from './event.js';\nimport { gen_message_id, is_recipient } from './util.js';\nimport { decrypt_content, get_pubkey, get_shared_secret } from './crypto.js';\nimport * as CONST from '../const.js';\nimport Schema from '../schema/index.js';\nexport function decrypt_payload(event, seckey) {\n    const error = verify_event(event);\n    if (error !== null) {\n        throw new Error(error);\n    }\n    const pubkey = get_pubkey(seckey);\n    if (!is_recipient(event, pubkey)) {\n        throw new Error('pubkey not in peers list');\n    }\n    const secret = get_shared_secret(seckey, event.pubkey);\n    const content = decrypt_content(secret, event.content);\n    const payload = JSON.parse(content);\n    return payload;\n}\nexport function finalize_message(template) {\n    const id = template.id ?? gen_message_id();\n    return { ...template, id };\n}\nexport function create_payload(tag, data, id) {\n    try {\n        return JSON.stringify([tag, id, data]);\n    }\n    catch (err) {\n        throw new Error('failed to create message payload');\n    }\n}\nexport function parse_envelope(envelope, event) {\n    const schema = Schema.msg.envelope;\n    const parsed = schema.safeParse(envelope);\n    if (!parsed.success) {\n        if (CONST.DEBUG)\n            console.log(parsed.error);\n        throw new Error('envelope failed schema validation');\n    }\n    const [tag, id, data] = parsed.data;\n    return { env: event, data, id, tag };\n}\n", "import Schema from '../schema/index.js';\nexport function verify_relays(relays) {\n    const schema = Schema.base.url.array();\n    const parsed = schema.safeParse(relays);\n    if (!parsed.success) {\n        throw new Error('invalid relay set: ' + relays);\n    }\n}\nexport function verify_seckey(seckey) {\n    const schema = Schema.base.hex32;\n    const parsed = schema.safeParse(seckey);\n    if (!parsed.success) {\n        throw new Error('invalid secret key: ' + seckey);\n    }\n    else {\n    }\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { DOMAIN, _N } from '../const.js';\nimport { str_to_bytes } from './util.js';\nimport { hash_to_field } from '@noble/curves/abstract/hash-to-curve';\nconst OPT = { m: 1, p: _N, k: 128, expand: 'xmd', hash: sha256 };\nfunction get_opts(DST) {\n    return { ...OPT, DST };\n}\nexport function H1(msg) {\n    const DST = DOMAIN + 'rho';\n    const nums = hash_to_field(msg, 1, get_opts(DST));\n    return Buff.big(nums[0][0], 32);\n}\nexport function H2(msg) {\n    const DST = DOMAIN + 'chal';\n    const nums = hash_to_field(msg, 1, get_opts(DST));\n    return Buff.big(nums[0][0], 32);\n}\nexport function H3(msg) {\n    const DST = DOMAIN + 'nonce';\n    const nums = hash_to_field(msg, 1, get_opts(DST));\n    return Buff.big(nums[0][0], 32);\n}\nexport function H4(msg) {\n    const DST = str_to_bytes(DOMAIN + 'msg');\n    const hash = sha256(new Uint8Array([...DST, ...msg]));\n    return new Buff(hash);\n}\nexport function H5(msg) {\n    const DST = str_to_bytes(DOMAIN + 'com');\n    const hash = sha256(new Uint8Array([...DST, ...msg]));\n    return new Buff(hash);\n}\n", "import { secp256k1 } from '@noble/curves/secp256k1';\nimport { Field } from '@noble/curves/abstract/modular';\nexport const _0n = BigInt(0);\nexport const _1n = BigInt(1);\nexport const _P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nexport const _N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nexport const CURVE = secp256k1.CURVE;\nexport const FIELD = Field(_N, 32, true);\nexport const POINT = secp256k1.ProjectivePoint;\nexport const DOMAIN = 'FROST-secp256k1-SHA256-v1';\nexport default { _0n, _1n, _N, _P, CURVE, DOMAIN, FIELD, POINT };\n", "import { Buff } from '@cmdcode/buff';\nimport { mod, pow } from '@noble/curves/abstract/modular';\nimport CONST from '../const.js';\nconst { POINT, _N, _P } = CONST;\nexport function mod_n(x) {\n    return mod(x, _N);\n}\nexport function mod_p(x) {\n    return mod(x, _P);\n}\nexport function pow_n(x, p) {\n    if (typeof x === 'number')\n        x = BigInt(x);\n    if (typeof p === 'number')\n        p = BigInt(p);\n    return pow(x, p, _N);\n}\nexport function str_to_bytes(str) {\n    return new TextEncoder().encode(str);\n}\nexport function bytes_to_str(bytes) {\n    return new TextDecoder().decode(bytes);\n}\nexport function lift_x(pubkey) {\n    let bytes = Buff.bytes(pubkey);\n    if (bytes.length < 32 || bytes.length > 33) {\n        throw new Error('invalid pubkeky: ' + bytes.hex + ' ' + bytes.length);\n    }\n    else if (bytes.length === 32) {\n        bytes = bytes.prepend(2);\n    }\n    return POINT.fromHex(bytes.hex);\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { secp256k1 } from '@noble/curves/secp256k1';\nimport { assert } from '../util/index.js';\nimport { mod_n } from './util.js';\nimport CONST from '../const.js';\nconst { POINT, _0n, _1n, _N } = CONST;\nexport function Order() {\n    return _N;\n}\nexport function Identity() {\n    return new POINT(_0n, _1n, _0n);\n}\nexport function RandomScalar() {\n    const bigint = Buff.random(32).big;\n    return mod_n(bigint);\n}\nexport function ElementAdd(A, B) {\n    if (A === null && B === null) {\n        throw new Error('both points are null!');\n    }\n    else if (A === null) {\n        assert.exists(B);\n        return B;\n    }\n    else if (B === null) {\n        return A;\n    }\n    else {\n        const C = A.add(B);\n        C.assertValidity();\n        return C;\n    }\n}\nexport function ElementAddMany(elem) {\n    const sum = elem.slice(1).reduce((p, c) => ElementAdd(p, c), elem[0]);\n    if (sum === null) {\n        throw new Error('Summed point is null.');\n    }\n    sum.assertValidity();\n    return sum;\n}\nexport function ScalarMulti(A, k) {\n    const pt = A.multiply(k);\n    pt.assertValidity();\n    return pt;\n}\nexport function ScalarBaseMulti(k) {\n    const base = secp256k1.ProjectivePoint.BASE;\n    const pt = base.multiply(k);\n    pt.assertValidity();\n    return pt;\n}\nexport function SerializeElement(A) {\n    return Buff.bytes(A.toRawBytes(true));\n}\nexport function DeserializeElement(bytes) {\n    const hex = Buff.bytes(bytes).hex;\n    return POINT.fromHex(hex);\n}\nexport function SerializeScalar(scalar) {\n    return new Buff(scalar, 32);\n}\nexport function DeserializeScalar(bytes) {\n    return Buff.bytes(bytes).big;\n}\n", "import { Buff } from '@cmdcode/buff';\nexport function ok(value, message) {\n    if (value === false)\n        throw new Error(message ?? 'Assertion failed!');\n}\nexport function exists(input) {\n    if (typeof input === 'undefined') {\n        throw new TypeError('Input is undefined!');\n    }\n    if (input === null) {\n        throw new TypeError('Input is null!');\n    }\n}\nexport function size(input, size) {\n    const bytes = Buff.bytes(input);\n    if (bytes.length !== size) {\n        throw new Error(`Invalid byte size: ${bytes.hex} !== ${size}`);\n    }\n    return true;\n}\nexport function is_included(array, item) {\n    if (!array.includes(item)) {\n        throw new Error('item is not included in array');\n    }\n}\nexport function is_unique_set(array) {\n    for (const x of array) {\n        const c = array.filter(e => e === x).length;\n        if (c !== 1) {\n            throw new Error('item in set is not unique: ' + String(x));\n        }\n    }\n}\nexport function is_equal_set(array) {\n    if (!array.every(e => e === array[0])) {\n        throw new Error('set does not have equal items');\n    }\n}\nexport function equal_arr_size(array_a, array_b) {\n    if (array_a.length !== array_b.length) {\n        throw new Error(`array lengths are unequal: ${array_a.length} !== ${array_b.length}`);\n    }\n}\n", "import { Buff } from '@cmdcode/buff';\nexport function random_bytes(size = 32) {\n    return Buff.random(size);\n}\nexport function count_scalars(x_j, L) {\n    return L.filter(x => x === x_j).length;\n}\nexport function get_record(records, idx) {\n    const record = records.find(e => e.idx === idx);\n    if (record === undefined) {\n        throw new Error('record not found for index: ' + idx);\n    }\n    return record;\n}\nexport function taghash(tag) {\n    const hash = Buff.str(tag).digest;\n    return Buff.join([hash, hash]);\n}\nexport function hash340(tag, ...data) {\n    const hash = taghash(tag);\n    const bytes = data.map(e => Buff.bytes(e));\n    return Buff.join([hash, ...bytes]).digest;\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { G, H } from '../ecc/index.js';\nimport { lift_x, mod_n } from '../ecc/util.js';\nimport { assert, hash340 } from '../util/index.js';\nexport function generate_seckey(aux) {\n    const aux_bytes = (aux !== undefined)\n        ? Buff.bytes(aux, 32)\n        : Buff.random(32);\n    return H.H3(aux_bytes);\n}\nexport function generate_nonce(secret, aux_seed) {\n    const aux = (aux_seed !== undefined)\n        ? Buff.bytes(aux_seed, 32)\n        : Buff.random(32);\n    const secret_seed = Buff.join([aux, secret]);\n    return H.H3(secret_seed);\n}\nexport function tweak_seckey(seckey, tweak) {\n    const coeff = Buff.bytes(tweak).big;\n    const secret = Buff.bytes(seckey).big;\n    const tweaked = mod_n(secret * coeff);\n    return Buff.big(tweaked).hex;\n}\nexport function get_pubkey(secret) {\n    const scalar = Buff.bytes(secret).big;\n    const point = G.ScalarBaseMulti(scalar);\n    return G.SerializeElement(point).hex;\n}\nexport function tweak_pubkey(pubkey, tweak) {\n    const coeff = Buff.bytes(tweak).big;\n    let point = lift_x(pubkey);\n    point = point.multiply(coeff);\n    return G.SerializeElement(point).hex;\n}\nexport function get_challenge(pnonce, pubkey, message) {\n    const grp_pk = convert_pubkey(pubkey, 'bip340');\n    const grp_pn = convert_pubkey(pnonce, 'bip340');\n    assert.size(grp_pk, 32);\n    assert.size(grp_pn, 32);\n    const digest = hash340('BIP0340/challenge', grp_pn, grp_pk, message);\n    return digest.big;\n}\nexport function convert_pubkey(pubkey, type) {\n    const pub = Buff.bytes(pubkey);\n    if (type === 'ecdsa') {\n        return pub.length === 32\n            ? pub.prepend(2).hex\n            : pub.hex;\n    }\n    else if (type === 'bip340') {\n        return (pub.length === 33)\n            ? pub.slice(1).hex\n            : pub.hex;\n    }\n    else {\n        throw new Error('invalid pubkey type');\n    }\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { H, G } from '../ecc/index.js';\nimport { assert, get_record } from '../util/index.js';\nimport { generate_nonce, get_pubkey } from './helpers.js';\nexport function get_nonce_ids(pnonces) {\n    return pnonces.map(pn => BigInt(pn.idx));\n}\nexport function get_commits_prefix(pnonces) {\n    let enc_group_commit = [];\n    const sorted_pnonces = pnonces.sort((a, b) => a.idx - b.idx);\n    for (const { idx, hidden_pn, binder_pn } of sorted_pnonces) {\n        const enc_commit = [G.SerializeScalar(idx), hidden_pn, binder_pn];\n        enc_group_commit = [...enc_group_commit, ...enc_commit];\n    }\n    return Buff.join(enc_group_commit);\n}\nexport function get_group_prefix(pnonces, group_pk, message) {\n    const msg_bytes = Buff.hex(message);\n    const msg_hash = H.H4(msg_bytes);\n    const commit_list = get_commits_prefix(pnonces);\n    const commit_hash = H.H5(commit_list);\n    return Buff.join([group_pk, msg_hash, commit_hash]);\n}\nexport function get_bind_factor(binders, idx) {\n    for (const bind of binders) {\n        if (idx === bind.idx) {\n            return Buff.bytes(bind.factor).big;\n        }\n    }\n    throw new Error('invalid participant');\n}\nexport function get_group_binders(nonces, prefix) {\n    return nonces.map(({ idx }) => {\n        const scalar = G.SerializeScalar(idx);\n        const rho_input = Buff.join([prefix, scalar]);\n        return { idx, factor: H.H1(rho_input).hex };\n    });\n}\nexport function get_group_pubnonce(pnonces, binders) {\n    let group_commit = null;\n    for (const { idx, binder_pn, hidden_pn } of pnonces) {\n        const hidden_elem = G.DeserializeElement(hidden_pn);\n        const binding_elem = G.DeserializeElement(binder_pn);\n        const bind_factor = get_bind_factor(binders, idx);\n        const factored_elem = G.ScalarMulti(binding_elem, bind_factor);\n        group_commit = G.ElementAdd(group_commit, hidden_elem);\n        group_commit = G.ElementAdd(group_commit, factored_elem);\n    }\n    assert.exists(group_commit);\n    return G.SerializeElement(group_commit).hex;\n}\nexport function create_commit_pkg(secret_share, hidden_seed, binder_seed) {\n    const { idx, seckey } = secret_share;\n    const binder_sn = generate_nonce(seckey, binder_seed).hex;\n    const hidden_sn = generate_nonce(seckey, hidden_seed).hex;\n    const binder_pn = get_pubkey(binder_sn);\n    const hidden_pn = get_pubkey(hidden_sn);\n    return { idx, binder_pn, binder_sn, hidden_pn, hidden_sn };\n}\nexport function get_commit_pkg(commits, share) {\n    const idx = share.idx;\n    return get_record(commits, idx);\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { _0n, _1n, _N } from '../const.js';\nimport { mod_n } from './util.js';\nimport * as G from './group.js';\nexport function get_point_state(element, tweaks = []) {\n    const ints = tweaks.map(e => Buff.bytes(e).big);\n    const pos = _1n;\n    const neg = _N - pos;\n    let point = element, parity = pos, state = pos, tweak = _0n;\n    for (const t of ints) {\n        const tG = G.ScalarBaseMulti(t);\n        parity = point.hasEvenY() ? pos : neg;\n        point = (parity === neg) ? point.negate() : point;\n        point = G.ElementAdd(point, tG);\n        point.assertValidity();\n        state = mod_n(parity * state);\n        tweak = mod_n(t + (parity * tweak));\n    }\n    parity = point.hasEvenY() ? pos : neg;\n    return { parity, point, state, tweak };\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { get_point_state } from '../ecc/state.js';\nimport { lift_x } from '../ecc/util.js';\nimport { get_challenge } from '../lib/helpers.js';\nimport { get_group_binders, get_group_prefix, get_group_pubnonce, get_nonce_ids } from './commit.js';\nexport function get_group_key_context(pubkey, tweaks) {\n    const int_pk = Buff.bytes(pubkey).hex;\n    const int_pt = lift_x(int_pk);\n    const group_pt = get_point_state(int_pt, tweaks);\n    const group_pk = group_pt.point.toHex(true);\n    return { int_pk, int_pt, group_pk, group_pt };\n}\nexport function get_group_commit_context(key_ctx, pnonces, message) {\n    const group_pubkey = key_ctx.group_pk;\n    const bind_prefix = get_group_prefix(pnonces, group_pubkey, message).hex;\n    const bind_factors = get_group_binders(pnonces, bind_prefix);\n    const group_pn = get_group_pubnonce(pnonces, bind_factors);\n    const indexes = get_nonce_ids(pnonces);\n    const challenge = get_challenge(group_pn, group_pubkey, message);\n    message = Buff.bytes(message).hex;\n    return { bind_prefix, bind_factors, challenge, pnonces, group_pn, indexes, message };\n}\nexport function get_group_signing_ctx(group_pk, pnonces, message, tweaks) {\n    const key_ctx = get_group_key_context(group_pk, tweaks);\n    const com_ctx = get_group_commit_context(key_ctx, pnonces, message);\n    return { ...key_ctx, ...com_ctx };\n}\n", "import { _0n, _1n, FIELD } from '../const.js';\nimport { mod_n } from '../ecc/util.js';\nimport { assert } from '../util/index.js';\nexport function evaluate_x(L, x) {\n    if (x === _0n) {\n        throw new Error('x is zero');\n    }\n    let value = _0n;\n    for (const coeff of [...L].reverse()) {\n        value *= x;\n        value += coeff;\n        value = mod_n(value);\n    }\n    return value;\n}\nexport function interpolate_root(points) {\n    const coeffs = points.map(e => e[0]);\n    let p = _0n;\n    for (const [x, y] of points) {\n        const delta = interpolate_x(coeffs, x);\n        p += delta * y;\n        p = mod_n(p);\n    }\n    return p;\n}\nexport function interpolate_x(L, x) {\n    assert.is_included(L, x);\n    assert.is_unique_set(L);\n    let numerator = _1n, denominator = _1n;\n    for (const x_j of L) {\n        if (x_j === x)\n            continue;\n        numerator = mod_n(FIELD.mul(numerator, x_j));\n        denominator = mod_n(FIELD.mul(denominator, x_j - x));\n    }\n    return mod_n(FIELD.div(numerator, denominator));\n}\nexport function calc_lagrange_coeff(L, P, x) {\n    assert.is_unique_set(L);\n    let numerator = _1n, denominator = _1n;\n    for (const x_j of L) {\n        if (x_j === P)\n            continue;\n        numerator = mod_n(FIELD.mul(numerator, x - x_j));\n        denominator = mod_n(FIELD.mul(denominator, P - x_j));\n    }\n    return mod_n(FIELD.div(numerator, denominator));\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { lift_x, mod_n } from '../ecc/util.js';\nimport { G } from '../ecc/index.js';\nimport { assert } from '../util/index.js';\nimport { _0n } from '../const.js';\nimport { calc_lagrange_coeff } from './poly.js';\nexport function create_ecdh_share(members, share, pubkey) {\n    const mbrs = members\n        .filter(idx => idx !== share.idx)\n        .map(i => BigInt(i));\n    const idx = BigInt(share.idx);\n    const secret = Buff.hex(share.seckey).big;\n    const point = lift_x(pubkey);\n    const L_coeff = calc_lagrange_coeff(mbrs, idx, _0n);\n    const P_coeff = mod_n(L_coeff * secret);\n    const ecdh_pt = point.multiply(P_coeff);\n    const ecdh_pk = G.SerializeElement(ecdh_pt).hex;\n    return { idx: share.idx, pubkey: ecdh_pk };\n}\nexport function derive_ecdh_secret(shares) {\n    let point = null;\n    for (const share of shares) {\n        if (point === null) {\n            point = lift_x(share.pubkey);\n        }\n        else {\n            const pt = lift_x(share.pubkey);\n            point = point.add(pt);\n        }\n    }\n    assert.exists(point);\n    return G.SerializeElement(point).hex;\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { schnorr } from '@noble/curves/secp256k1';\nimport { G } from '../ecc/index.js';\nimport { lift_x, mod_n } from '../ecc/util.js';\nimport { _0n, _1n, CURVE } from '../const.js';\nimport { get_pubkey } from './helpers.js';\nimport { interpolate_x } from './poly.js';\nimport { get_group_binders, get_group_prefix, get_group_pubnonce, get_bind_factor } from './commit.js';\nexport function sign_msg(ctx, share, snonce) {\n    const { bind_factors, challenge, indexes, group_pt: Q } = ctx;\n    const bind_factor = get_bind_factor(bind_factors, share.idx);\n    const coefficient = interpolate_x(indexes, BigInt(share.idx));\n    if (snonce.idx !== share.idx) {\n        throw new Error(`commit index does not match share index: ${snonce.idx} !== ${share.idx}`);\n    }\n    let snonce_h = Buff.bytes(snonce.hidden_sn).big, snonce_b = Buff.bytes(snonce.binder_sn).big, seckey = Buff.bytes(share.seckey).big;\n    const R_elem = lift_x(ctx.group_pn);\n    if (!R_elem.hasEvenY()) {\n        snonce_h = CURVE.n - snonce_h;\n        snonce_b = CURVE.n - snonce_b;\n    }\n    const sk = mod_n(Q.parity * Q.state * seckey);\n    const nk = mod_n(snonce_h + (snonce_b * bind_factor));\n    const ps = mod_n((challenge * coefficient * sk) + nk);\n    return {\n        idx: share.idx,\n        psig: Buff.big(ps, 32).hex,\n        pubkey: get_pubkey(share.seckey)\n    };\n}\nexport function combine_partial_sigs(context, psigs) {\n    const { challenge, pnonces, group_pt: Q, group_pk, message } = context;\n    const commit_prefix = get_group_prefix(pnonces, group_pk, message);\n    const group_binders = get_group_binders(pnonces, commit_prefix);\n    const group_pnonce = get_group_pubnonce(pnonces, group_binders);\n    const ps = psigs\n        .map(e => Buff.hex(e.psig).big)\n        .reduce((acc, nxt) => mod_n(acc + nxt), _0n);\n    const twk = mod_n(challenge * Q.parity * Q.tweak);\n    const s = mod_n(ps + twk);\n    return Buff.join([group_pnonce.slice(2), Buff.big(s, 32)]).hex;\n}\nexport function verify_partial_sig(ctx, pnonce, share_pk, share_psig) {\n    const { bind_factors, challenge, indexes, group_pn, group_pt: Q } = ctx;\n    const binder = get_bind_factor(bind_factors, pnonce.idx);\n    let hidden_elem = lift_x(pnonce.hidden_pn), binder_elem = lift_x(pnonce.binder_pn), public_elem = lift_x(share_pk);\n    const R_elem = lift_x(group_pn);\n    if (!R_elem.hasEvenY()) {\n        hidden_elem = G.ScalarMulti(hidden_elem, CURVE.n - _1n);\n        binder_elem = G.ScalarMulti(binder_elem, CURVE.n - _1n);\n    }\n    const commit_elem = G.ScalarMulti(binder_elem, binder);\n    const nonce_elem = G.ElementAdd(hidden_elem, commit_elem);\n    const lambda_i = interpolate_x(indexes, BigInt(pnonce.idx));\n    const state = mod_n(Q.parity * Q.state);\n    const chal = mod_n(challenge * lambda_i * state);\n    const sig = Buff.hex(share_psig).big;\n    const sG = G.ScalarBaseMulti(sig);\n    const pki = G.ScalarMulti(public_elem, chal);\n    const R = G.ElementAdd(nonce_elem, pki);\n    return sG.x === R.x;\n}\nexport function verify_final_sig(context, message, signature) {\n    const sig = Buff.bytes(signature);\n    const msg = Buff.bytes(message);\n    return schnorr.verify(sig, msg, context.group_pk.slice(2));\n}\n", "import { create_ecdh_share, derive_ecdh_secret } from '@cmdcode/frost/lib';\nexport function create_ecdh_pkg(members, ecdh_pk, secshare) {\n    const ecdh_share = create_ecdh_share(members, secshare, ecdh_pk);\n    return { idx: ecdh_share.idx, keyshare: ecdh_share.pubkey, members, ecdh_pk };\n}\nexport function combine_ecdh_pkgs(pkgs) {\n    const keyshares = pkgs.map(e => {\n        return { idx: e.idx, pubkey: e.keyshare };\n    });\n    return derive_ecdh_secret(keyshares);\n}\n", "import { z } from 'zod';\nconst big = z.bigint(), bool = z.boolean(), date = z.date(), num = z.number(), uint = z.number().max(Number.MAX_SAFE_INTEGER), str = z.string(), stamp = z.number().min(500_000_000).max(Number.MAX_SAFE_INTEGER), any = z.any();\nconst sats = z.bigint().max(100000000n * 21000000n);\nconst literal = z.union([\n    z.string(), z.number(), z.boolean(), z.null()\n]);\nconst json = z.lazy(() => z.union([literal, z.array(json), z.record(json)]));\nconst hex = z.string().regex(/^[0-9a-fA-F]*$/).refine(e => e.length % 2 === 0);\nconst hex20 = hex.refine((e) => e.length === 40);\nconst hex32 = hex.refine((e) => e.length === 64);\nconst hex33 = hex.refine((e) => e.length === 66);\nconst hex64 = hex.refine((e) => e.length === 128);\nconst base58 = z.string().regex(/^[1-9A-HJ-NP-Za-km-z]+$/);\nconst base64 = z.string().regex(/^[a-zA-Z0-9+/]+={0,2}$/);\nconst base64url = z.string().regex(/^[a-zA-Z0-9\\-_]+={0,2}$/);\nconst bech32 = z.string().regex(/^[a-z]+1[023456789acdefghjklmnpqrstuvwxyz]+$/);\nexport default {\n    any,\n    base58,\n    base64,\n    base64url,\n    bech32,\n    big,\n    bool,\n    date,\n    hex20,\n    hex32,\n    hex33,\n    hex64,\n    hex,\n    json,\n    literal,\n    num,\n    sats,\n    str,\n    stamp,\n    uint\n};\n", "import { z } from 'zod';\nimport base from './base.js';\nconst commit = z.object({\n    idx: base.num,\n    pubkey: base.hex33,\n    hidden_pn: base.hex33,\n    binder_pn: base.hex33\n});\nconst group = z.object({\n    commits: z.array(commit),\n    group_pk: base.hex33,\n    threshold: base.num\n});\nconst share = z.object({\n    idx: base.num,\n    binder_sn: base.hex32,\n    hidden_sn: base.hex32,\n    seckey: base.hex32\n});\nconst ecdh = z.object({\n    idx: base.num,\n    keyshare: base.hex,\n    members: base.num.array(),\n    ecdh_pk: base.hex\n});\nexport default {\n    commit,\n    ecdh,\n    group,\n    share\n};\n", "import z from 'zod';\nimport base from './base.js';\nimport pkg from './pkg.js';\nconst commit = pkg.commit.extend({\n    bind_hash: base.hex32,\n    sid: base.hex32,\n    sighash: base.hex32\n});\nconst member = pkg.share.extend({\n    bind_hash: base.hex32,\n    sid: base.hex32,\n    sighash: base.hex32\n});\nconst psig_entry = z.tuple([base.hex32, base.hex32]);\nconst sighash_vec = z.tuple([base.hex32]).rest(base.hex32);\nconst template = z.object({\n    content: base.str.nullable(),\n    hashes: sighash_vec.array(),\n    members: base.num.array(),\n    stamp: base.num,\n    type: base.str,\n});\nconst session = template.extend({\n    gid: base.hex32,\n    sid: base.hex32,\n});\nconst psig_pkg = z.object({\n    idx: base.num,\n    psigs: psig_entry.array(),\n    pubkey: base.hex33,\n    sid: base.hex32\n});\nexport default { commit, member, psig_entry, psig_pkg, session, sighash_vec, template };\n", "import base from './base.js';\nimport pkg from './pkg.js';\nimport sign from './sign.js';\nexport default { base, pkg, sign };\n", "import Schema from '../schema/index.js';\nexport function parse_ecdh_message(msg) {\n    try {\n        const schema = Schema.pkg.ecdh;\n        const json = JSON.parse(msg.data);\n        const parsed = schema.parse(json);\n        return { ...msg, data: parsed };\n    }\n    catch {\n        throw new Error('ecdh message failed validation');\n    }\n}\nexport function parse_session_message(msg) {\n    try {\n        const schema = Schema.sign.session;\n        const json = JSON.parse(msg.data);\n        const parsed = schema.parse(json);\n        return { ...msg, data: parsed };\n    }\n    catch {\n        throw new Error('session message failed validation');\n    }\n}\nexport function parse_psig_message(msg) {\n    try {\n        const schema = Schema.sign.psig_pkg;\n        const json = JSON.parse(msg.data);\n        const parsed = schema.parse(json);\n        return { ...msg, data: parsed };\n    }\n    catch (err) {\n        throw new Error('signature message failed validation');\n    }\n}\nexport function parse_group_pkg(group_pkg) {\n    try {\n        const schema = Schema.pkg.group;\n        return schema.parse(group_pkg);\n    }\n    catch (err) {\n        console.log('error:', err);\n        throw new Error('group package failed validation');\n    }\n}\nexport function parse_share_pkg(share_pkg) {\n    try {\n        const schema = Schema.pkg.share;\n        return schema.parse(share_pkg);\n    }\n    catch (err) {\n        console.log('error:', err);\n        throw new Error('share package failed validation');\n    }\n}\n", "export const now = () => Math.floor(Date.now() / 1000);\nexport const sleep = (ms = 1000) => new Promise(res => setTimeout(res, ms));\nexport function copy_obj(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\nexport function normalize_obj(obj) {\n    if (obj instanceof Map || Array.isArray(obj) || typeof obj !== 'object') {\n        return obj;\n    }\n    else {\n        return Object.keys(obj)\n            .sort()\n            .filter(([_, value]) => value !== undefined)\n            .reduce((sorted, key) => {\n            sorted[key] = obj[key];\n            return sorted;\n        }, {});\n    }\n}\nexport function parse_error(err) {\n    if (err instanceof Error)\n        return err.message;\n    if (typeof err === 'string')\n        return err;\n    return String(err);\n}\nexport function validate_schema(obj, schema, err_msg) {\n    const parsed = schema.safeParse(obj);\n    if (parsed.success)\n        return true;\n    if (err_msg === undefined)\n        return false;\n    throw new Error(err_msg ?? 'object failed schema validation');\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { validate_schema } from './helpers.js';\nexport var Assert;\n(function (Assert) {\n    function ok(value, message) {\n        if (value === false)\n            throw new Error(message ?? 'Assertion failed!');\n    }\n    Assert.ok = ok;\n    function equal(actual, expected, err_msg) {\n        if (actual !== expected)\n            throw new Error(err_msg ?? `${actual} !== ${expected}`);\n    }\n    Assert.equal = equal;\n    function exists(input, err_msg) {\n        if (typeof input === 'undefined') {\n            throw new TypeError(err_msg ?? 'Input is undefined!');\n        }\n        if (input === null) {\n            throw new TypeError(err_msg ?? 'Input is null!');\n        }\n    }\n    Assert.exists = exists;\n    function size(input, size, err_msg) {\n        const bytes = Buff.bytes(input);\n        if (bytes.length !== size) {\n            throw new Error(err_msg ?? `Invalid byte size: ${bytes.hex} !== ${size}`);\n        }\n        return true;\n    }\n    Assert.size = size;\n    function schema(schema, input, err_msg) {\n        exists(input);\n        validate_schema(input, schema, err_msg ?? null);\n    }\n    Assert.schema = schema;\n    function is_hex(input) {\n        if (typeof input !== 'string' ||\n            input.match(/[^a-fA-F0-9]/) !== null ||\n            input.length % 2 !== 0) {\n            throw new Error('invalid hex:' + input);\n        }\n    }\n    Assert.is_hex = is_hex;\n})(Assert || (Assert = {}));\n", "import { Buff } from '@cmdcode/buff';\nimport { Assert } from './assert.js';\nimport { secp256k1, schnorr } from '@noble/curves/secp256k1';\nimport { Field } from '@noble/curves/abstract/modular';\nconst _N = secp256k1.CURVE.n;\nconst FD = Field(_N, 32, true);\nconst GP = secp256k1.ProjectivePoint.BASE;\nexport function get_seckey(secret, even_y = false) {\n    let sk = serialize_bytes(secret).big % _N;\n    if (even_y) {\n        const pt = GP.multiply(sk);\n        return (pt.hasEvenY())\n            ? Buff.big(sk).hex\n            : Buff.big(_N - sk).hex;\n    }\n    else {\n        return Buff.big(sk).hex;\n    }\n}\nexport function get_pubkey(seckey, format) {\n    const sk = serialize_bytes(seckey).big;\n    const pt = GP.multiply(sk);\n    const pk = pt.toHex(true);\n    return convert_pubkey(pk, format);\n}\nexport function tweak_seckey(seckey, tweak, even_y = false) {\n    const sk = serialize_bytes(seckey).big;\n    const twk = serialize_bytes(tweak).big;\n    const tweaked_sk = FD.add(sk, twk);\n    const new_secret = Buff.big(tweaked_sk);\n    return get_seckey(new_secret, even_y);\n}\nexport function tweak_pubkey(pubkey, tweak, even_y = false) {\n    const format = get_pubkey_format(pubkey);\n    const twk_big = serialize_bytes(tweak).big;\n    const pub_pt = lift_pubkey(pubkey);\n    const tweak_pt = GP.multiply(twk_big);\n    let tweaked_pt = pub_pt.add(tweak_pt);\n    if (even_y && !tweaked_pt.hasEvenY()) {\n        tweaked_pt = tweaked_pt.negate();\n    }\n    const pk = tweaked_pt.toHex(true);\n    return convert_pubkey(pk, format);\n}\nexport function verify_seckey(seckey) {\n    const sk = serialize_bytes(seckey);\n    Assert.size(sk, 32, 'ecdsa secret keys must be 32 bytes long');\n    Assert.ok(sk.big < _N, 'ecdsa secret keys must be less than the curve order');\n    Assert.ok(sk.big > 0, 'ecdsa secret keys must be greater than zero');\n}\nexport function verify_pubkey(pubkey, format) {\n    const pk = serialize_bytes(pubkey);\n    if (format === 'bip340') {\n        Assert.size(pk, 32, 'bip340 public keys must be 32 bytes long');\n    }\n    else if (format === 'ecdsa') {\n        Assert.size(pk, 33, 'ecdsa public keys must be 33 bytes long');\n    }\n    else {\n        throw new Error('invalid format: ' + format);\n    }\n    verify_point(pk);\n}\nexport function verify_signature(signature, message, pubkey, format) {\n    const sig = serialize_bytes(signature);\n    const msg = serialize_bytes(message);\n    const pk = serialize_pubkey(pubkey, format);\n    return (format === 'bip340')\n        ? schnorr.verify(sig, msg, pk)\n        : secp256k1.verify(sig, msg, pk);\n}\nexport function verify_point(pubkey) {\n    try {\n        const pt = lift_pubkey(pubkey);\n        pt.assertValidity();\n    }\n    catch (err) {\n        throw new Error('invalid secp256k1 point: ' + pubkey);\n    }\n}\nexport function verify_even_y(pubkey) {\n    const pt = lift_pubkey(pubkey);\n    Assert.ok(pt.hasEvenY(), 'pubkey must have an even y-coordinate');\n}\nexport function lift_pubkey(pubkey) {\n    try {\n        const pk = convert_pubkey(pubkey, 'ecdsa');\n        return secp256k1.ProjectivePoint.fromHex(pk);\n    }\n    catch (err) {\n        throw new Error('invalid pubkey: ' + pubkey);\n    }\n}\nexport function serialize_pubkey(pubkey, format) {\n    try {\n        const pk = serialize_bytes(pubkey);\n        if (pk.length === 33 && format === 'bip340') {\n            return pk.slice(1);\n        }\n        else if (pk.length === 32 && format === 'ecdsa') {\n            return pk.prepend(0x02);\n        }\n        else {\n            return pk;\n        }\n    }\n    catch (err) {\n        throw new Error('invalid pubkey: ' + String(pubkey));\n    }\n}\nexport function convert_pubkey(pubkey, format) {\n    const pk = serialize_pubkey(pubkey, format);\n    return pk.hex;\n}\nexport function get_pubkey_format(pubkey) {\n    const pk = serialize_bytes(pubkey);\n    if (pk.length === 33)\n        return 'ecdsa';\n    if (pk.length === 32)\n        return 'bip340';\n    throw new Error('invalid pubkey: ' + String(pubkey));\n}\nexport function serialize_bytes(bytes) {\n    try {\n        return Buff.bytes(bytes);\n    }\n    catch (err) {\n        throw new Error('invalid bytes: ' + String(bytes));\n    }\n}\n", "export var Parse;\n(function (Parse) {\n    function error(err) {\n        if (err instanceof Error)\n            return err.message;\n        if (typeof err === 'string')\n            return err;\n        return String(err);\n    }\n    Parse.error = error;\n    function data(data, schema) {\n        return schema.safeParse(data);\n    }\n    Parse.data = data;\n    function array(data, schema) {\n        const parsed = data.map(e => schema.safeParse(e));\n        const errors = parsed\n            .filter(e => !e.success)\n            .map(e => e.error.errors.map(x => `${x.message}: ${x.path}`));\n        return (errors.length !== 0)\n            ? { ok: false, errors }\n            : { ok: true, data: parsed.map(e => e.data) };\n    }\n    Parse.array = array;\n})(Parse || (Parse = {}));\n", "import { derive_shares_secret } from '@cmdcode/frost/lib';\nimport { Assert } from '../util/index.js';\nimport { convert_pubkey, get_pubkey } from '../util/crypto.js';\nexport function get_group_indexes(group) {\n    return group.commits.map(e => e.idx);\n}\nexport function select_random_peers(peers, thold) {\n    const rnd = () => Math.random() > 0.5 ? 1 : -1;\n    const idx = Math.min(peers.length, thold - 1);\n    return peers.sort(rnd).slice(0, idx);\n}\nexport function get_member_indexes(group, pubkeys) {\n    const indexes = group.commits\n        .filter(e => pubkeys.includes(convert_pubkey(e.pubkey, 'bip340')))\n        .map(e => e.idx);\n    Assert.ok(indexes.length === pubkeys.length, 'index count does not match pubkey count');\n    return indexes;\n}\nexport function recover_secret_key(group, shares) {\n    Assert.ok(shares.length >= group.threshold, 'not enough shares provided');\n    const pubkeys = group.commits.map(e => e.pubkey);\n    for (const share of shares) {\n        const pk = get_pubkey(share.seckey, 'ecdsa');\n        Assert.ok(pubkeys.includes(pk), 'share not found in group: ' + share.idx);\n    }\n    return derive_shares_secret(shares);\n}\n", "import { finalize_message } from '@cmdcode/nostr-p2p/lib';\nimport { combine_ecdh_pkgs } from '../lib/ecdh.js';\nimport { parse_ecdh_message } from '../lib/parse.js';\nimport { Assert, copy_obj, parse_error } from '../util/index.js';\nimport { get_member_indexes, select_random_peers } from '../lib/util.js';\nexport async function ecdh_handler_api(node, msg) {\n    const middleware = node.config.middleware.ecdh;\n    try {\n        node.emit('/ecdh/handler/req', copy_obj(msg));\n        if (typeof middleware === 'function') {\n            msg = middleware(node, msg);\n        }\n        const { members, ecdh_pk } = msg.data;\n        const pkg = node.signer.gen_ecdh_share(members, ecdh_pk);\n        const envelope = finalize_message({\n            data: JSON.stringify(pkg),\n            id: msg.id,\n            tag: '/ecdh/res'\n        });\n        const res = await node.client.publish(envelope, msg.env.pubkey);\n        if (!res.ok)\n            throw new Error('failed to publish response');\n        node.emit('/ecdh/handler/res', copy_obj(res.data));\n    }\n    catch (err) {\n        if (node.debug)\n            console.log(err);\n        node.emit('/ecdh/handler/rej', [parse_error(err), copy_obj(msg)]);\n    }\n}\nexport function ecdh_request_api(node) {\n    return async (ecdh_pk, peers) => {\n        const thold = node.group.threshold;\n        const selected = select_random_peers(peers ??= node.peers.send, thold);\n        const encrypted = node.cache.ecdh.get(ecdh_pk);\n        if (encrypted !== undefined) {\n            return { ok: true, data: node.signer.unwrap(encrypted, ecdh_pk) };\n        }\n        const members = get_member_indexes(node.group, [node.pubkey, ...selected]);\n        const self_pkg = node.signer.gen_ecdh_share(members, ecdh_pk);\n        let msgs = null;\n        try {\n            msgs = await create_ecdh_request(node, selected, self_pkg);\n            node.emit('/ecdh/sender/res', copy_obj(msgs));\n        }\n        catch (err) {\n            if (node.debug)\n                console.log(err);\n            const reason = parse_error(err);\n            node.emit('/ecdh/sender/rej', [reason, copy_obj(self_pkg)]);\n            return { ok: false, err: reason };\n        }\n        try {\n            Assert.ok(msgs !== null, 'no responses from peers');\n            const pkgs = [self_pkg, ...msgs.map(e => e.data)];\n            const secret = finalize_ecdh_response(pkgs);\n            const content = node.signer.wrap(secret, ecdh_pk);\n            node.cache.ecdh.set(ecdh_pk, content);\n            node.emit('/ecdh/sender/ret', [ecdh_pk, secret]);\n            return { ok: true, data: secret };\n        }\n        catch (err) {\n            if (node.debug)\n                console.log(err);\n            const reason = parse_error(err);\n            node.emit('/ecdh/sender/err', [reason, copy_obj(msgs ?? [])]);\n            return { ok: false, err: reason };\n        }\n    };\n}\nasync function create_ecdh_request(node, peers, pkg) {\n    const msg = { data: JSON.stringify(pkg), tag: '/ecdh/req' };\n    const res = await node.client.multicast(msg, peers);\n    if (!res.sub.ok)\n        throw new Error(res.sub.reason);\n    return res.sub.inbox.map(e => {\n        const parsed = parse_ecdh_message(e);\n        Assert.ok(parsed !== null, 'invalid ecdh response from pubkey: ' + e.env.pubkey);\n        return parsed;\n    });\n}\nfunction finalize_ecdh_response(pkgs) {\n    return combine_ecdh_pkgs(pkgs);\n}\n", "import { finalize_message } from '@cmdcode/nostr-p2p/lib';\nimport { Assert, copy_obj, parse_error } from '../util/index.js';\nexport async function ping_handler_api(node, msg) {\n    try {\n        copy_obj;\n        node.emit('/ping/handler/req', msg);\n        const envelope = finalize_message({\n            data: 'pong',\n            id: msg.id,\n            tag: '/ping/res'\n        });\n        const res = await node.client.publish(envelope, msg.env.pubkey);\n        if (!res.ok)\n            throw new Error('failed to publish response');\n        node.emit('/ping/handler/res', copy_obj(res.data));\n    }\n    catch (err) {\n        if (node.debug)\n            console.log(err);\n        node.emit('/ping/handler/rej', [parse_error(err), copy_obj(msg)]);\n    }\n}\nexport function ping_request_api(node) {\n    return async () => {\n        let msgs = null;\n        try {\n            msgs = await create_ping_request(node);\n            node.emit('/ping/sender/res', copy_obj(msgs));\n        }\n        catch (err) {\n            if (node.debug)\n                console.log(err);\n            const reason = parse_error(err);\n            node.emit('/ping/sender/rej', [reason, copy_obj(msgs ?? [])]);\n            return { ok: false, err: reason };\n        }\n        try {\n            Assert.ok(msgs !== null, 'no responses from peers');\n            const pubkeys = msgs.map(e => e.env.pubkey);\n            node.emit('/ping/sender/ret', pubkeys);\n            return { ok: true, data: pubkeys };\n        }\n        catch (err) {\n            if (node.debug)\n                console.log(err);\n            const reason = parse_error(err);\n            node.emit('/ping/sender/err', [reason, copy_obj(msgs ?? [])]);\n            return { ok: false, err: reason };\n        }\n    };\n}\nasync function create_ping_request(node) {\n    const msg = { data: 'ping', tag: '/ping/req' };\n    const res = await node.client.multicast(msg, node.peers.all);\n    if (!res.sub.ok)\n        throw new Error(res.sub.reason);\n    res.sub.inbox.map(e => {\n        Assert.ok(e.data === 'pong', 'invalid ping response from pubkey: ' + e.env.pubkey);\n    });\n    return res.sub.inbox;\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { tweak_pubkey, tweak_seckey } from '../util/crypto.js';\nexport function format_sigvector(message) {\n    if (Array.isArray(message)) {\n        return message;\n    }\n    else if (typeof message === 'string') {\n        return [message];\n    }\n    else {\n        throw new Error('invalid message payload');\n    }\n}\nexport function create_sighash_commit(session_id, commit, sigvec) {\n    const bind_hash = get_sighash_binder(session_id, commit.idx, sigvec);\n    const hidden_pn = tweak_pubkey(commit.hidden_pn, bind_hash);\n    const binder_pn = tweak_pubkey(commit.binder_pn, bind_hash);\n    const [sighash] = sigvec;\n    return { ...commit, binder_pn, hidden_pn, bind_hash, sighash, sid: session_id };\n}\nexport function create_sighash_share(session_id, share, sigvec) {\n    const bind_hash = get_sighash_binder(session_id, share.idx, sigvec);\n    const hidden_sn = tweak_seckey(share.hidden_sn, bind_hash);\n    const binder_sn = tweak_seckey(share.binder_sn, bind_hash);\n    const [sighash] = sigvec;\n    return { ...share, binder_sn, hidden_sn, bind_hash, sighash, sid: session_id };\n}\nexport function get_sighash_binder(session_id, member_idx, sighash) {\n    const sid = Buff.bytes(session_id);\n    const idx = Buff.num(member_idx, 4);\n    const msg = Buff.join(sighash);\n    const pre = Buff.join([sid, idx, msg]);\n    return pre.digest.hex;\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { get_commits_prefix } from '@cmdcode/frost/lib';\nimport { get_pubkey } from '../util/crypto.js';\nimport { Assert } from '../util/assert.js';\nexport function get_group_id(group) {\n    const prefix = get_commits_prefix(group.commits);\n    const preimg = Buff.join([prefix, group.group_pk]);\n    return preimg.digest.hex;\n}\nexport function get_commit_by_pubkey(commits, pubkey) {\n    const commit = commits.find(e => e.pubkey === pubkey);\n    Assert.exists(commit, 'commit package not found for pubkey: ' + pubkey);\n    return commit;\n}\nexport function get_commit_by_idx(commits, idx) {\n    const commit = commits.find(e => e.idx === idx);\n    Assert.exists(commit, 'commit package not found for idx: ' + idx);\n    return commit;\n}\nexport function is_group_member(group, share) {\n    const idx = share.idx;\n    const pubkey = get_pubkey(share.seckey, 'ecdsa');\n    return group.commits.some(e => e.idx === idx && e.pubkey === pubkey);\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { get_group_signing_ctx } from '@cmdcode/frost/lib';\nimport { now } from '../util/index.js';\nimport { get_commit_by_idx, get_group_id } from './group.js';\nimport { create_sighash_commit, create_sighash_share } from './sighash.js';\nimport Schema from '../schema/index.js';\nexport const GET_DEFAULT_SESSION_CONFIG = () => {\n    return {\n        content: null,\n        stamp: now(),\n        type: 'message',\n    };\n};\nexport function create_session_template(members, messages, options = {}) {\n    const hashes = typeof messages === 'string'\n        ? [[messages]]\n        : messages;\n    const schema = Schema.sign.template;\n    const parsed = schema.safeParse({\n        ...GET_DEFAULT_SESSION_CONFIG(),\n        ...options,\n        hashes: hashes,\n        members: members.sort()\n    });\n    return parsed.success ? parsed.data : null;\n}\nexport function create_session_pkg(group, template) {\n    const gid = get_group_id(group);\n    const sid = get_session_id(gid, template);\n    return { ...template, gid, sid };\n}\nexport function verify_session_pkg(group, session) {\n    const gid = get_group_id(group);\n    const sid = get_session_id(gid, session);\n    return session.gid === gid && session.sid === sid;\n}\nexport function get_session_id(group_id, template) {\n    const mbrs = template.members.map(e => Buff.bytes(e));\n    const msgs = template.hashes.map(e => Buff.join(e));\n    const cont = Buff.bytes(template.content ?? '00');\n    const type = Buff.str(template.type);\n    const ts = Buff.num(template.stamp, 4);\n    const pimg = Buff.join([group_id, ...mbrs, ...msgs, cont, type, ts]);\n    return pimg.digest.hex;\n}\nexport function create_member_commits(group, session, idx) {\n    const commit = get_commit_by_idx(group.commits, idx);\n    return session.hashes.map(vec => create_sighash_commit(session.sid, commit, vec));\n}\nexport function create_member_shares(session, share) {\n    return session.hashes.map(vec => create_sighash_share(session.sid, share, vec));\n}\nexport function create_session_commits(group, session) {\n    return session.members\n        .map(idx => create_member_commits(group, session, idx))\n        .flat();\n}\nexport function get_session_ctx(group, session) {\n    const pubkeys = group.commits.map(e => e.pubkey);\n    const session_commits = create_session_commits(group, session);\n    const sigmap = new Map();\n    for (const vec of session.hashes) {\n        const [sighash, ...tweaks] = vec;\n        const sighash_commits = session_commits.filter(e => e.sighash === sighash);\n        const context = get_group_signing_ctx(group.group_pk, sighash_commits, sighash, tweaks);\n        sigmap.set(sighash, context);\n    }\n    return { pubkeys, session, sigmap };\n}\n", "import { get_pubkey } from '../util/crypto.js';\nimport { create_member_shares } from './session.js';\nimport { Assert } from '../util/assert.js';\nimport { combine_partial_sigs, sign_msg, verify_partial_sig } from '@cmdcode/frost/lib';\nexport function create_psig_pkg(ctx, share) {\n    const sid = ctx.session.sid;\n    const pubkey = get_pubkey(share.seckey, 'ecdsa');\n    const sighashes = ctx.session.hashes.map(e => e[0]);\n    const sig_shares = create_member_shares(ctx.session, share);\n    const psigs = sighashes.map(sighash => {\n        const sig_share = sig_shares.find(e => e.sighash === sighash);\n        const sig_ctx = ctx.sigmap.get(sighash);\n        Assert.exists(sig_share, 'share not found for sighash: ' + sighash);\n        Assert.exists(sig_ctx, 'context not found for sighash: ' + sighash);\n        const psig = create_partial_sig(sig_ctx, sig_share);\n        return [sighash, psig];\n    });\n    return { idx: share.idx, psigs, pubkey, sid };\n}\nexport function verify_psig_pkg(ctx, pkg) {\n    const { idx, psigs, pubkey, sid } = pkg;\n    if (sid !== ctx.session.sid)\n        return 'session id mismatch';\n    if (!ctx.pubkeys.includes(pubkey))\n        return 'pubkey not found in group';\n    for (const [sighash, sigctx] of ctx.sigmap.entries()) {\n        const psig_entry = psigs.find(e => e[0] === sighash);\n        if (psig_entry === undefined)\n            return 'partial signature entry not found for sighash: ' + sighash;\n        const pnonce = sigctx.pnonces.find(e => e.idx === idx);\n        if (pnonce === undefined)\n            return 'commit package not found for psig idx: ' + idx;\n        if (!verify_partial_sig(sigctx, pnonce, pubkey, psig_entry[1]))\n            return 'partial signature invalid';\n    }\n    return null;\n}\nexport function create_psig_records(pkgs) {\n    return pkgs.map(({ idx, psigs, pubkey, sid }) => {\n        return psigs.map(([sighash, psig]) => ({ sighash, idx, pubkey, psig, sid }));\n    }).flat();\n}\nexport function combine_signature_pkgs(ctx, pkgs) {\n    const count = ctx.session.members.length;\n    const records = create_psig_records(pkgs);\n    const sigs = [];\n    for (const [sighash, sigctx] of ctx.sigmap.entries()) {\n        const psigs = records.filter(e => e.sighash === sighash);\n        Assert.ok(psigs.length === count, 'missing partial signatures for sighash: ' + sighash);\n        const pubkey = sigctx.group_pk;\n        const sig = combine_partial_sigs(sigctx, psigs);\n        sigs.push([sighash, pubkey, sig]);\n    }\n    return sigs;\n}\nexport function create_partial_sig(ctx, share) {\n    const { idx, binder_sn, hidden_sn, seckey } = share;\n    const secshare = { idx, seckey };\n    const secnonce = { idx, binder_sn, hidden_sn };\n    const psig_pkg = sign_msg(ctx, secshare, secnonce);\n    return psig_pkg.psig;\n}\n", "import { finalize_message } from '@cmdcode/nostr-p2p/lib';\nimport { parse_psig_message } from '../lib/parse.js';\nimport { format_sigvector } from '../lib/sighash.js';\nimport { get_member_indexes, select_random_peers } from '../lib/util.js';\nimport { Assert, copy_obj, parse_error } from '../util/index.js';\nimport { create_session_pkg, create_session_template, get_session_ctx } from '../lib/session.js';\nimport { combine_signature_pkgs, verify_psig_pkg } from '../lib/sign.js';\nexport async function sign_handler_api(node, msg) {\n    const middleware = node.config.middleware.sign;\n    try {\n        node.emit('/sign/handler/req', copy_obj(msg));\n        if (typeof middleware === 'function') {\n            msg = middleware(node, msg);\n        }\n        const pkg = node.signer.sign_session(msg.data);\n        const envelope = finalize_message({\n            data: JSON.stringify(pkg),\n            id: msg.id,\n            tag: '/sign/res'\n        });\n        const res = await node.client.publish(envelope, msg.env.pubkey);\n        if (!res.ok)\n            throw new Error('failed to publish response');\n        node.emit('/sign/handler/res', copy_obj(res.data));\n    }\n    catch (err) {\n        if (node.debug)\n            console.log(err);\n        node.emit('/sign/handler/rej', [parse_error(err), copy_obj(msg)]);\n    }\n}\nexport function sign_queue_api(node) {\n    return async (message) => {\n        const sigvec = format_sigvector(message);\n        return node.queue.push(sigvec);\n    };\n}\nexport function sign_request_api(node) {\n    return async (message, options = {}) => {\n        const sigvecs = typeof message === 'string' ? [[message]] : message;\n        const peers = options.peers ??= node.peers.send;\n        const thold = node.group.threshold;\n        const selected = select_random_peers(peers, thold);\n        const members = get_member_indexes(node.group, [node.pubkey, ...selected]);\n        const template = create_session_template(members, sigvecs, options);\n        Assert.ok(template !== null, 'invalid session template');\n        const session = create_session_pkg(node.group, template);\n        let msgs = null;\n        try {\n            msgs = await create_sign_request(node, selected, session);\n            node.emit('/sign/sender/res', copy_obj(msgs));\n        }\n        catch (err) {\n            if (node.debug)\n                console.log(err);\n            const reason = parse_error(err);\n            node.emit('/sign/sender/rej', [reason, session]);\n            return { ok: false, err: reason };\n        }\n        try {\n            Assert.ok(msgs !== null, 'no responses from peers');\n            const sigs = finalize_sign_response(node, msgs, session);\n            node.emit('/sign/sender/ret', [session.sid, sigs]);\n            return { ok: true, data: sigs };\n        }\n        catch (err) {\n            if (node.debug)\n                console.log(err);\n            const reason = parse_error(err);\n            node.emit('/sign/sender/err', [reason, msgs ?? []]);\n            return { ok: false, err: reason };\n        }\n    };\n}\nasync function create_sign_request(node, peers, session) {\n    const res = await node.client.multicast({\n        data: JSON.stringify(session),\n        tag: '/sign/req'\n    }, peers);\n    if (!res.sub.ok)\n        throw new Error(res.sub.reason);\n    return res.sub.inbox;\n}\nfunction finalize_sign_response(node, responses, session) {\n    const ctx = get_session_ctx(node.group, session);\n    const pkgs = [node.signer.sign_session(session)];\n    responses.forEach(e => {\n        const parsed = parse_psig_message(e);\n        const error = verify_psig_pkg(ctx, parsed.data);\n        Assert.ok(error === null, error + ' : ' + e.env.pubkey);\n        pkgs.push(parsed.data);\n    });\n    return combine_signature_pkgs(ctx, pkgs);\n}\n", "export class EventEmitter {\n    constructor() {\n        this.eventMap = new Map();\n    }\n    getEventHandlers(eventName) {\n        const handlers = this.eventMap.get(eventName);\n        if (!handlers) {\n            const newHandlers = new Set();\n            this.eventMap.set(eventName, newHandlers);\n            return newHandlers;\n        }\n        return handlers;\n    }\n    has(eventName) {\n        const handlers = this.eventMap.get(eventName);\n        return handlers !== undefined && handlers.size > 0;\n    }\n    on(eventName, handler) {\n        this.getEventHandlers(eventName).add(handler);\n    }\n    once(eventName, handler) {\n        const oneTimeHandler = (payload) => {\n            this.off(eventName, oneTimeHandler);\n            void handler(payload);\n        };\n        this.on(eventName, oneTimeHandler);\n    }\n    within(eventName, handler, timeoutMs) {\n        const timeoutHandler = (payload) => {\n            void handler(payload);\n        };\n        setTimeout(() => {\n            this.off(eventName, timeoutHandler);\n        }, timeoutMs);\n        this.on(eventName, timeoutHandler);\n    }\n    emit(eventName, payload) {\n        const promises = [];\n        this.getEventHandlers(eventName).forEach(handler => {\n            const result = handler(payload);\n            if (result instanceof Promise) {\n                promises.push(result);\n            }\n        });\n        this.getEventHandlers('*').forEach(handler => {\n            const result = handler(eventName, payload);\n            if (result instanceof Promise) {\n                promises.push(result);\n            }\n        });\n        void Promise.allSettled(promises);\n    }\n    off(eventName, handler) {\n        this.getEventHandlers(eventName).delete(handler);\n    }\n    clear(eventName) {\n        this.eventMap.delete(eventName);\n    }\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { schnorr } from '@noble/curves/secp256k1';\nimport { get_pubkey } from '../util/crypto.js';\nimport { create_ecdh_pkg } from '../lib/ecdh.js';\nimport { get_session_ctx } from '../lib/session.js';\nimport { create_psig_pkg } from '../lib/sign.js';\nimport { decrypt_content, encrypt_content, get_shared_secret } from '@cmdcode/nostr-p2p/lib';\nimport { parse_share_pkg, parse_group_pkg } from '../lib/parse.js';\nconst SIGNER_CONFIG = () => {\n    return {};\n};\nexport class BifrostSigner {\n    constructor(group, share, options) {\n        this._config = { ...SIGNER_CONFIG(), ...options };\n        this._group = parse_group_pkg(group);\n        this._share = parse_share_pkg(share);\n        this._pubkey = get_pubkey(this._share.seckey, 'bip340');\n    }\n    get config() {\n        return this._config;\n    }\n    get group() {\n        return this._group;\n    }\n    get pubkey() {\n        return this._pubkey;\n    }\n    gen_ecdh_share(members, ecdh_pk) {\n        return create_ecdh_pkg(members, ecdh_pk, this._share);\n    }\n    sign_message(message, auxrand) {\n        const sig = schnorr.sign(message, this._share.seckey, auxrand);\n        return new Buff(sig).hex;\n    }\n    sign_session(session) {\n        const ctx = get_session_ctx(this._group, session);\n        return create_psig_pkg(ctx, this._share);\n    }\n    unwrap(content, pubkey) {\n        const seckey = this._share.seckey;\n        const secret = get_shared_secret(seckey, pubkey);\n        return decrypt_content(secret, content);\n    }\n    wrap(content, pubkey) {\n        const seckey = this._share.seckey;\n        const secret = get_shared_secret(seckey, pubkey);\n        return encrypt_content(secret, content);\n    }\n}\n", "export class SignerQueue {\n    constructor(node) {\n        this._node = node;\n        this._ival = node.config.sign_interval;\n        this._queue = [];\n        this._timer = null;\n    }\n    get node() {\n        return this._node;\n    }\n    get timer() {\n        return this._timer;\n    }\n    async push(sigvec) {\n        return new Promise((resolve, reject) => {\n            this._queue.push({ sigvec, resolve, reject });\n            this.schedule();\n        });\n    }\n    async process() {\n        const batch = [...this._queue];\n        this._queue = [];\n        this._timer = null;\n        if (batch.length === 0)\n            return;\n        this.node.emit('info', 'batch signing event ids: ' + String(batch.map(req => req.sigvec[0])));\n        try {\n            const vec = batch.map(req => req.sigvec);\n            const res = await this.node.req.sign(vec);\n            if (!res.ok) {\n                batch.forEach(req => req.reject(res.err));\n                return;\n            }\n            batch.forEach(req => {\n                const sig_entry = res.data.find(e => e[0] === req.sigvec[0]);\n                if (sig_entry !== undefined) {\n                    req.resolve(sig_entry);\n                }\n                else {\n                    req.reject('signature missing from response');\n                }\n            });\n        }\n        catch (err) {\n            batch.forEach(req => req.reject(err.message));\n        }\n    }\n    schedule() {\n        if (this.timer === null) {\n            this._timer = setTimeout(() => this.process(), this._ival);\n        }\n    }\n}\n", "export default class EventEmitter {\n    constructor() {\n        this.eventMap = new Map();\n    }\n    getEventHandlers(eventName) {\n        const handlers = this.eventMap.get(eventName);\n        if (!handlers) {\n            const newHandlers = new Set();\n            this.eventMap.set(eventName, newHandlers);\n            return newHandlers;\n        }\n        return handlers;\n    }\n    has(eventName) {\n        const handlers = this.eventMap.get(eventName);\n        return handlers !== undefined && handlers.size > 0;\n    }\n    on(eventName, handler) {\n        this.getEventHandlers(eventName).add(handler);\n    }\n    once(eventName, handler) {\n        const oneTimeHandler = (payload) => {\n            this.off(eventName, oneTimeHandler);\n            void handler(payload);\n        };\n        this.on(eventName, oneTimeHandler);\n    }\n    within(eventName, handler, timeoutMs) {\n        const timeoutHandler = (payload) => {\n            void handler(payload);\n        };\n        setTimeout(() => {\n            this.off(eventName, timeoutHandler);\n        }, timeoutMs);\n        this.on(eventName, timeoutHandler);\n    }\n    emit(eventName, payload) {\n        const promises = [];\n        this.getEventHandlers(eventName).forEach(handler => {\n            const result = handler(payload);\n            if (result instanceof Promise) {\n                promises.push(result);\n            }\n        });\n        this.getEventHandlers('*').forEach(handler => {\n            const result = handler(eventName, payload);\n            if (result instanceof Promise) {\n                promises.push(result);\n            }\n        });\n        void Promise.allSettled(promises);\n    }\n    off(eventName, handler) {\n        this.getEventHandlers(eventName).delete(handler);\n    }\n    clear(eventName) {\n        this.eventMap.delete(eventName);\n    }\n}\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || val instanceof Uint8Array,\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) \u2261 1    if a is a square (mod p)\n  // (a | p) \u2261 -1   if a is not a square (mod p)\n  // (a | p) \u2261 0    if a \u2261 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) \u2261 -1 and set c \u2261 zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be \u2261 -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P \u2261 3 (mod 4)\n  // \u221An = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q \u2261 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P \u2261 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / \uD835\uDC4A) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(\uD835\uDC4A\u22121) * (Math.ceil(\uD835\uDC5B / \uD835\uDC4A) + 1), where:\n     * - \uD835\uDC4A is the window size\n     * - \uD835\uDC5B is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y\u00B2 = x\u00B3 + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y\u00B2 = x\u00B3 + ax + b: Short weierstrass curve formula\n   * @returns y\u00B2\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) \u220B (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y\u00B2\n      const right = weierstrassEquation(x); // x\u00B3 + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) \u220B (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y\u00B2 = x\u00B3 + ax + b\n        let y = Fp.sqrt(y2); // y = y\u00B2 ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b \u2208 [1,q\u22121] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G \u00D7 k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1\u22C5G - U2\u22C5P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1\u22C5G + u2\u22C5P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * \u221An = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'\u22C5G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x \u2265 p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x\u00B3 + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'\u2265n. Ret bytes(d'\u22C5G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'\u22C5G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r \u2265 p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s \u2265 n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s\u22C5G - e\u22C5P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) \u2260 r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n", "import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n", "/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\nexport type Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('hash must be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\nimport { bytes as abytes, isBytes } from './_assert.js';\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u16 = (arr: TypedArray) =>\n  new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`string expected, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  else if (isBytes(data)) data = data.slice();\n  else throw new Error(`Uint8Array expected, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts: T2\n): T1 & T2 {\n  if (opts == null || typeof opts !== 'object') throw new Error('options must be defined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n}\n\n// This will allow to re-use with composable things like packed & base encoders\n// Also, we probably can make tags composable\nexport type Cipher = {\n  encrypt(plaintext: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array): Uint8Array;\n};\n\nexport type AsyncCipher = {\n  encrypt(plaintext: Uint8Array): Promise<Uint8Array>;\n  decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;\n};\n\nexport type CipherWithOutput = Cipher & {\n  encrypt(plaintext: Uint8Array, output?: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array, output?: Uint8Array): Uint8Array;\n};\n\n// Params is outside return type, so it is accessible before calling constructor\n// If function support multiple nonceLength's, we return best one\nexport type CipherParams = { blockSize: number; nonceLength?: number; tagLength?: number };\nexport type CipherCons<T extends any[]> = (key: Uint8Array, ...args: T) => Cipher;\n/**\n * @__NO_SIDE_EFFECTS__\n */\nexport const wrapCipher = <C extends CipherCons<any>, P extends CipherParams>(\n  params: P,\n  c: C\n): C & P => {\n  Object.assign(c, params);\n  return c as C & P;\n};\n\nexport type XorStream = (\n  key: Uint8Array,\n  nonce: Uint8Array,\n  data: Uint8Array,\n  output?: Uint8Array,\n  counter?: number\n) => Uint8Array;\n\n// Polyfill for Safari 14\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\nexport function u64Lengths(ciphertext: Uint8Array, AAD?: Uint8Array) {\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n  setBigUint64(view, 8, BigInt(ciphertext.length), true);\n  return num;\n}\n", "import { createView, toBytes, Input, Hash, u32 } from './utils.js';\nimport { bytes as abytes, exists as aexists, output as aoutput } from './_assert.js';\n\n// GHash from AES-GCM and its little-endian \"mirror image\" Polyval from AES-SIV.\n// Implemented in terms of GHash with conversion function for keys\n// GCM GHASH from NIST SP800-38d, SIV from RFC 8452.\n// https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf\n\n// GHASH   modulo: x^128 + x^7   + x^2   + x     + 1\n// POLYVAL modulo: x^128 + x^127 + x^126 + x^121 + 1\n\nconst BLOCK_SIZE = 16;\n// TODO: rewrite\n// temporary padding buffer\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\nconst ZEROS32 = u32(ZEROS16);\nconst POLY = 0xe1; // v = 2*v % POLY\n\n// v = 2*v % POLY\n// NOTE: because x + x = 0 (add/sub is same), mul2(x) != x+x\n// We can multiply any number using montgomery ladder and this function (works as double, add is simple xor)\nconst mul2 = (s0: number, s1: number, s2: number, s3: number) => {\n  const hiBit = s3 & 1;\n  return {\n    s3: (s2 << 31) | (s3 >>> 1),\n    s2: (s1 << 31) | (s2 >>> 1),\n    s1: (s0 << 31) | (s1 >>> 1),\n    s0: (s0 >>> 1) ^ ((POLY << 24) & -(hiBit & 1)), // reduce % poly\n  };\n};\n\nconst swapLE = (n: number) =>\n  (((n >>> 0) & 0xff) << 24) |\n  (((n >>> 8) & 0xff) << 16) |\n  (((n >>> 16) & 0xff) << 8) |\n  ((n >>> 24) & 0xff) |\n  0;\n\n/**\n * `mulX_POLYVAL(ByteReverse(H))` from spec\n * @param k mutated in place\n */\nexport function _toGHASHKey(k: Uint8Array): Uint8Array {\n  k.reverse();\n  const hiBit = k[15] & 1;\n  // k >>= 1\n  let carry = 0;\n  for (let i = 0; i < k.length; i++) {\n    const t = k[i];\n    k[i] = (t >>> 1) | carry;\n    carry = (t & 1) << 7;\n  }\n  k[0] ^= -hiBit & 0xe1; // if (hiBit) n ^= 0xe1000000000000000000000000000000;\n  return k;\n}\n\ntype Value = { s0: number; s1: number; s2: number; s3: number };\n\nconst estimateWindow = (bytes: number) => {\n  if (bytes > 64 * 1024) return 8;\n  if (bytes > 1024) return 4;\n  return 2;\n};\n\nclass GHASH implements Hash<GHASH> {\n  readonly blockLen = BLOCK_SIZE;\n  readonly outputLen = BLOCK_SIZE;\n  protected s0 = 0;\n  protected s1 = 0;\n  protected s2 = 0;\n  protected s3 = 0;\n  protected finished = false;\n  protected t: Value[];\n  private W: number;\n  private windowSize: number;\n  // We select bits per window adaptively based on expectedLength\n  constructor(key: Input, expectedLength?: number) {\n    key = toBytes(key);\n    abytes(key, 16);\n    const kView = createView(key);\n    let k0 = kView.getUint32(0, false);\n    let k1 = kView.getUint32(4, false);\n    let k2 = kView.getUint32(8, false);\n    let k3 = kView.getUint32(12, false);\n    // generate table of doubled keys (half of montgomery ladder)\n    const doubles: Value[] = [];\n    for (let i = 0; i < 128; i++) {\n      doubles.push({ s0: swapLE(k0), s1: swapLE(k1), s2: swapLE(k2), s3: swapLE(k3) });\n      ({ s0: k0, s1: k1, s2: k2, s3: k3 } = mul2(k0, k1, k2, k3));\n    }\n    const W = estimateWindow(expectedLength || 1024);\n    if (![1, 2, 4, 8].includes(W))\n      throw new Error(`ghash: wrong window size=${W}, should be 2, 4 or 8`);\n    this.W = W;\n    const bits = 128; // always 128 bits;\n    const windows = bits / W;\n    const windowSize = (this.windowSize = 2 ** W);\n    const items: Value[] = [];\n    // Create precompute table for window of W bits\n    for (let w = 0; w < windows; w++) {\n      // truth table: 00, 01, 10, 11\n      for (let byte = 0; byte < windowSize; byte++) {\n        // prettier-ignore\n        let s0 = 0, s1 = 0, s2 = 0, s3 = 0;\n        for (let j = 0; j < W; j++) {\n          const bit = (byte >>> (W - j - 1)) & 1;\n          if (!bit) continue;\n          const { s0: d0, s1: d1, s2: d2, s3: d3 } = doubles[W * w + j];\n          (s0 ^= d0), (s1 ^= d1), (s2 ^= d2), (s3 ^= d3);\n        }\n        items.push({ s0, s1, s2, s3 });\n      }\n    }\n    this.t = items;\n  }\n  protected _updateBlock(s0: number, s1: number, s2: number, s3: number) {\n    (s0 ^= this.s0), (s1 ^= this.s1), (s2 ^= this.s2), (s3 ^= this.s3);\n    const { W, t, windowSize } = this;\n    // prettier-ignore\n    let o0 = 0, o1 = 0, o2 = 0, o3 = 0;\n    const mask = (1 << W) - 1; // 2**W will kill performance.\n    let w = 0;\n    for (const num of [s0, s1, s2, s3]) {\n      for (let bytePos = 0; bytePos < 4; bytePos++) {\n        const byte = (num >>> (8 * bytePos)) & 0xff;\n        for (let bitPos = 8 / W - 1; bitPos >= 0; bitPos--) {\n          const bit = (byte >>> (W * bitPos)) & mask;\n          const { s0: e0, s1: e1, s2: e2, s3: e3 } = t[w * windowSize + bit];\n          (o0 ^= e0), (o1 ^= e1), (o2 ^= e2), (o3 ^= e3);\n          w += 1;\n        }\n      }\n    }\n    this.s0 = o0;\n    this.s1 = o1;\n    this.s2 = o2;\n    this.s3 = o3;\n  }\n  update(data: Input): this {\n    data = toBytes(data);\n    aexists(this);\n    const b32 = u32(data);\n    const blocks = Math.floor(data.length / BLOCK_SIZE);\n    const left = data.length % BLOCK_SIZE;\n    for (let i = 0; i < blocks; i++) {\n      this._updateBlock(b32[i * 4 + 0], b32[i * 4 + 1], b32[i * 4 + 2], b32[i * 4 + 3]);\n    }\n    if (left) {\n      ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n      this._updateBlock(ZEROS32[0], ZEROS32[1], ZEROS32[2], ZEROS32[3]);\n      ZEROS32.fill(0); // clean tmp buffer\n    }\n    return this;\n  }\n  destroy() {\n    const { t } = this;\n    // clean precompute table\n    for (const elm of t) {\n      (elm.s0 = 0), (elm.s1 = 0), (elm.s2 = 0), (elm.s3 = 0);\n    }\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    const { s0, s1, s2, s3 } = this;\n    const o32 = u32(out);\n    o32[0] = s0;\n    o32[1] = s1;\n    o32[2] = s2;\n    o32[3] = s3;\n    return out;\n  }\n  digest(): Uint8Array {\n    const res = new Uint8Array(BLOCK_SIZE);\n    this.digestInto(res);\n    this.destroy();\n    return res;\n  }\n}\n\nclass Polyval extends GHASH {\n  constructor(key: Input, expectedLength?: number) {\n    key = toBytes(key);\n    const ghKey = _toGHASHKey(key.slice());\n    super(ghKey, expectedLength);\n    ghKey.fill(0);\n  }\n  update(data: Input): this {\n    data = toBytes(data);\n    aexists(this);\n    const b32 = u32(data);\n    const left = data.length % BLOCK_SIZE;\n    const blocks = Math.floor(data.length / BLOCK_SIZE);\n    for (let i = 0; i < blocks; i++) {\n      this._updateBlock(\n        swapLE(b32[i * 4 + 3]),\n        swapLE(b32[i * 4 + 2]),\n        swapLE(b32[i * 4 + 1]),\n        swapLE(b32[i * 4 + 0])\n      );\n    }\n    if (left) {\n      ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n      this._updateBlock(\n        swapLE(ZEROS32[3]),\n        swapLE(ZEROS32[2]),\n        swapLE(ZEROS32[1]),\n        swapLE(ZEROS32[0])\n      );\n      ZEROS32.fill(0); // clean tmp buffer\n    }\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // tmp ugly hack\n    const { s0, s1, s2, s3 } = this;\n    const o32 = u32(out);\n    o32[0] = s0;\n    o32[1] = s1;\n    o32[2] = s2;\n    o32[3] = s3;\n    return out.reverse();\n  }\n}\n\nexport type CHash = ReturnType<typeof wrapConstructorWithKey>;\nfunction wrapConstructorWithKey<H extends Hash<H>>(\n  hashCons: (key: Input, expectedLength?: number) => Hash<H>\n) {\n  const hashC = (msg: Input, key: Input): Uint8Array =>\n    hashCons(key, msg.length).update(toBytes(msg)).digest();\n  const tmp = hashCons(new Uint8Array(16), 0);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (key: Input, expectedLength?: number) => hashCons(key, expectedLength);\n  return hashC;\n}\n\nexport const ghash = wrapConstructorWithKey(\n  (key, expectedLength) => new GHASH(key, expectedLength)\n);\nexport const polyval = wrapConstructorWithKey(\n  (key, expectedLength) => new Polyval(key, expectedLength)\n);\n", "// prettier-ignore\nimport {\n  wrapCipher, Cipher, CipherWithOutput,\n  createView, setBigUint64, equalBytes, u32, u8,\n} from './utils.js';\nimport { ghash, polyval } from './_polyval.js';\nimport { bytes as abytes } from './_assert.js';\n\n/*\nAES (Advanced Encryption Standard) aka Rijndael block cipher.\n\nData is split into 128-bit blocks. Encrypted in 10/12/14 rounds (128/192/256 bits). In every round:\n1. **S-box**, table substitution\n2. **Shift rows**, cyclic shift left of all rows of data array\n3. **Mix columns**, multiplying every column by fixed polynomial\n4. **Add round key**, round_key xor i-th column of array\n\nResources:\n- FIPS-197 https://csrc.nist.gov/files/pubs/fips/197/final/docs/fips-197.pdf\n- Original proposal: https://csrc.nist.gov/csrc/media/projects/cryptographic-standards-and-guidelines/documents/aes-development/rijndael-ammended.pdf\n*/\n\nconst BLOCK_SIZE = 16;\nconst BLOCK_SIZE32 = 4;\nconst EMPTY_BLOCK = new Uint8Array(BLOCK_SIZE);\nconst POLY = 0x11b; // 1 + x + x**3 + x**4 + x**8\n\n// TODO: remove multiplication, binary ops only\nfunction mul2(n: number) {\n  return (n << 1) ^ (POLY & -(n >> 7));\n}\n\nfunction mul(a: number, b: number) {\n  let res = 0;\n  for (; b > 0; b >>= 1) {\n    // Montgomery ladder\n    res ^= a & -(b & 1); // if (b&1) res ^=a (but const-time).\n    a = mul2(a); // a = 2*a\n  }\n  return res;\n}\n\n// AES S-box is generated using finite field inversion,\n// an affine transform, and xor of a constant 0x63.\nconst sbox = /* @__PURE__ */ (() => {\n  let t = new Uint8Array(256);\n  for (let i = 0, x = 1; i < 256; i++, x ^= mul2(x)) t[i] = x;\n  const box = new Uint8Array(256);\n  box[0] = 0x63; // first elm\n  for (let i = 0; i < 255; i++) {\n    let x = t[255 - i];\n    x |= x << 8;\n    box[t[i]] = (x ^ (x >> 4) ^ (x >> 5) ^ (x >> 6) ^ (x >> 7) ^ 0x63) & 0xff;\n  }\n  return box;\n})();\n\n// Inverted S-box\nconst invSbox = /* @__PURE__ */ sbox.map((_, j) => sbox.indexOf(j));\n\n// Rotate u32 by 8\nconst rotr32_8 = (n: number) => (n << 24) | (n >>> 8);\nconst rotl32_8 = (n: number) => (n << 8) | (n >>> 24);\n\n// T-table is optimization suggested in 5.2 of original proposal (missed from FIPS-197). Changes:\n// - LE instead of BE\n// - bigger tables: T0 and T1 are merged into T01 table and T2 & T3 into T23;\n//   so index is u16, instead of u8. This speeds up things, unexpectedly\nfunction genTtable(sbox: Uint8Array, fn: (n: number) => number) {\n  if (sbox.length !== 256) throw new Error('Wrong sbox length');\n  const T0 = new Uint32Array(256).map((_, j) => fn(sbox[j]));\n  const T1 = T0.map(rotl32_8);\n  const T2 = T1.map(rotl32_8);\n  const T3 = T2.map(rotl32_8);\n  const T01 = new Uint32Array(256 * 256);\n  const T23 = new Uint32Array(256 * 256);\n  const sbox2 = new Uint16Array(256 * 256);\n  for (let i = 0; i < 256; i++) {\n    for (let j = 0; j < 256; j++) {\n      const idx = i * 256 + j;\n      T01[idx] = T0[i] ^ T1[j];\n      T23[idx] = T2[i] ^ T3[j];\n      sbox2[idx] = (sbox[i] << 8) | sbox[j];\n    }\n  }\n  return { sbox, sbox2, T0, T1, T2, T3, T01, T23 };\n}\n\nconst tableEncoding = /* @__PURE__ */ genTtable(\n  sbox,\n  (s: number) => (mul(s, 3) << 24) | (s << 16) | (s << 8) | mul(s, 2)\n);\nconst tableDecoding = /* @__PURE__ */ genTtable(\n  invSbox,\n  (s) => (mul(s, 11) << 24) | (mul(s, 13) << 16) | (mul(s, 9) << 8) | mul(s, 14)\n);\n\nconst xPowers = /* @__PURE__ */ (() => {\n  const p = new Uint8Array(16);\n  for (let i = 0, x = 1; i < 16; i++, x = mul2(x)) p[i] = x;\n  return p;\n})();\n\nexport function expandKeyLE(key: Uint8Array): Uint32Array {\n  abytes(key);\n  const len = key.length;\n  if (![16, 24, 32].includes(len))\n    throw new Error(`aes: wrong key size: should be 16, 24 or 32, got: ${len}`);\n  const { sbox2 } = tableEncoding;\n  const k32 = u32(key);\n  const Nk = k32.length;\n  const subByte = (n: number) => applySbox(sbox2, n, n, n, n);\n  const xk = new Uint32Array(len + 28); // expanded key\n  xk.set(k32);\n  // 4.3.1 Key expansion\n  for (let i = Nk; i < xk.length; i++) {\n    let t = xk[i - 1];\n    if (i % Nk === 0) t = subByte(rotr32_8(t)) ^ xPowers[i / Nk - 1];\n    else if (Nk > 6 && i % Nk === 4) t = subByte(t);\n    xk[i] = xk[i - Nk] ^ t;\n  }\n  return xk;\n}\n\nexport function expandKeyDecLE(key: Uint8Array): Uint32Array {\n  const encKey = expandKeyLE(key);\n  const xk = encKey.slice();\n  const Nk = encKey.length;\n  const { sbox2 } = tableEncoding;\n  const { T0, T1, T2, T3 } = tableDecoding;\n  // Inverse key by chunks of 4 (rounds)\n  for (let i = 0; i < Nk; i += 4) {\n    for (let j = 0; j < 4; j++) xk[i + j] = encKey[Nk - i - 4 + j];\n  }\n  encKey.fill(0);\n  // apply InvMixColumn except first & last round\n  for (let i = 4; i < Nk - 4; i++) {\n    const x = xk[i];\n    const w = applySbox(sbox2, x, x, x, x);\n    xk[i] = T0[w & 0xff] ^ T1[(w >>> 8) & 0xff] ^ T2[(w >>> 16) & 0xff] ^ T3[w >>> 24];\n  }\n  return xk;\n}\n\n// Apply tables\nfunction apply0123(\n  T01: Uint32Array,\n  T23: Uint32Array,\n  s0: number,\n  s1: number,\n  s2: number,\n  s3: number\n) {\n  return (\n    T01[((s0 << 8) & 0xff00) | ((s1 >>> 8) & 0xff)] ^\n    T23[((s2 >>> 8) & 0xff00) | ((s3 >>> 24) & 0xff)]\n  );\n}\n\nfunction applySbox(sbox2: Uint16Array, s0: number, s1: number, s2: number, s3: number) {\n  return (\n    sbox2[(s0 & 0xff) | (s1 & 0xff00)] |\n    (sbox2[((s2 >>> 16) & 0xff) | ((s3 >>> 16) & 0xff00)] << 16)\n  );\n}\n\nfunction encrypt(xk: Uint32Array, s0: number, s1: number, s2: number, s3: number) {\n  const { sbox2, T01, T23 } = tableEncoding;\n  let k = 0;\n  (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n  const rounds = xk.length / 4 - 2;\n  for (let i = 0; i < rounds; i++) {\n    const t0 = xk[k++] ^ apply0123(T01, T23, s0, s1, s2, s3);\n    const t1 = xk[k++] ^ apply0123(T01, T23, s1, s2, s3, s0);\n    const t2 = xk[k++] ^ apply0123(T01, T23, s2, s3, s0, s1);\n    const t3 = xk[k++] ^ apply0123(T01, T23, s3, s0, s1, s2);\n    (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n  }\n  // last round (without mixcolumns, so using SBOX2 table)\n  const t0 = xk[k++] ^ applySbox(sbox2, s0, s1, s2, s3);\n  const t1 = xk[k++] ^ applySbox(sbox2, s1, s2, s3, s0);\n  const t2 = xk[k++] ^ applySbox(sbox2, s2, s3, s0, s1);\n  const t3 = xk[k++] ^ applySbox(sbox2, s3, s0, s1, s2);\n  return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\n\nfunction decrypt(xk: Uint32Array, s0: number, s1: number, s2: number, s3: number) {\n  const { sbox2, T01, T23 } = tableDecoding;\n  let k = 0;\n  (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n  const rounds = xk.length / 4 - 2;\n  for (let i = 0; i < rounds; i++) {\n    const t0 = xk[k++] ^ apply0123(T01, T23, s0, s3, s2, s1);\n    const t1 = xk[k++] ^ apply0123(T01, T23, s1, s0, s3, s2);\n    const t2 = xk[k++] ^ apply0123(T01, T23, s2, s1, s0, s3);\n    const t3 = xk[k++] ^ apply0123(T01, T23, s3, s2, s1, s0);\n    (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n  }\n  // Last round\n  const t0 = xk[k++] ^ applySbox(sbox2, s0, s3, s2, s1);\n  const t1 = xk[k++] ^ applySbox(sbox2, s1, s0, s3, s2);\n  const t2 = xk[k++] ^ applySbox(sbox2, s2, s1, s0, s3);\n  const t3 = xk[k++] ^ applySbox(sbox2, s3, s2, s1, s0);\n  return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\n\nfunction getDst(len: number, dst?: Uint8Array) {\n  if (!dst) return new Uint8Array(len);\n  abytes(dst);\n  if (dst.length < len)\n    throw new Error(`aes: wrong destination length, expected at least ${len}, got: ${dst.length}`);\n  return dst;\n}\n\n// TODO: investigate merging with ctr32\nfunction ctrCounter(xk: Uint32Array, nonce: Uint8Array, src: Uint8Array, dst?: Uint8Array) {\n  abytes(nonce, BLOCK_SIZE);\n  abytes(src);\n  const srcLen = src.length;\n  dst = getDst(srcLen, dst);\n  const ctr = nonce;\n  const c32 = u32(ctr);\n  // Fill block (empty, ctr=0)\n  let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n  const src32 = u32(src);\n  const dst32 = u32(dst);\n  // process blocks\n  for (let i = 0; i + 4 <= src32.length; i += 4) {\n    dst32[i + 0] = src32[i + 0] ^ s0;\n    dst32[i + 1] = src32[i + 1] ^ s1;\n    dst32[i + 2] = src32[i + 2] ^ s2;\n    dst32[i + 3] = src32[i + 3] ^ s3;\n    // Full 128 bit counter with wrap around\n    let carry = 1;\n    for (let i = ctr.length - 1; i >= 0; i--) {\n      carry = (carry + (ctr[i] & 0xff)) | 0;\n      ctr[i] = carry & 0xff;\n      carry >>>= 8;\n    }\n    ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n  }\n  // leftovers (less than block)\n  // It's possible to handle > u32 fast, but is it worth it?\n  const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n  if (start < srcLen) {\n    const b32 = new Uint32Array([s0, s1, s2, s3]);\n    const buf = u8(b32);\n    for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n  }\n  return dst;\n}\n\n// AES CTR with overflowing 32 bit counter\n// It's possible to do 32le significantly simpler (and probably faster) by using u32.\n// But, we need both, and perf bottleneck is in ghash anyway.\nfunction ctr32(\n  xk: Uint32Array,\n  isLE: boolean,\n  nonce: Uint8Array,\n  src: Uint8Array,\n  dst?: Uint8Array\n) {\n  abytes(nonce, BLOCK_SIZE);\n  abytes(src);\n  dst = getDst(src.length, dst);\n  const ctr = nonce; // write new value to nonce, so it can be re-used\n  const c32 = u32(ctr);\n  const view = createView(ctr);\n  const src32 = u32(src);\n  const dst32 = u32(dst);\n  const ctrPos = isLE ? 0 : 12;\n  const srcLen = src.length;\n  // Fill block (empty, ctr=0)\n  let ctrNum = view.getUint32(ctrPos, isLE); // read current counter value\n  let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n  // process blocks\n  for (let i = 0; i + 4 <= src32.length; i += 4) {\n    dst32[i + 0] = src32[i + 0] ^ s0;\n    dst32[i + 1] = src32[i + 1] ^ s1;\n    dst32[i + 2] = src32[i + 2] ^ s2;\n    dst32[i + 3] = src32[i + 3] ^ s3;\n    ctrNum = (ctrNum + 1) >>> 0; // u32 wrap\n    view.setUint32(ctrPos, ctrNum, isLE);\n    ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n  }\n  // leftovers (less than a block)\n  const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n  if (start < srcLen) {\n    const b32 = new Uint32Array([s0, s1, s2, s3]);\n    const buf = u8(b32);\n    for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n  }\n  return dst;\n}\n\n/**\n * CTR: counter mode. Creates stream cipher.\n * Requires good IV. Parallelizable. OK, but no MAC.\n */\nexport const ctr = wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function ctr(key: Uint8Array, nonce: Uint8Array): CipherWithOutput {\n    abytes(key);\n    abytes(nonce, BLOCK_SIZE);\n    function processCtr(buf: Uint8Array, dst?: Uint8Array) {\n      const xk = expandKeyLE(key);\n      const n = nonce.slice();\n      const out = ctrCounter(xk, n, buf, dst);\n      xk.fill(0);\n      n.fill(0);\n      return out;\n    }\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => processCtr(plaintext, dst),\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => processCtr(ciphertext, dst),\n    };\n  }\n);\n\nfunction validateBlockDecrypt(data: Uint8Array) {\n  abytes(data);\n  if (data.length % BLOCK_SIZE !== 0) {\n    throw new Error(\n      `aes/(cbc-ecb).decrypt ciphertext should consist of blocks with size ${BLOCK_SIZE}`\n    );\n  }\n}\n\nfunction validateBlockEncrypt(plaintext: Uint8Array, pcks5: boolean, dst?: Uint8Array) {\n  let outLen = plaintext.length;\n  const remaining = outLen % BLOCK_SIZE;\n  if (!pcks5 && remaining !== 0)\n    throw new Error('aec/(cbc-ecb): unpadded plaintext with disabled padding');\n  const b = u32(plaintext);\n  if (pcks5) {\n    let left = BLOCK_SIZE - remaining;\n    if (!left) left = BLOCK_SIZE; // if no bytes left, create empty padding block\n    outLen = outLen + left;\n  }\n  const out = getDst(outLen, dst);\n  const o = u32(out);\n  return { b, o, out };\n}\n\nfunction validatePCKS(data: Uint8Array, pcks5: boolean) {\n  if (!pcks5) return data;\n  const len = data.length;\n  if (!len) throw new Error(`aes/pcks5: empty ciphertext not allowed`);\n  const lastByte = data[len - 1];\n  if (lastByte <= 0 || lastByte > 16) throw new Error(`aes/pcks5: wrong padding byte: ${lastByte}`);\n  const out = data.subarray(0, -lastByte);\n  for (let i = 0; i < lastByte; i++)\n    if (data[len - i - 1] !== lastByte) throw new Error(`aes/pcks5: wrong padding`);\n  return out;\n}\n\nfunction padPCKS(left: Uint8Array) {\n  const tmp = new Uint8Array(16);\n  const tmp32 = u32(tmp);\n  tmp.set(left);\n  const paddingByte = BLOCK_SIZE - left.length;\n  for (let i = BLOCK_SIZE - paddingByte; i < BLOCK_SIZE; i++) tmp[i] = paddingByte;\n  return tmp32;\n}\n\nexport type BlockOpts = { disablePadding?: boolean };\n\n/**\n * ECB: Electronic CodeBook. Simple deterministic replacement.\n * Dangerous: always map x to y. See [AES Penguin](https://words.filippo.io/the-ecb-penguin/).\n */\nexport const ecb = wrapCipher(\n  { blockSize: 16 },\n  function ecb(key: Uint8Array, opts: BlockOpts = {}): CipherWithOutput {\n    abytes(key);\n    const pcks5 = !opts.disablePadding;\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => {\n        abytes(plaintext);\n        const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n        const xk = expandKeyLE(key);\n        let i = 0;\n        for (; i + 4 <= b.length; ) {\n          const { s0, s1, s2, s3 } = encrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        if (pcks5) {\n          const tmp32 = padPCKS(plaintext.subarray(i * 4));\n          const { s0, s1, s2, s3 } = encrypt(xk, tmp32[0], tmp32[1], tmp32[2], tmp32[3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        xk.fill(0);\n        return _out;\n      },\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => {\n        validateBlockDecrypt(ciphertext);\n        const xk = expandKeyDecLE(key);\n        const out = getDst(ciphertext.length, dst);\n        const b = u32(ciphertext);\n        const o = u32(out);\n        for (let i = 0; i + 4 <= b.length; ) {\n          const { s0, s1, s2, s3 } = decrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        xk.fill(0);\n        return validatePCKS(out, pcks5);\n      },\n    };\n  }\n);\n\n/**\n * CBC: Cipher-Block-Chaining. Key is previous round\u2019s block.\n * Fragile: needs proper padding. Unauthenticated: needs MAC.\n */\nexport const cbc = wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function cbc(key: Uint8Array, iv: Uint8Array, opts: BlockOpts = {}): CipherWithOutput {\n    abytes(key);\n    abytes(iv, 16);\n    const pcks5 = !opts.disablePadding;\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => {\n        const xk = expandKeyLE(key);\n        const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n        const n32 = u32(iv);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        let i = 0;\n        for (; i + 4 <= b.length; ) {\n          (s0 ^= b[i + 0]), (s1 ^= b[i + 1]), (s2 ^= b[i + 2]), (s3 ^= b[i + 3]);\n          ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        if (pcks5) {\n          const tmp32 = padPCKS(plaintext.subarray(i * 4));\n          (s0 ^= tmp32[0]), (s1 ^= tmp32[1]), (s2 ^= tmp32[2]), (s3 ^= tmp32[3]);\n          ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        xk.fill(0);\n        return _out;\n      },\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => {\n        validateBlockDecrypt(ciphertext);\n        const xk = expandKeyDecLE(key);\n        const n32 = u32(iv);\n        const out = getDst(ciphertext.length, dst);\n        const b = u32(ciphertext);\n        const o = u32(out);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        for (let i = 0; i + 4 <= b.length; ) {\n          // prettier-ignore\n          const ps0 = s0, ps1 = s1, ps2 = s2, ps3 = s3;\n          (s0 = b[i + 0]), (s1 = b[i + 1]), (s2 = b[i + 2]), (s3 = b[i + 3]);\n          const { s0: o0, s1: o1, s2: o2, s3: o3 } = decrypt(xk, s0, s1, s2, s3);\n          (o[i++] = o0 ^ ps0), (o[i++] = o1 ^ ps1), (o[i++] = o2 ^ ps2), (o[i++] = o3 ^ ps3);\n        }\n        xk.fill(0);\n        return validatePCKS(out, pcks5);\n      },\n    };\n  }\n);\n\n/**\n * CFB: Cipher Feedback Mode. The input for the block cipher is the previous cipher output.\n * Unauthenticated: needs MAC.\n */\nexport const cfb = wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function cfb(key: Uint8Array, iv: Uint8Array): CipherWithOutput {\n    abytes(key);\n    abytes(iv, 16);\n    function processCfb(src: Uint8Array, isEncrypt: boolean, dst?: Uint8Array) {\n      const xk = expandKeyLE(key);\n      const srcLen = src.length;\n      dst = getDst(srcLen, dst);\n      const src32 = u32(src);\n      const dst32 = u32(dst);\n      const next32 = isEncrypt ? dst32 : src32;\n      const n32 = u32(iv);\n      // prettier-ignore\n      let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n      for (let i = 0; i + 4 <= src32.length; ) {\n        const { s0: e0, s1: e1, s2: e2, s3: e3 } = encrypt(xk, s0, s1, s2, s3);\n        dst32[i + 0] = src32[i + 0] ^ e0;\n        dst32[i + 1] = src32[i + 1] ^ e1;\n        dst32[i + 2] = src32[i + 2] ^ e2;\n        dst32[i + 3] = src32[i + 3] ^ e3;\n        (s0 = next32[i++]), (s1 = next32[i++]), (s2 = next32[i++]), (s3 = next32[i++]);\n      }\n      // leftovers (less than block)\n      const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n      if (start < srcLen) {\n        ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n        const buf = u8(new Uint32Array([s0, s1, s2, s3]));\n        for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n        buf.fill(0);\n      }\n      xk.fill(0);\n      return dst;\n    }\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => processCfb(plaintext, true, dst),\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => processCfb(ciphertext, false, dst),\n    };\n  }\n);\n\n// TODO: merge with chacha, however gcm has bitLen while chacha has byteLen\nfunction computeTag(\n  fn: typeof ghash,\n  isLE: boolean,\n  key: Uint8Array,\n  data: Uint8Array,\n  AAD?: Uint8Array\n) {\n  const h = fn.create(key, data.length + (AAD?.length || 0));\n  if (AAD) h.update(AAD);\n  h.update(data);\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  if (AAD) setBigUint64(view, 0, BigInt(AAD.length * 8), isLE);\n  setBigUint64(view, 8, BigInt(data.length * 8), isLE);\n  h.update(num);\n  return h.digest();\n}\n\n/**\n * GCM: Galois/Counter Mode.\n * Good, modern version of CTR, parallel, with MAC.\n * Be careful: MACs can be forged.\n */\nexport const gcm = wrapCipher(\n  { blockSize: 16, nonceLength: 12, tagLength: 16 },\n  function gcm(key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): Cipher {\n    abytes(nonce);\n    // Nonce can be pretty much anything (even 1 byte). But smaller nonces less secure.\n    if (nonce.length === 0) throw new Error('aes/gcm: empty nonce');\n    const tagLength = 16;\n    function _computeTag(authKey: Uint8Array, tagMask: Uint8Array, data: Uint8Array) {\n      const tag = computeTag(ghash, false, authKey, data, AAD);\n      for (let i = 0; i < tagMask.length; i++) tag[i] ^= tagMask[i];\n      return tag;\n    }\n    function deriveKeys() {\n      const xk = expandKeyLE(key);\n      const authKey = EMPTY_BLOCK.slice();\n      const counter = EMPTY_BLOCK.slice();\n      ctr32(xk, false, counter, counter, authKey);\n      if (nonce.length === 12) {\n        counter.set(nonce);\n      } else {\n        // Spec (NIST 800-38d) supports variable size nonce.\n        // Not supported for now, but can be useful.\n        const nonceLen = EMPTY_BLOCK.slice();\n        const view = createView(nonceLen);\n        setBigUint64(view, 8, BigInt(nonce.length * 8), false);\n        // ghash(nonce || u64be(0) || u64be(nonceLen*8))\n        ghash.create(authKey).update(nonce).update(nonceLen).digestInto(counter);\n      }\n      const tagMask = ctr32(xk, false, counter, EMPTY_BLOCK);\n      return { xk, authKey, counter, tagMask };\n    }\n    return {\n      encrypt: (plaintext: Uint8Array) => {\n        abytes(plaintext);\n        const { xk, authKey, counter, tagMask } = deriveKeys();\n        const out = new Uint8Array(plaintext.length + tagLength);\n        ctr32(xk, false, counter, plaintext, out);\n        const tag = _computeTag(authKey, tagMask, out.subarray(0, out.length - tagLength));\n        out.set(tag, plaintext.length);\n        xk.fill(0);\n        return out;\n      },\n      decrypt: (ciphertext: Uint8Array) => {\n        abytes(ciphertext);\n        if (ciphertext.length < tagLength)\n          throw new Error(`aes/gcm: ciphertext less than tagLen (${tagLength})`);\n        const { xk, authKey, counter, tagMask } = deriveKeys();\n        const data = ciphertext.subarray(0, -tagLength);\n        const passedTag = ciphertext.subarray(-tagLength);\n        const tag = _computeTag(authKey, tagMask, data);\n        if (!equalBytes(tag, passedTag)) throw new Error('aes/gcm: invalid ghash tag');\n        const out = ctr32(xk, false, counter, data);\n        authKey.fill(0);\n        tagMask.fill(0);\n        xk.fill(0);\n        return out;\n      },\n    };\n  }\n);\n\nconst limit = (name: string, min: number, max: number) => (value: number) => {\n  if (!Number.isSafeInteger(value) || min > value || value > max)\n    throw new Error(`${name}: invalid value=${value}, must be [${min}..${max}]`);\n};\n\n/**\n * AES-GCM-SIV: classic AES-GCM with nonce-misuse resistance.\n * Guarantees that, when a nonce is repeated, the only security loss is that identical\n * plaintexts will produce identical ciphertexts.\n * RFC 8452, https://datatracker.ietf.org/doc/html/rfc8452\n */\nexport const siv = wrapCipher(\n  { blockSize: 16, nonceLength: 12, tagLength: 16 },\n  function siv(key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): Cipher {\n    const tagLength = 16;\n    // From RFC 8452: Section 6\n    const AAD_LIMIT = limit('AAD', 0, 2 ** 36);\n    const PLAIN_LIMIT = limit('plaintext', 0, 2 ** 36);\n    const NONCE_LIMIT = limit('nonce', 12, 12);\n    const CIPHER_LIMIT = limit('ciphertext', 16, 2 ** 36 + 16);\n    abytes(nonce);\n    NONCE_LIMIT(nonce.length);\n    if (AAD) {\n      abytes(AAD);\n      AAD_LIMIT(AAD.length);\n    }\n    function deriveKeys() {\n      const len = key.length;\n      if (len !== 16 && len !== 24 && len !== 32)\n        throw new Error(`key length must be 16, 24 or 32 bytes, got: ${len} bytes`);\n      const xk = expandKeyLE(key);\n      const encKey = new Uint8Array(len);\n      const authKey = new Uint8Array(16);\n      const n32 = u32(nonce);\n      // prettier-ignore\n      let s0 = 0, s1 = n32[0], s2 = n32[1], s3 = n32[2];\n      let counter = 0;\n      for (const derivedKey of [authKey, encKey].map(u32)) {\n        const d32 = u32(derivedKey);\n        for (let i = 0; i < d32.length; i += 2) {\n          // aes(u32le(0) || nonce)[:8] || aes(u32le(1) || nonce)[:8] ...\n          const { s0: o0, s1: o1 } = encrypt(xk, s0, s1, s2, s3);\n          d32[i + 0] = o0;\n          d32[i + 1] = o1;\n          s0 = ++counter; // increment counter inside state\n        }\n      }\n      xk.fill(0);\n      return { authKey, encKey: expandKeyLE(encKey) };\n    }\n    function _computeTag(encKey: Uint32Array, authKey: Uint8Array, data: Uint8Array) {\n      const tag = computeTag(polyval, true, authKey, data, AAD);\n      // Compute the expected tag by XORing S_s and the nonce, clearing the\n      // most significant bit of the last byte and encrypting with the\n      // message-encryption key.\n      for (let i = 0; i < 12; i++) tag[i] ^= nonce[i];\n      tag[15] &= 0x7f; // Clear the highest bit\n      // encrypt tag as block\n      const t32 = u32(tag);\n      // prettier-ignore\n      let s0 = t32[0], s1 = t32[1], s2 = t32[2], s3 = t32[3];\n      ({ s0, s1, s2, s3 } = encrypt(encKey, s0, s1, s2, s3));\n      (t32[0] = s0), (t32[1] = s1), (t32[2] = s2), (t32[3] = s3);\n      return tag;\n    }\n    // actual decrypt/encrypt of message.\n    function processSiv(encKey: Uint32Array, tag: Uint8Array, input: Uint8Array) {\n      let block = tag.slice();\n      block[15] |= 0x80; // Force highest bit\n      return ctr32(encKey, true, block, input);\n    }\n    return {\n      encrypt: (plaintext: Uint8Array) => {\n        abytes(plaintext);\n        PLAIN_LIMIT(plaintext.length);\n        const { encKey, authKey } = deriveKeys();\n        const tag = _computeTag(encKey, authKey, plaintext);\n        const out = new Uint8Array(plaintext.length + tagLength);\n        out.set(tag, plaintext.length);\n        out.set(processSiv(encKey, tag, plaintext));\n        encKey.fill(0);\n        authKey.fill(0);\n        return out;\n      },\n      decrypt: (ciphertext: Uint8Array) => {\n        abytes(ciphertext);\n        CIPHER_LIMIT(ciphertext.length);\n        const tag = ciphertext.subarray(-tagLength);\n        const { encKey, authKey } = deriveKeys();\n        const plaintext = processSiv(encKey, tag, ciphertext.subarray(0, -tagLength));\n        const expectedTag = _computeTag(encKey, authKey, plaintext);\n        encKey.fill(0);\n        authKey.fill(0);\n        if (!equalBytes(tag, expectedTag)) throw new Error('invalid polyval tag');\n        return plaintext;\n      },\n    };\n  }\n);\n\nfunction isBytes32(a: unknown): a is Uint8Array {\n  return (\n    a != null &&\n    typeof a === 'object' &&\n    (a instanceof Uint32Array || a.constructor.name === 'Uint32Array')\n  );\n}\n\nfunction encryptBlock(xk: Uint32Array, block: Uint8Array) {\n  abytes(block, 16);\n  if (!isBytes32(xk)) throw new Error('_encryptBlock accepts result of expandKeyLE');\n  const b32 = u32(block);\n  let { s0, s1, s2, s3 } = encrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n  (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n  return block;\n}\n\nfunction decryptBlock(xk: Uint32Array, block: Uint8Array) {\n  abytes(block, 16);\n  if (!isBytes32(xk)) throw new Error('_decryptBlock accepts result of expandKeyLE');\n  const b32 = u32(block);\n  let { s0, s1, s2, s3 } = decrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n  (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n  return block;\n}\n\n// Highly unsafe private functions for implementing new modes or ciphers based on AES\n// Can change at any time, no API guarantees\nexport const unsafe = {\n  expandKeyLE,\n  expandKeyDecLE,\n  encrypt,\n  decrypt,\n  encryptBlock,\n  decryptBlock,\n  ctrCounter,\n  ctr32,\n};\n", "import { exists as aexists, bytes as abytes, output as aoutput } from './_assert.js';\nimport { Input, toBytes, Hash } from './utils.js';\n\n// Poly1305 is a fast and parallel secret-key message-authentication code.\n// https://cr.yp.to/mac.html, https://cr.yp.to/mac/poly1305-20050329.pdf\n// https://datatracker.ietf.org/doc/html/rfc8439\n\n// Based on Public Domain poly1305-donna https://github.com/floodyberry/poly1305-donna\nconst u8to16 = (a: Uint8Array, i: number) => (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\nclass Poly1305 implements Hash<Poly1305> {\n  readonly blockLen = 16;\n  readonly outputLen = 16;\n  private buffer = new Uint8Array(16);\n  private r = new Uint16Array(10);\n  private h = new Uint16Array(10);\n  private pad = new Uint16Array(8);\n  private pos = 0;\n  protected finished = false;\n\n  constructor(key: Input) {\n    key = toBytes(key);\n    abytes(key, 32);\n    const t0 = u8to16(key, 0);\n    const t1 = u8to16(key, 2);\n    const t2 = u8to16(key, 4);\n    const t3 = u8to16(key, 6);\n    const t4 = u8to16(key, 8);\n    const t5 = u8to16(key, 10);\n    const t6 = u8to16(key, 12);\n    const t7 = u8to16(key, 14);\n\n    // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n    this.r[0] = t0 & 0x1fff;\n    this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n    this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n    this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n    this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n    this.r[5] = (t4 >>> 1) & 0x1ffe;\n    this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n    this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n    this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n    this.r[9] = (t7 >>> 5) & 0x007f;\n    for (let i = 0; i < 8; i++) this.pad[i] = u8to16(key, 16 + 2 * i);\n  }\n\n  private process(data: Uint8Array, offset: number, isLast = false) {\n    const hibit = isLast ? 0 : 1 << 11;\n    const { h, r } = this;\n    const r0 = r[0];\n    const r1 = r[1];\n    const r2 = r[2];\n    const r3 = r[3];\n    const r4 = r[4];\n    const r5 = r[5];\n    const r6 = r[6];\n    const r7 = r[7];\n    const r8 = r[8];\n    const r9 = r[9];\n\n    const t0 = u8to16(data, offset + 0);\n    const t1 = u8to16(data, offset + 2);\n    const t2 = u8to16(data, offset + 4);\n    const t3 = u8to16(data, offset + 6);\n    const t4 = u8to16(data, offset + 8);\n    const t5 = u8to16(data, offset + 10);\n    const t6 = u8to16(data, offset + 12);\n    const t7 = u8to16(data, offset + 14);\n\n    let h0 = h[0] + (t0 & 0x1fff);\n    let h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n    let h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n    let h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n    let h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n    let h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n    let h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n    let h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n    let h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n    let h9 = h[9] + ((t7 >>> 5) | hibit);\n\n    let c = 0;\n\n    let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);\n    c = d0 >>> 13;\n    d0 &= 0x1fff;\n    d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) + h9 * (5 * r1);\n    c += d0 >>> 13;\n    d0 &= 0x1fff;\n\n    let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);\n    c = d1 >>> 13;\n    d1 &= 0x1fff;\n    d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r2);\n    c += d1 >>> 13;\n    d1 &= 0x1fff;\n\n    let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n    c = d2 >>> 13;\n    d2 &= 0x1fff;\n    d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);\n    c += d2 >>> 13;\n    d2 &= 0x1fff;\n\n    let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n    c = d3 >>> 13;\n    d3 &= 0x1fff;\n    d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);\n    c += d3 >>> 13;\n    d3 &= 0x1fff;\n\n    let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n    c = d4 >>> 13;\n    d4 &= 0x1fff;\n    d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);\n    c += d4 >>> 13;\n    d4 &= 0x1fff;\n\n    let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n    c = d5 >>> 13;\n    d5 &= 0x1fff;\n    d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);\n    c += d5 >>> 13;\n    d5 &= 0x1fff;\n\n    let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n    c = d6 >>> 13;\n    d6 &= 0x1fff;\n    d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n    c += d6 >>> 13;\n    d6 &= 0x1fff;\n\n    let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n    c = d7 >>> 13;\n    d7 &= 0x1fff;\n    d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n    c += d7 >>> 13;\n    d7 &= 0x1fff;\n\n    let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n    c = d8 >>> 13;\n    d8 &= 0x1fff;\n    d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n    c += d8 >>> 13;\n    d8 &= 0x1fff;\n\n    let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n    c = d9 >>> 13;\n    d9 &= 0x1fff;\n    d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n    c += d9 >>> 13;\n    d9 &= 0x1fff;\n\n    c = ((c << 2) + c) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = c >>> 13;\n    d1 += c;\n\n    h[0] = d0;\n    h[1] = d1;\n    h[2] = d2;\n    h[3] = d3;\n    h[4] = d4;\n    h[5] = d5;\n    h[6] = d6;\n    h[7] = d7;\n    h[8] = d8;\n    h[9] = d9;\n  }\n\n  private finalize() {\n    const { h, pad } = this;\n    const g = new Uint16Array(10);\n    let c = h[1] >>> 13;\n    h[1] &= 0x1fff;\n    for (let i = 2; i < 10; i++) {\n      h[i] += c;\n      c = h[i] >>> 13;\n      h[i] &= 0x1fff;\n    }\n    h[0] += c * 5;\n    c = h[0] >>> 13;\n    h[0] &= 0x1fff;\n    h[1] += c;\n    c = h[1] >>> 13;\n    h[1] &= 0x1fff;\n    h[2] += c;\n\n    g[0] = h[0] + 5;\n    c = g[0] >>> 13;\n    g[0] &= 0x1fff;\n    for (let i = 1; i < 10; i++) {\n      g[i] = h[i] + c;\n      c = g[i] >>> 13;\n      g[i] &= 0x1fff;\n    }\n    g[9] -= 1 << 13;\n\n    let mask = (c ^ 1) - 1;\n    for (let i = 0; i < 10; i++) g[i] &= mask;\n    mask = ~mask;\n    for (let i = 0; i < 10; i++) h[i] = (h[i] & mask) | g[i];\n    h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n    h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n    h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n    h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n    h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n    h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n    h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n    h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n\n    let f = h[0] + pad[0];\n    h[0] = f & 0xffff;\n    for (let i = 1; i < 8; i++) {\n      f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n      h[i] = f & 0xffff;\n    }\n  }\n  update(data: Input): this {\n    aexists(this);\n    const { buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input\n      if (take === blockLen) {\n        for (; blockLen <= len - pos; pos += blockLen) this.process(data, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(buffer, 0, false);\n        this.pos = 0;\n      }\n    }\n    return this;\n  }\n  destroy() {\n    this.h.fill(0);\n    this.r.fill(0);\n    this.buffer.fill(0);\n    this.pad.fill(0);\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    const { buffer, h } = this;\n    let { pos } = this;\n    if (pos) {\n      buffer[pos++] = 1;\n      // buffer.subarray(pos).fill(0);\n      for (; pos < 16; pos++) buffer[pos] = 0;\n      this.process(buffer, 0, true);\n    }\n    this.finalize();\n    let opos = 0;\n    for (let i = 0; i < 8; i++) {\n      out[opos++] = h[i] >>> 0;\n      out[opos++] = h[i] >>> 8;\n    }\n    return out;\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n}\n\nexport type CHash = ReturnType<typeof wrapConstructorWithKey>;\nexport function wrapConstructorWithKey<H extends Hash<H>>(hashCons: (key: Input) => Hash<H>) {\n  const hashC = (msg: Input, key: Input): Uint8Array => hashCons(key).update(toBytes(msg)).digest();\n  const tmp = hashCons(new Uint8Array(32));\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (key: Input) => hashCons(key);\n  return hashC;\n}\n\nexport const poly1305 = wrapConstructorWithKey((key) => new Poly1305(key));\n", "// Basic utils for ARX (add-rotate-xor) salsa and chacha ciphers.\nimport { number as anumber, bytes as abytes, bool as abool } from './_assert.js';\nimport { XorStream, checkOpts, u32 } from './utils.js';\n\n/*\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- 32-bit counters are enough, no need for 64-bit: max ArrayBuffer size in JS is 4GB\n- Original papers don't allow mutating counters\n- Counter overflow is undefined [^1]\n- Idea A: allow providing (nonce | counter) instead of just nonce, re-use it\n- Caveat: Cannot be re-used through all cases:\n- * chacha has (counter | nonce)\n- * xchacha has (nonce16 | counter | nonce16)\n- Idea B: separate nonce / counter and provide separate API for counter re-use\n- Caveat: there are different counter sizes depending on an algorithm.\n- salsa & chacha also differ in structures of key & sigma:\n  salsa20:      s[0] | k(4) | s[1] | nonce(2) | ctr(2) | s[2] | k(4) | s[3]\n  chacha:       s(4) | k(8) | ctr(1) | nonce(3)\n  chacha20orig: s(4) | k(8) | ctr(2) | nonce(2)\n- Idea C: helper method such as `setSalsaState(key, nonce, sigma, data)`\n- Caveat: we can't re-use counter array\n\nxchacha [^2] uses the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n\n[^1]: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n[^2]: https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\n*/\n\n// We can't make top-level var depend on utils.utf8ToBytes\n// because it's not present in all envs. Creating a similar fn here\nconst _utf8ToBytes = (str: string) => Uint8Array.from(str.split('').map((c) => c.charCodeAt(0)));\nconst sigma16 = _utf8ToBytes('expand 16-byte k');\nconst sigma32 = _utf8ToBytes('expand 32-byte k');\nconst sigma16_32 = u32(sigma16);\nconst sigma32_32 = u32(sigma32);\nexport const sigma = sigma32_32.slice();\n\nexport function rotl(a: number, b: number): number {\n  return (a << b) | (a >>> (32 - b));\n}\n\nexport type CipherCoreFn = (\n  sigma: Uint32Array,\n  key: Uint32Array,\n  nonce: Uint32Array,\n  output: Uint32Array,\n  counter: number,\n  rounds?: number\n) => void;\n\nexport type ExtendNonceFn = (\n  sigma: Uint32Array,\n  key: Uint32Array,\n  input: Uint32Array,\n  output: Uint32Array\n) => void;\n\nexport type CipherOpts = {\n  allowShortKeys?: boolean; // Original salsa / chacha allow 16-byte keys\n  extendNonceFn?: ExtendNonceFn;\n  counterLength?: number;\n  counterRight?: boolean; // right: nonce|counter; left: counter|nonce\n  rounds?: number;\n};\n\n// Is byte array aligned to 4 byte offset (u32)?\nfunction isAligned32(b: Uint8Array) {\n  return b.byteOffset % 4 === 0;\n}\n\n// Salsa and Chacha block length is always 512-bit\nconst BLOCK_LEN = 64;\nconst BLOCK_LEN32 = 16;\n\n// new Uint32Array([2**32])   // => Uint32Array(1) [ 0 ]\n// new Uint32Array([2**32-1]) // => Uint32Array(1) [ 4294967295 ]\nconst MAX_COUNTER = 2 ** 32 - 1;\n\nconst U32_EMPTY = new Uint32Array();\nfunction runCipher(\n  core: CipherCoreFn,\n  sigma: Uint32Array,\n  key: Uint32Array,\n  nonce: Uint32Array,\n  data: Uint8Array,\n  output: Uint8Array,\n  counter: number,\n  rounds: number\n): void {\n  const len = data.length;\n  const block = new Uint8Array(BLOCK_LEN);\n  const b32 = u32(block);\n  // Make sure that buffers aligned to 4 bytes\n  const isAligned = isAligned32(data) && isAligned32(output);\n  const d32 = isAligned ? u32(data) : U32_EMPTY;\n  const o32 = isAligned ? u32(output) : U32_EMPTY;\n  for (let pos = 0; pos < len; counter++) {\n    core(sigma, key, nonce, b32, counter, rounds);\n    if (counter >= MAX_COUNTER) throw new Error('arx: counter overflow');\n    const take = Math.min(BLOCK_LEN, len - pos);\n    // aligned to 4 bytes\n    if (isAligned && take === BLOCK_LEN) {\n      const pos32 = pos / 4;\n      if (pos % 4 !== 0) throw new Error('arx: invalid block position');\n      for (let j = 0, posj: number; j < BLOCK_LEN32; j++) {\n        posj = pos32 + j;\n        o32[posj] = d32[posj] ^ b32[j];\n      }\n      pos += BLOCK_LEN;\n      continue;\n    }\n    for (let j = 0, posj; j < take; j++) {\n      posj = pos + j;\n      output[posj] = data[posj] ^ block[j];\n    }\n    pos += take;\n  }\n}\n\nexport function createCipher(core: CipherCoreFn, opts: CipherOpts): XorStream {\n  const { allowShortKeys, extendNonceFn, counterLength, counterRight, rounds } = checkOpts(\n    { allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 },\n    opts\n  );\n  if (typeof core !== 'function') throw new Error('core must be a function');\n  anumber(counterLength);\n  anumber(rounds);\n  abool(counterRight);\n  abool(allowShortKeys);\n  return (\n    key: Uint8Array,\n    nonce: Uint8Array,\n    data: Uint8Array,\n    output?: Uint8Array,\n    counter = 0\n  ): Uint8Array => {\n    abytes(key);\n    abytes(nonce);\n    abytes(data);\n    const len = data.length;\n    if (!output) output = new Uint8Array(len);\n    abytes(output);\n    anumber(counter);\n    if (counter < 0 || counter >= MAX_COUNTER) throw new Error('arx: counter overflow');\n    if (output.length < len)\n      throw new Error(`arx: output (${output.length}) is shorter than data (${len})`);\n    const toClean = [];\n\n    // Key & sigma\n    // key=16 -> sigma16, k=key|key\n    // key=32 -> sigma32, k=key\n    let l = key.length,\n      k: Uint8Array,\n      sigma: Uint32Array;\n    if (l === 32) {\n      k = key.slice();\n      toClean.push(k);\n      sigma = sigma32_32;\n    } else if (l === 16 && allowShortKeys) {\n      k = new Uint8Array(32);\n      k.set(key);\n      k.set(key, 16);\n      sigma = sigma16_32;\n      toClean.push(k);\n    } else {\n      throw new Error(`arx: invalid 32-byte key, got length=${l}`);\n    }\n\n    // Nonce\n    // salsa20:      8   (8-byte counter)\n    // chacha20orig: 8   (8-byte counter)\n    // chacha20:     12  (4-byte counter)\n    // xsalsa20:     24  (16 -> hsalsa,  8 -> old nonce)\n    // xchacha20:    24  (16 -> hchacha, 8 -> old nonce)\n    // Align nonce to 4 bytes\n    if (!isAligned32(nonce)) {\n      nonce = nonce.slice();\n      toClean.push(nonce);\n    }\n\n    const k32 = u32(k);\n    // hsalsa & hchacha: handle extended nonce\n    if (extendNonceFn) {\n      if (nonce.length !== 24) throw new Error(`arx: extended nonce must be 24 bytes`);\n      extendNonceFn(sigma, k32, u32(nonce.subarray(0, 16)), k32);\n      nonce = nonce.subarray(16);\n    }\n\n    // Handle nonce counter\n    const nonceNcLen = 16 - counterLength;\n    if (nonceNcLen !== nonce.length)\n      throw new Error(`arx: nonce must be ${nonceNcLen} or 16 bytes`);\n\n    // Pad counter when nonce is 64 bit\n    if (nonceNcLen !== 12) {\n      const nc = new Uint8Array(12);\n      nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n      nonce = nc;\n      toClean.push(nonce);\n    }\n    const n32 = u32(nonce);\n    runCipher(core, sigma, k32, n32, data, output, counter, rounds);\n    while (toClean.length > 0) toClean.pop()!.fill(0);\n    return output;\n  };\n}\n", "// prettier-ignore\nimport {\n  wrapCipher, CipherWithOutput, XorStream, createView, equalBytes, setBigUint64,\n} from './utils.js';\nimport { poly1305 } from './_poly1305.js';\nimport { createCipher, rotl } from './_arx.js';\nimport { bytes as abytes } from './_assert.js';\n\n// ChaCha20 stream cipher was released in 2008. ChaCha aims to increase\n// the diffusion per round, but had slightly less cryptanalysis.\n// https://cr.yp.to/chacha.html, http://cr.yp.to/chacha/chacha-20080128.pdf\n\n/**\n * ChaCha core function.\n */\n// prettier-ignore\nfunction chachaCore(\n  s: Uint32Array, k: Uint32Array, n: Uint32Array, out: Uint32Array, cnt: number, rounds = 20\n): void {\n  let y00 = s[0], y01 = s[1], y02 = s[2], y03 = s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n      y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3], // Key      Key     Key     Key\n      y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7], // Key      Key     Key     Key\n      y12 = cnt,  y13 = n[0], y14 = n[1], y15 = n[2]; // Counter  Counter\tNonce   Nonce\n  // Save state to temporary variables\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  for (let r = 0; r < rounds; r += 2) {\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 16);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 12);\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 8);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 7);\n\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 16);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 12);\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 8);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 7);\n\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 16);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 12);\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^x02, 8);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 7);\n\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 16);\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 12);\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 8)\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 7);\n\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 16);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 12);\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 8);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 7);\n\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 16);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 12);\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 8);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 7);\n\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 16);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 12);\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 8);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 7);\n\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 16)\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 12);\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 8);\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 7);\n  }\n  // Write output\n  let oi = 0;\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n/**\n * hchacha helper method, used primarily in xchacha, to hash\n * key and nonce into key' and nonce'.\n * Same as chachaCore, but there doesn't seem to be a way to move the block\n * out without 25% performance hit.\n */\n// prettier-ignore\nexport function hchacha(\n  s: Uint32Array, k: Uint32Array, i: Uint32Array, o32: Uint32Array\n) {\n  let x00 = s[0], x01 = s[1], x02 = s[2], x03 = s[3],\n      x04 = k[0], x05 = k[1], x06 = k[2], x07 = k[3],\n      x08 = k[4], x09 = k[5], x10 = k[6], x11 = k[7],\n      x12 = i[0], x13 = i[1], x14 = i[2], x15 = i[3];\n  for (let r = 0; r < 20; r += 2) {\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 16);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 12);\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 8);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 7);\n\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 16);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 12);\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 8);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 7);\n\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 16);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 12);\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 8);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 7);\n\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 16);\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 12);\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 8)\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 7);\n\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 16);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 12);\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 8);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 7);\n\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 16);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 12);\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 8);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 7);\n\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 16);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 12);\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 8);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 7);\n\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 16)\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 12);\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 8);\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 7);\n  }\n  let oi = 0;\n  o32[oi++] = x00; o32[oi++] = x01;\n  o32[oi++] = x02; o32[oi++] = x03;\n  o32[oi++] = x12; o32[oi++] = x13;\n  o32[oi++] = x14; o32[oi++] = x15;\n}\n/**\n * Original, non-RFC chacha20 from DJB. 8-byte nonce, 8-byte counter.\n */\nexport const chacha20orig = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 8,\n  allowShortKeys: true,\n});\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  allowShortKeys: false,\n});\n\n/**\n * XChaCha eXtended-nonce ChaCha. 24-byte nonce.\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n */\nexport const xchacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 8,\n  extendNonceFn: hchacha,\n  allowShortKeys: false,\n});\n\n/**\n * Reduced 8-round chacha, described in original paper.\n */\nexport const chacha8 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  rounds: 8,\n});\n\n/**\n * Reduced 12-round chacha, described in original paper.\n */\nexport const chacha12 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  rounds: 12,\n});\n\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h: ReturnType<typeof poly1305.create>, msg: Uint8Array) => {\n  h.update(msg);\n  const left = msg.length % 16;\n  if (left) h.update(ZEROS16.subarray(left));\n};\n\nconst ZEROS32 = /* @__PURE__ */ new Uint8Array(32);\nfunction computeTag(\n  fn: XorStream,\n  key: Uint8Array,\n  nonce: Uint8Array,\n  data: Uint8Array,\n  AAD?: Uint8Array\n): Uint8Array {\n  const authKey = fn(key, nonce, ZEROS32);\n  const h = poly1305.create(authKey);\n  if (AAD) updatePadded(h, AAD);\n  updatePadded(h, data);\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n  setBigUint64(view, 8, BigInt(data.length), true);\n  h.update(num);\n  const res = h.digest();\n  authKey.fill(0);\n  return res;\n}\n\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them similar to:\n * https://github.com/paulmillr/scure-base/blob/b266c73dde977b1dd7ef40ef7a23cc15aab526b3/index.ts#L250\n * But it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nexport const _poly1305_aead =\n  (xorStream: XorStream) =>\n  (key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): CipherWithOutput => {\n    const tagLength = 16;\n    abytes(key, 32);\n    abytes(nonce);\n    return {\n      encrypt: (plaintext: Uint8Array, output?: Uint8Array) => {\n        const plength = plaintext.length;\n        const clength = plength + tagLength;\n        if (output) {\n          abytes(output, clength);\n        } else {\n          output = new Uint8Array(clength);\n        }\n        xorStream(key, nonce, plaintext, output, 1);\n        const tag = computeTag(xorStream, key, nonce, output.subarray(0, -tagLength), AAD);\n        output.set(tag, plength); // append tag\n        return output;\n      },\n      decrypt: (ciphertext: Uint8Array, output?: Uint8Array) => {\n        const clength = ciphertext.length;\n        const plength = clength - tagLength;\n        if (clength < tagLength)\n          throw new Error(`encrypted data must be at least ${tagLength} bytes`);\n        if (output) {\n          abytes(output, plength);\n        } else {\n          output = new Uint8Array(plength);\n        }\n        const data = ciphertext.subarray(0, -tagLength);\n        const passedTag = ciphertext.subarray(-tagLength);\n        const tag = computeTag(xorStream, key, nonce, data, AAD);\n        if (!equalBytes(passedTag, tag)) throw new Error('invalid tag');\n        xorStream(key, nonce, data, output, 1);\n        return output;\n      },\n    };\n  };\n\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20poly1305 = /* @__PURE__ */ wrapCipher(\n  { blockSize: 64, nonceLength: 12, tagLength: 16 },\n  _poly1305_aead(chacha20)\n);\n/**\n * XChaCha20-Poly1305 extended-nonce chacha.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n */\nexport const xchacha20poly1305 = /* @__PURE__ */ wrapCipher(\n  { blockSize: 64, nonceLength: 24, tagLength: 16 },\n  _poly1305_aead(xchacha20)\n);\n", "import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "import assert from './_assert.js';\nimport { CHash, Input, toBytes } from './utils.js';\nimport { hmac } from './hmac.js';\n\n// HKDF (RFC 5869)\n// https://soatok.blog/2021/11/17/understanding-hkdf/\n\n/**\n * HKDF-Extract(IKM, salt) -> PRK\n * Arguments position differs from spec (IKM is first one, since it is not optional)\n * @param hash\n * @param ikm\n * @param salt\n * @returns\n */\nexport function extract(hash: CHash, ikm: Input, salt?: Input) {\n  assert.hash(hash);\n  // NOTE: some libraries treat zero-length array as 'not provided';\n  // we don't, since we have undefined as 'not provided'\n  // https://github.com/RustCrypto/KDFs/issues/15\n  if (salt === undefined) salt = new Uint8Array(hash.outputLen); // if not provided, it is set to a string of HashLen zeros\n  return hmac(hash, toBytes(salt), toBytes(ikm));\n}\n\n// HKDF-Expand(PRK, info, L) -> OKM\nconst HKDF_COUNTER = new Uint8Array([0]);\nconst EMPTY_BUFFER = new Uint8Array();\n\n/**\n * HKDF-expand from the spec.\n * @param prk - a pseudorandom key of at least HashLen octets (usually, the output from the extract step)\n * @param info - optional context and application specific information (can be a zero-length string)\n * @param length - length of output keying material in octets\n */\nexport function expand(hash: CHash, prk: Input, info?: Input, length: number = 32) {\n  assert.hash(hash);\n  assert.number(length);\n  if (length > 255 * hash.outputLen) throw new Error('Length should be <= 255*HashLen');\n  const blocks = Math.ceil(length / hash.outputLen);\n  if (info === undefined) info = EMPTY_BUFFER;\n  // first L(ength) octets of T\n  const okm = new Uint8Array(blocks * hash.outputLen);\n  // Re-use HMAC instance between blocks\n  const HMAC = hmac.create(hash, prk);\n  const HMACTmp = HMAC._cloneInto();\n  const T = new Uint8Array(HMAC.outputLen);\n  for (let counter = 0; counter < blocks; counter++) {\n    HKDF_COUNTER[0] = counter + 1;\n    // T(0) = empty string (zero length)\n    // T(N) = HMAC-Hash(PRK, T(N-1) | info | N)\n    HMACTmp.update(counter === 0 ? EMPTY_BUFFER : T)\n      .update(info)\n      .update(HKDF_COUNTER)\n      .digestInto(T);\n    okm.set(T, hash.outputLen * counter);\n    HMAC._cloneInto(HMACTmp);\n  }\n  HMAC.destroy();\n  HMACTmp.destroy();\n  T.fill(0);\n  HKDF_COUNTER.fill(0);\n  return okm.slice(0, length);\n}\n\n/**\n * HKDF (RFC 5869): extract + expand in one step.\n * @param hash - hash function that would be used (e.g. sha256)\n * @param ikm - input keying material, the initial key\n * @param salt - optional salt value (a non-secret random value)\n * @param info - optional context and application specific information\n * @param length - length of output keying material in octets\n */\nexport const hkdf = (\n  hash: CHash,\n  ikm: Input,\n  salt: Input | undefined,\n  info: Input | undefined,\n  length: number\n) => expand(hash, extract(hash, ikm, salt), info, length);\n", "var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// pure.ts\nimport { schnorr } from \"@noble/curves/secp256k1\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\n\n// core.ts\nvar verifiedSymbol = Symbol(\"verified\");\nvar isRecord = (obj) => obj instanceof Object;\nfunction validateEvent(event) {\n  if (!isRecord(event))\n    return false;\n  if (typeof event.kind !== \"number\")\n    return false;\n  if (typeof event.content !== \"string\")\n    return false;\n  if (typeof event.created_at !== \"number\")\n    return false;\n  if (typeof event.pubkey !== \"string\")\n    return false;\n  if (!event.pubkey.match(/^[a-f0-9]{64}$/))\n    return false;\n  if (!Array.isArray(event.tags))\n    return false;\n  for (let i2 = 0; i2 < event.tags.length; i2++) {\n    let tag = event.tags[i2];\n    if (!Array.isArray(tag))\n      return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] !== \"string\")\n        return false;\n    }\n  }\n  return true;\n}\nfunction sortEvents(events) {\n  return events.sort((a, b) => {\n    if (a.created_at !== b.created_at) {\n      return b.created_at - a.created_at;\n    }\n    return a.id.localeCompare(b.id);\n  });\n}\n\n// pure.ts\nimport { sha256 } from \"@noble/hashes/sha256\";\n\n// utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  Queue: () => Queue,\n  QueueNode: () => QueueNode,\n  binarySearch: () => binarySearch,\n  insertEventIntoAscendingList: () => insertEventIntoAscendingList,\n  insertEventIntoDescendingList: () => insertEventIntoDescendingList,\n  normalizeURL: () => normalizeURL,\n  utf8Decoder: () => utf8Decoder,\n  utf8Encoder: () => utf8Encoder\n});\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nvar utf8Encoder = new TextEncoder();\nfunction normalizeURL(url) {\n  try {\n    if (url.indexOf(\"://\") === -1)\n      url = \"wss://\" + url;\n    let p = new URL(url);\n    p.pathname = p.pathname.replace(/\\/+/g, \"/\");\n    if (p.pathname.endsWith(\"/\"))\n      p.pathname = p.pathname.slice(0, -1);\n    if (p.port === \"80\" && p.protocol === \"ws:\" || p.port === \"443\" && p.protocol === \"wss:\")\n      p.port = \"\";\n    p.searchParams.sort();\n    p.hash = \"\";\n    return p.toString();\n  } catch (e) {\n    throw new Error(`Invalid URL: ${url}`);\n  }\n}\nfunction insertEventIntoDescendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, (b) => {\n    if (event.id === b.id)\n      return 0;\n    if (event.created_at === b.created_at)\n      return -1;\n    return b.created_at - event.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction insertEventIntoAscendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, (b) => {\n    if (event.id === b.id)\n      return 0;\n    if (event.created_at === b.created_at)\n      return -1;\n    return event.created_at - b.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction binarySearch(arr, compare) {\n  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n    const cmp = compare(arr[mid]);\n    if (cmp === 0) {\n      return [mid, true];\n    }\n    if (cmp < 0) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n  return [start, false];\n}\nvar QueueNode = class {\n  value;\n  next = null;\n  prev = null;\n  constructor(message) {\n    this.value = message;\n  }\n};\nvar Queue = class {\n  first;\n  last;\n  constructor() {\n    this.first = null;\n    this.last = null;\n  }\n  enqueue(value) {\n    const newNode = new QueueNode(value);\n    if (!this.last) {\n      this.first = newNode;\n      this.last = newNode;\n    } else if (this.last === this.first) {\n      this.last = newNode;\n      this.last.prev = this.first;\n      this.first.next = newNode;\n    } else {\n      newNode.prev = this.last;\n      this.last.next = newNode;\n      this.last = newNode;\n    }\n    return true;\n  }\n  dequeue() {\n    if (!this.first)\n      return null;\n    if (this.first === this.last) {\n      const target2 = this.first;\n      this.first = null;\n      this.last = null;\n      return target2.value;\n    }\n    const target = this.first;\n    this.first = target.next;\n    if (this.first) {\n      this.first.prev = null;\n    }\n    return target.value;\n  }\n};\n\n// pure.ts\nvar JS = class {\n  generateSecretKey() {\n    return schnorr.utils.randomPrivateKey();\n  }\n  getPublicKey(secretKey) {\n    return bytesToHex(schnorr.getPublicKey(secretKey));\n  }\n  finalizeEvent(t, secretKey) {\n    const event = t;\n    event.pubkey = bytesToHex(schnorr.getPublicKey(secretKey));\n    event.id = getEventHash(event);\n    event.sig = bytesToHex(schnorr.sign(getEventHash(event), secretKey));\n    event[verifiedSymbol] = true;\n    return event;\n  }\n  verifyEvent(event) {\n    if (typeof event[verifiedSymbol] === \"boolean\")\n      return event[verifiedSymbol];\n    const hash = getEventHash(event);\n    if (hash !== event.id) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n    try {\n      const valid = schnorr.verify(event.sig, hash, event.pubkey);\n      event[verifiedSymbol] = valid;\n      return valid;\n    } catch (err) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n  }\n};\nfunction serializeEvent(evt) {\n  if (!validateEvent(evt))\n    throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([0, evt.pubkey, evt.created_at, evt.kind, evt.tags, evt.content]);\n}\nfunction getEventHash(event) {\n  let eventHash = sha256(utf8Encoder.encode(serializeEvent(event)));\n  return bytesToHex(eventHash);\n}\nvar i = new JS();\nvar generateSecretKey = i.generateSecretKey;\nvar getPublicKey = i.getPublicKey;\nvar finalizeEvent = i.finalizeEvent;\nvar verifyEvent = i.verifyEvent;\n\n// kinds.ts\nvar kinds_exports = {};\n__export(kinds_exports, {\n  Application: () => Application,\n  BadgeAward: () => BadgeAward,\n  BadgeDefinition: () => BadgeDefinition,\n  BlockedRelaysList: () => BlockedRelaysList,\n  BookmarkList: () => BookmarkList,\n  Bookmarksets: () => Bookmarksets,\n  Calendar: () => Calendar,\n  CalendarEventRSVP: () => CalendarEventRSVP,\n  ChannelCreation: () => ChannelCreation,\n  ChannelHideMessage: () => ChannelHideMessage,\n  ChannelMessage: () => ChannelMessage,\n  ChannelMetadata: () => ChannelMetadata,\n  ChannelMuteUser: () => ChannelMuteUser,\n  ClassifiedListing: () => ClassifiedListing,\n  ClientAuth: () => ClientAuth,\n  CommunitiesList: () => CommunitiesList,\n  CommunityDefinition: () => CommunityDefinition,\n  CommunityPostApproval: () => CommunityPostApproval,\n  Contacts: () => Contacts,\n  CreateOrUpdateProduct: () => CreateOrUpdateProduct,\n  CreateOrUpdateStall: () => CreateOrUpdateStall,\n  Curationsets: () => Curationsets,\n  Date: () => Date2,\n  DirectMessageRelaysList: () => DirectMessageRelaysList,\n  DraftClassifiedListing: () => DraftClassifiedListing,\n  DraftLong: () => DraftLong,\n  Emojisets: () => Emojisets,\n  EncryptedDirectMessage: () => EncryptedDirectMessage,\n  EventDeletion: () => EventDeletion,\n  FileMetadata: () => FileMetadata,\n  FileServerPreference: () => FileServerPreference,\n  Followsets: () => Followsets,\n  GenericRepost: () => GenericRepost,\n  Genericlists: () => Genericlists,\n  GiftWrap: () => GiftWrap,\n  HTTPAuth: () => HTTPAuth,\n  Handlerinformation: () => Handlerinformation,\n  Handlerrecommendation: () => Handlerrecommendation,\n  Highlights: () => Highlights,\n  InterestsList: () => InterestsList,\n  Interestsets: () => Interestsets,\n  JobFeedback: () => JobFeedback,\n  JobRequest: () => JobRequest,\n  JobResult: () => JobResult,\n  Label: () => Label,\n  LightningPubRPC: () => LightningPubRPC,\n  LiveChatMessage: () => LiveChatMessage,\n  LiveEvent: () => LiveEvent,\n  LongFormArticle: () => LongFormArticle,\n  Metadata: () => Metadata,\n  Mutelist: () => Mutelist,\n  NWCWalletInfo: () => NWCWalletInfo,\n  NWCWalletRequest: () => NWCWalletRequest,\n  NWCWalletResponse: () => NWCWalletResponse,\n  NostrConnect: () => NostrConnect,\n  OpenTimestamps: () => OpenTimestamps,\n  Pinlist: () => Pinlist,\n  PrivateDirectMessage: () => PrivateDirectMessage,\n  ProblemTracker: () => ProblemTracker,\n  ProfileBadges: () => ProfileBadges,\n  PublicChatsList: () => PublicChatsList,\n  Reaction: () => Reaction,\n  RecommendRelay: () => RecommendRelay,\n  RelayList: () => RelayList,\n  Relaysets: () => Relaysets,\n  Report: () => Report,\n  Reporting: () => Reporting,\n  Repost: () => Repost,\n  Seal: () => Seal,\n  SearchRelaysList: () => SearchRelaysList,\n  ShortTextNote: () => ShortTextNote,\n  Time: () => Time,\n  UserEmojiList: () => UserEmojiList,\n  UserStatuses: () => UserStatuses,\n  Zap: () => Zap,\n  ZapGoal: () => ZapGoal,\n  ZapRequest: () => ZapRequest,\n  classifyKind: () => classifyKind,\n  isAddressableKind: () => isAddressableKind,\n  isEphemeralKind: () => isEphemeralKind,\n  isKind: () => isKind,\n  isParameterizedReplaceableKind: () => isParameterizedReplaceableKind,\n  isRegularKind: () => isRegularKind,\n  isReplaceableKind: () => isReplaceableKind\n});\nfunction isRegularKind(kind) {\n  return 1e3 <= kind && kind < 1e4 || [1, 2, 4, 5, 6, 7, 8, 16, 40, 41, 42, 43, 44].includes(kind);\n}\nfunction isReplaceableKind(kind) {\n  return [0, 3].includes(kind) || 1e4 <= kind && kind < 2e4;\n}\nfunction isEphemeralKind(kind) {\n  return 2e4 <= kind && kind < 3e4;\n}\nfunction isAddressableKind(kind) {\n  return 3e4 <= kind && kind < 4e4;\n}\nvar isParameterizedReplaceableKind = isAddressableKind;\nfunction classifyKind(kind) {\n  if (isRegularKind(kind))\n    return \"regular\";\n  if (isReplaceableKind(kind))\n    return \"replaceable\";\n  if (isEphemeralKind(kind))\n    return \"ephemeral\";\n  if (isAddressableKind(kind))\n    return \"parameterized\";\n  return \"unknown\";\n}\nfunction isKind(event, kind) {\n  const kindAsArray = kind instanceof Array ? kind : [kind];\n  return validateEvent(event) && kindAsArray.includes(event.kind) || false;\n}\nvar Metadata = 0;\nvar ShortTextNote = 1;\nvar RecommendRelay = 2;\nvar Contacts = 3;\nvar EncryptedDirectMessage = 4;\nvar EventDeletion = 5;\nvar Repost = 6;\nvar Reaction = 7;\nvar BadgeAward = 8;\nvar Seal = 13;\nvar PrivateDirectMessage = 14;\nvar GenericRepost = 16;\nvar ChannelCreation = 40;\nvar ChannelMetadata = 41;\nvar ChannelMessage = 42;\nvar ChannelHideMessage = 43;\nvar ChannelMuteUser = 44;\nvar OpenTimestamps = 1040;\nvar GiftWrap = 1059;\nvar FileMetadata = 1063;\nvar LiveChatMessage = 1311;\nvar ProblemTracker = 1971;\nvar Report = 1984;\nvar Reporting = 1984;\nvar Label = 1985;\nvar CommunityPostApproval = 4550;\nvar JobRequest = 5999;\nvar JobResult = 6999;\nvar JobFeedback = 7e3;\nvar ZapGoal = 9041;\nvar ZapRequest = 9734;\nvar Zap = 9735;\nvar Highlights = 9802;\nvar Mutelist = 1e4;\nvar Pinlist = 10001;\nvar RelayList = 10002;\nvar BookmarkList = 10003;\nvar CommunitiesList = 10004;\nvar PublicChatsList = 10005;\nvar BlockedRelaysList = 10006;\nvar SearchRelaysList = 10007;\nvar InterestsList = 10015;\nvar UserEmojiList = 10030;\nvar DirectMessageRelaysList = 10050;\nvar FileServerPreference = 10096;\nvar NWCWalletInfo = 13194;\nvar LightningPubRPC = 21e3;\nvar ClientAuth = 22242;\nvar NWCWalletRequest = 23194;\nvar NWCWalletResponse = 23195;\nvar NostrConnect = 24133;\nvar HTTPAuth = 27235;\nvar Followsets = 3e4;\nvar Genericlists = 30001;\nvar Relaysets = 30002;\nvar Bookmarksets = 30003;\nvar Curationsets = 30004;\nvar ProfileBadges = 30008;\nvar BadgeDefinition = 30009;\nvar Interestsets = 30015;\nvar CreateOrUpdateStall = 30017;\nvar CreateOrUpdateProduct = 30018;\nvar LongFormArticle = 30023;\nvar DraftLong = 30024;\nvar Emojisets = 30030;\nvar Application = 30078;\nvar LiveEvent = 30311;\nvar UserStatuses = 30315;\nvar ClassifiedListing = 30402;\nvar DraftClassifiedListing = 30403;\nvar Date2 = 31922;\nvar Time = 31923;\nvar Calendar = 31924;\nvar CalendarEventRSVP = 31925;\nvar Handlerrecommendation = 31989;\nvar Handlerinformation = 31990;\nvar CommunityDefinition = 34550;\n\n// filter.ts\nfunction matchFilter(filter, event) {\n  if (filter.ids && filter.ids.indexOf(event.id) === -1) {\n    return false;\n  }\n  if (filter.kinds && filter.kinds.indexOf(event.kind) === -1) {\n    return false;\n  }\n  if (filter.authors && filter.authors.indexOf(event.pubkey) === -1) {\n    return false;\n  }\n  for (let f in filter) {\n    if (f[0] === \"#\") {\n      let tagName = f.slice(1);\n      let values = filter[`#${tagName}`];\n      if (values && !event.tags.find(([t, v]) => t === f.slice(1) && values.indexOf(v) !== -1))\n        return false;\n    }\n  }\n  if (filter.since && event.created_at < filter.since)\n    return false;\n  if (filter.until && event.created_at > filter.until)\n    return false;\n  return true;\n}\nfunction matchFilters(filters, event) {\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    if (matchFilter(filters[i2], event)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction mergeFilters(...filters) {\n  let result = {};\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    let filter = filters[i2];\n    Object.entries(filter).forEach(([property, values]) => {\n      if (property === \"kinds\" || property === \"ids\" || property === \"authors\" || property[0] === \"#\") {\n        result[property] = result[property] || [];\n        for (let v = 0; v < values.length; v++) {\n          let value = values[v];\n          if (!result[property].includes(value))\n            result[property].push(value);\n        }\n      }\n    });\n    if (filter.limit && (!result.limit || filter.limit > result.limit))\n      result.limit = filter.limit;\n    if (filter.until && (!result.until || filter.until > result.until))\n      result.until = filter.until;\n    if (filter.since && (!result.since || filter.since < result.since))\n      result.since = filter.since;\n  }\n  return result;\n}\nfunction getFilterLimit(filter) {\n  if (filter.ids && !filter.ids.length)\n    return 0;\n  if (filter.kinds && !filter.kinds.length)\n    return 0;\n  if (filter.authors && !filter.authors.length)\n    return 0;\n  for (const [key, value] of Object.entries(filter)) {\n    if (key[0] === \"#\" && Array.isArray(value) && !value.length)\n      return 0;\n  }\n  return Math.min(\n    Math.max(0, filter.limit ?? Infinity),\n    filter.ids?.length ?? Infinity,\n    filter.authors?.length && filter.kinds?.every((kind) => isReplaceableKind(kind)) ? filter.authors.length * filter.kinds.length : Infinity,\n    filter.authors?.length && filter.kinds?.every((kind) => isAddressableKind(kind)) && filter[\"#d\"]?.length ? filter.authors.length * filter.kinds.length * filter[\"#d\"].length : Infinity\n  );\n}\n\n// fakejson.ts\nvar fakejson_exports = {};\n__export(fakejson_exports, {\n  getHex64: () => getHex64,\n  getInt: () => getInt,\n  getSubscriptionId: () => getSubscriptionId,\n  matchEventId: () => matchEventId,\n  matchEventKind: () => matchEventKind,\n  matchEventPubkey: () => matchEventPubkey\n});\nfunction getHex64(json, field) {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\nfunction getInt(json, field) {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\nfunction getSubscriptionId(json) {\n  let idx = json.slice(0, 22).indexOf(`\"EVENT\"`);\n  if (idx === -1)\n    return null;\n  let pstart = json.slice(idx + 7 + 1).indexOf(`\"`);\n  if (pstart === -1)\n    return null;\n  let start = idx + 7 + 1 + pstart;\n  let pend = json.slice(start + 1, 80).indexOf(`\"`);\n  if (pend === -1)\n    return null;\n  let end = start + 1 + pend;\n  return json.slice(start + 1, end);\n}\nfunction matchEventId(json, id) {\n  return id === getHex64(json, \"id\");\n}\nfunction matchEventPubkey(json, pubkey) {\n  return pubkey === getHex64(json, \"pubkey\");\n}\nfunction matchEventKind(json, kind) {\n  return kind === getInt(json, \"kind\");\n}\n\n// nip42.ts\nvar nip42_exports = {};\n__export(nip42_exports, {\n  makeAuthEvent: () => makeAuthEvent\n});\nfunction makeAuthEvent(relayURL, challenge) {\n  return {\n    kind: ClientAuth,\n    created_at: Math.floor(Date.now() / 1e3),\n    tags: [\n      [\"relay\", relayURL],\n      [\"challenge\", challenge]\n    ],\n    content: \"\"\n  };\n}\n\n// helpers.ts\nasync function yieldThread() {\n  return new Promise((resolve) => {\n    const ch = new MessageChannel();\n    const handler = () => {\n      ch.port1.removeEventListener(\"message\", handler);\n      resolve();\n    };\n    ch.port1.addEventListener(\"message\", handler);\n    ch.port2.postMessage(0);\n    ch.port1.start();\n  });\n}\nvar alwaysTrue = (t) => {\n  t[verifiedSymbol] = true;\n  return true;\n};\n\n// abstract-relay.ts\nvar AbstractRelay = class {\n  url;\n  _connected = false;\n  onclose = null;\n  onnotice = (msg) => console.debug(`NOTICE from ${this.url}: ${msg}`);\n  _onauth = null;\n  baseEoseTimeout = 4400;\n  connectionTimeout = 4400;\n  publishTimeout = 4400;\n  openSubs = /* @__PURE__ */ new Map();\n  connectionTimeoutHandle;\n  connectionPromise;\n  openCountRequests = /* @__PURE__ */ new Map();\n  openEventPublishes = /* @__PURE__ */ new Map();\n  ws;\n  incomingMessageQueue = new Queue();\n  queueRunning = false;\n  challenge;\n  authPromise;\n  serial = 0;\n  verifyEvent;\n  _WebSocket;\n  constructor(url, opts) {\n    this.url = normalizeURL(url);\n    this.verifyEvent = opts.verifyEvent;\n    this._WebSocket = opts.websocketImplementation || WebSocket;\n  }\n  static async connect(url, opts) {\n    const relay = new AbstractRelay(url, opts);\n    await relay.connect();\n    return relay;\n  }\n  closeAllSubscriptions(reason) {\n    for (let [_, sub] of this.openSubs) {\n      sub.close(reason);\n    }\n    this.openSubs.clear();\n    for (let [_, ep] of this.openEventPublishes) {\n      ep.reject(new Error(reason));\n    }\n    this.openEventPublishes.clear();\n    for (let [_, cr] of this.openCountRequests) {\n      cr.reject(new Error(reason));\n    }\n    this.openCountRequests.clear();\n  }\n  get connected() {\n    return this._connected;\n  }\n  async connect() {\n    if (this.connectionPromise)\n      return this.connectionPromise;\n    this.challenge = void 0;\n    this.authPromise = void 0;\n    this.connectionPromise = new Promise((resolve, reject) => {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        reject(\"connection timed out\");\n        this.connectionPromise = void 0;\n        this.onclose?.();\n        this.closeAllSubscriptions(\"relay connection timed out\");\n      }, this.connectionTimeout);\n      try {\n        this.ws = new this._WebSocket(this.url);\n      } catch (err) {\n        clearTimeout(this.connectionTimeoutHandle);\n        reject(err);\n        return;\n      }\n      this.ws.onopen = () => {\n        clearTimeout(this.connectionTimeoutHandle);\n        this._connected = true;\n        resolve();\n      };\n      this.ws.onerror = (ev) => {\n        clearTimeout(this.connectionTimeoutHandle);\n        reject(ev.message || \"websocket error\");\n        if (this._connected) {\n          this._connected = false;\n          this.connectionPromise = void 0;\n          this.onclose?.();\n          this.closeAllSubscriptions(\"relay connection errored\");\n        }\n      };\n      this.ws.onclose = async () => {\n        if (this._connected) {\n          this._connected = false;\n          this.connectionPromise = void 0;\n          this.onclose?.();\n          this.closeAllSubscriptions(\"relay connection closed\");\n        }\n      };\n      this.ws.onmessage = this._onmessage.bind(this);\n    });\n    return this.connectionPromise;\n  }\n  async runQueue() {\n    this.queueRunning = true;\n    while (true) {\n      if (false === this.handleNext()) {\n        break;\n      }\n      await yieldThread();\n    }\n    this.queueRunning = false;\n  }\n  handleNext() {\n    const json = this.incomingMessageQueue.dequeue();\n    if (!json) {\n      return false;\n    }\n    const subid = getSubscriptionId(json);\n    if (subid) {\n      const so = this.openSubs.get(subid);\n      if (!so) {\n        return;\n      }\n      const id = getHex64(json, \"id\");\n      const alreadyHave = so.alreadyHaveEvent?.(id);\n      so.receivedEvent?.(this, id);\n      if (alreadyHave) {\n        return;\n      }\n    }\n    try {\n      let data = JSON.parse(json);\n      switch (data[0]) {\n        case \"EVENT\": {\n          const so = this.openSubs.get(data[1]);\n          const event = data[2];\n          if (this.verifyEvent(event) && matchFilters(so.filters, event)) {\n            so.onevent(event);\n          }\n          return;\n        }\n        case \"COUNT\": {\n          const id = data[1];\n          const payload = data[2];\n          const cr = this.openCountRequests.get(id);\n          if (cr) {\n            cr.resolve(payload.count);\n            this.openCountRequests.delete(id);\n          }\n          return;\n        }\n        case \"EOSE\": {\n          const so = this.openSubs.get(data[1]);\n          if (!so)\n            return;\n          so.receivedEose();\n          return;\n        }\n        case \"OK\": {\n          const id = data[1];\n          const ok = data[2];\n          const reason = data[3];\n          const ep = this.openEventPublishes.get(id);\n          if (ep) {\n            clearTimeout(ep.timeout);\n            if (ok)\n              ep.resolve(reason);\n            else\n              ep.reject(new Error(reason));\n            this.openEventPublishes.delete(id);\n          }\n          return;\n        }\n        case \"CLOSED\": {\n          const id = data[1];\n          const so = this.openSubs.get(id);\n          if (!so)\n            return;\n          so.closed = true;\n          so.close(data[2]);\n          return;\n        }\n        case \"NOTICE\":\n          this.onnotice(data[1]);\n          return;\n        case \"AUTH\": {\n          this.challenge = data[1];\n          this._onauth?.(data[1]);\n          return;\n        }\n      }\n    } catch (err) {\n      return;\n    }\n  }\n  async send(message) {\n    if (!this.connectionPromise)\n      throw new Error(\"sending on closed connection\");\n    this.connectionPromise.then(() => {\n      this.ws?.send(message);\n    });\n  }\n  async auth(signAuthEvent) {\n    const challenge = this.challenge;\n    if (!challenge)\n      throw new Error(\"can't perform auth, no challenge was received\");\n    if (this.authPromise)\n      return this.authPromise;\n    this.authPromise = new Promise(async (resolve, reject) => {\n      const evt = await signAuthEvent(makeAuthEvent(this.url, challenge));\n      const timeout = setTimeout(() => {\n        const ep = this.openEventPublishes.get(evt.id);\n        if (ep) {\n          ep.reject(new Error(\"auth timed out\"));\n          this.openEventPublishes.delete(evt.id);\n        }\n      }, this.publishTimeout);\n      this.openEventPublishes.set(evt.id, { resolve, reject, timeout });\n      this.send('[\"AUTH\",' + JSON.stringify(evt) + \"]\");\n    });\n    return this.authPromise;\n  }\n  async publish(event) {\n    const ret = new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        const ep = this.openEventPublishes.get(event.id);\n        if (ep) {\n          ep.reject(new Error(\"publish timed out\"));\n          this.openEventPublishes.delete(event.id);\n        }\n      }, this.publishTimeout);\n      this.openEventPublishes.set(event.id, { resolve, reject, timeout });\n    });\n    this.send('[\"EVENT\",' + JSON.stringify(event) + \"]\");\n    return ret;\n  }\n  async count(filters, params) {\n    this.serial++;\n    const id = params?.id || \"count:\" + this.serial;\n    const ret = new Promise((resolve, reject) => {\n      this.openCountRequests.set(id, { resolve, reject });\n    });\n    this.send('[\"COUNT\",\"' + id + '\",' + JSON.stringify(filters).substring(1));\n    return ret;\n  }\n  subscribe(filters, params) {\n    const subscription = this.prepareSubscription(filters, params);\n    subscription.fire();\n    return subscription;\n  }\n  prepareSubscription(filters, params) {\n    this.serial++;\n    const id = params.id || (params.label ? params.label + \":\" : \"sub:\") + this.serial;\n    const subscription = new Subscription(this, id, filters, params);\n    this.openSubs.set(id, subscription);\n    return subscription;\n  }\n  close() {\n    this.closeAllSubscriptions(\"relay connection closed by us\");\n    this._connected = false;\n    this.ws?.close();\n  }\n  _onmessage(ev) {\n    this.incomingMessageQueue.enqueue(ev.data);\n    if (!this.queueRunning) {\n      this.runQueue();\n    }\n  }\n};\nvar Subscription = class {\n  relay;\n  id;\n  closed = false;\n  eosed = false;\n  filters;\n  alreadyHaveEvent;\n  receivedEvent;\n  onevent;\n  oneose;\n  onclose;\n  eoseTimeout;\n  eoseTimeoutHandle;\n  constructor(relay, id, filters, params) {\n    this.relay = relay;\n    this.filters = filters;\n    this.id = id;\n    this.alreadyHaveEvent = params.alreadyHaveEvent;\n    this.receivedEvent = params.receivedEvent;\n    this.eoseTimeout = params.eoseTimeout || relay.baseEoseTimeout;\n    this.oneose = params.oneose;\n    this.onclose = params.onclose;\n    this.onevent = params.onevent || ((event) => {\n      console.warn(\n        `onevent() callback not defined for subscription '${this.id}' in relay ${this.relay.url}. event received:`,\n        event\n      );\n    });\n  }\n  fire() {\n    this.relay.send('[\"REQ\",\"' + this.id + '\",' + JSON.stringify(this.filters).substring(1));\n    this.eoseTimeoutHandle = setTimeout(this.receivedEose.bind(this), this.eoseTimeout);\n  }\n  receivedEose() {\n    if (this.eosed)\n      return;\n    clearTimeout(this.eoseTimeoutHandle);\n    this.eosed = true;\n    this.oneose?.();\n  }\n  close(reason = \"closed by caller\") {\n    if (!this.closed && this.relay.connected) {\n      this.relay.send('[\"CLOSE\",' + JSON.stringify(this.id) + \"]\");\n      this.closed = true;\n    }\n    this.relay.openSubs.delete(this.id);\n    this.onclose?.(reason);\n  }\n};\n\n// relay.ts\nvar _WebSocket;\ntry {\n  _WebSocket = WebSocket;\n} catch {\n}\nvar Relay = class extends AbstractRelay {\n  constructor(url) {\n    super(url, { verifyEvent, websocketImplementation: _WebSocket });\n  }\n  static async connect(url) {\n    const relay = new Relay(url);\n    await relay.connect();\n    return relay;\n  }\n};\n\n// abstract-pool.ts\nvar AbstractSimplePool = class {\n  relays = /* @__PURE__ */ new Map();\n  seenOn = /* @__PURE__ */ new Map();\n  trackRelays = false;\n  verifyEvent;\n  trustedRelayURLs = /* @__PURE__ */ new Set();\n  _WebSocket;\n  constructor(opts) {\n    this.verifyEvent = opts.verifyEvent;\n    this._WebSocket = opts.websocketImplementation;\n  }\n  async ensureRelay(url, params) {\n    url = normalizeURL(url);\n    let relay = this.relays.get(url);\n    if (!relay) {\n      relay = new AbstractRelay(url, {\n        verifyEvent: this.trustedRelayURLs.has(url) ? alwaysTrue : this.verifyEvent,\n        websocketImplementation: this._WebSocket\n      });\n      if (params?.connectionTimeout)\n        relay.connectionTimeout = params.connectionTimeout;\n      this.relays.set(url, relay);\n    }\n    await relay.connect();\n    return relay;\n  }\n  close(relays) {\n    relays.map(normalizeURL).forEach((url) => {\n      this.relays.get(url)?.close();\n    });\n  }\n  subscribe(relays, filter, params) {\n    return this.subscribeMap(\n      relays.map((url) => ({ url, filter })),\n      params\n    );\n  }\n  subscribeMany(relays, filters, params) {\n    return this.subscribeMap(\n      relays.flatMap((url) => filters.map((filter) => ({ url, filter }))),\n      params\n    );\n  }\n  subscribeMap(requests, params) {\n    if (this.trackRelays) {\n      params.receivedEvent = (relay, id) => {\n        let set = this.seenOn.get(id);\n        if (!set) {\n          set = /* @__PURE__ */ new Set();\n          this.seenOn.set(id, set);\n        }\n        set.add(relay);\n      };\n    }\n    const _knownIds = /* @__PURE__ */ new Set();\n    const subs = [];\n    const eosesReceived = [];\n    let handleEose = (i2) => {\n      if (eosesReceived[i2])\n        return;\n      eosesReceived[i2] = true;\n      if (eosesReceived.filter((a) => a).length === requests.length) {\n        params.oneose?.();\n        handleEose = () => {\n        };\n      }\n    };\n    const closesReceived = [];\n    let handleClose = (i2, reason) => {\n      if (closesReceived[i2])\n        return;\n      handleEose(i2);\n      closesReceived[i2] = reason;\n      if (closesReceived.filter((a) => a).length === requests.length) {\n        params.onclose?.(closesReceived);\n        handleClose = () => {\n        };\n      }\n    };\n    const localAlreadyHaveEventHandler = (id) => {\n      if (params.alreadyHaveEvent?.(id)) {\n        return true;\n      }\n      const have = _knownIds.has(id);\n      _knownIds.add(id);\n      return have;\n    };\n    const allOpened = Promise.all(\n      requests.map(async ({ url, filter }, i2) => {\n        url = normalizeURL(url);\n        let relay;\n        try {\n          relay = await this.ensureRelay(url, {\n            connectionTimeout: params.maxWait ? Math.max(params.maxWait * 0.8, params.maxWait - 1e3) : void 0\n          });\n        } catch (err) {\n          handleClose(i2, err?.message || String(err));\n          return;\n        }\n        let subscription = relay.subscribe([filter], {\n          ...params,\n          oneose: () => handleEose(i2),\n          onclose: (reason) => {\n            if (reason.startsWith(\"auth-required:\") && params.doauth) {\n              relay.auth(params.doauth).then(() => {\n                relay.subscribe([filter], {\n                  ...params,\n                  oneose: () => handleEose(i2),\n                  onclose: (reason2) => {\n                    handleClose(i2, reason2);\n                  },\n                  alreadyHaveEvent: localAlreadyHaveEventHandler,\n                  eoseTimeout: params.maxWait\n                });\n              }).catch((err) => {\n                handleClose(i2, `auth was required and attempted, but failed with: ${err}`);\n              });\n            } else {\n              handleClose(i2, reason);\n            }\n          },\n          alreadyHaveEvent: localAlreadyHaveEventHandler,\n          eoseTimeout: params.maxWait\n        });\n        subs.push(subscription);\n      })\n    );\n    return {\n      async close() {\n        await allOpened;\n        subs.forEach((sub) => {\n          sub.close();\n        });\n      }\n    };\n  }\n  subscribeManyMap(requests, params) {\n    if (this.trackRelays) {\n      params.receivedEvent = (relay, id) => {\n        let set = this.seenOn.get(id);\n        if (!set) {\n          set = /* @__PURE__ */ new Set();\n          this.seenOn.set(id, set);\n        }\n        set.add(relay);\n      };\n    }\n    const _knownIds = /* @__PURE__ */ new Set();\n    const subs = [];\n    const relaysLength = Object.keys(requests).length;\n    const eosesReceived = [];\n    let handleEose = (i2) => {\n      if (eosesReceived[i2])\n        return;\n      eosesReceived[i2] = true;\n      if (eosesReceived.filter((a) => a).length === relaysLength) {\n        params.oneose?.();\n        handleEose = () => {\n        };\n      }\n    };\n    const closesReceived = [];\n    let handleClose = (i2, reason) => {\n      if (closesReceived[i2])\n        return;\n      handleEose(i2);\n      closesReceived[i2] = reason;\n      if (closesReceived.filter((a) => a).length === relaysLength) {\n        params.onclose?.(closesReceived);\n        handleClose = () => {\n        };\n      }\n    };\n    const localAlreadyHaveEventHandler = (id) => {\n      if (params.alreadyHaveEvent?.(id)) {\n        return true;\n      }\n      const have = _knownIds.has(id);\n      _knownIds.add(id);\n      return have;\n    };\n    const allOpened = Promise.all(\n      Object.entries(requests).map(async (req, i2, arr) => {\n        if (arr.indexOf(req) !== i2) {\n          handleClose(i2, \"duplicate url\");\n          return;\n        }\n        let [url, filters] = req;\n        url = normalizeURL(url);\n        let relay;\n        try {\n          relay = await this.ensureRelay(url, {\n            connectionTimeout: params.maxWait ? Math.max(params.maxWait * 0.8, params.maxWait - 1e3) : void 0\n          });\n        } catch (err) {\n          handleClose(i2, err?.message || String(err));\n          return;\n        }\n        let subscription = relay.subscribe(filters, {\n          ...params,\n          oneose: () => handleEose(i2),\n          onclose: (reason) => {\n            if (reason.startsWith(\"auth-required:\") && params.doauth) {\n              relay.auth(params.doauth).then(() => {\n                relay.subscribe(filters, {\n                  ...params,\n                  oneose: () => handleEose(i2),\n                  onclose: (reason2) => {\n                    handleClose(i2, reason2);\n                  },\n                  alreadyHaveEvent: localAlreadyHaveEventHandler,\n                  eoseTimeout: params.maxWait\n                });\n              }).catch((err) => {\n                handleClose(i2, `auth was required and attempted, but failed with: ${err}`);\n              });\n            } else {\n              handleClose(i2, reason);\n            }\n          },\n          alreadyHaveEvent: localAlreadyHaveEventHandler,\n          eoseTimeout: params.maxWait\n        });\n        subs.push(subscription);\n      })\n    );\n    return {\n      async close() {\n        await allOpened;\n        subs.forEach((sub) => {\n          sub.close();\n        });\n      }\n    };\n  }\n  subscribeEose(relays, filter, params) {\n    const subcloser = this.subscribe(relays, filter, {\n      ...params,\n      oneose() {\n        subcloser.close();\n      }\n    });\n    return subcloser;\n  }\n  subscribeManyEose(relays, filters, params) {\n    const subcloser = this.subscribeMany(relays, filters, {\n      ...params,\n      oneose() {\n        subcloser.close();\n      }\n    });\n    return subcloser;\n  }\n  async querySync(relays, filter, params) {\n    return new Promise(async (resolve) => {\n      const events = [];\n      this.subscribeEose(relays, filter, {\n        ...params,\n        onevent(event) {\n          events.push(event);\n        },\n        onclose(_) {\n          resolve(events);\n        }\n      });\n    });\n  }\n  async get(relays, filter, params) {\n    filter.limit = 1;\n    const events = await this.querySync(relays, filter, params);\n    events.sort((a, b) => b.created_at - a.created_at);\n    return events[0] || null;\n  }\n  publish(relays, event) {\n    return relays.map(normalizeURL).map(async (url, i2, arr) => {\n      if (arr.indexOf(url) !== i2) {\n        return Promise.reject(\"duplicate url\");\n      }\n      let r = await this.ensureRelay(url);\n      return r.publish(event).then((reason) => {\n        if (this.trackRelays) {\n          let set = this.seenOn.get(event.id);\n          if (!set) {\n            set = /* @__PURE__ */ new Set();\n            this.seenOn.set(event.id, set);\n          }\n          set.add(r);\n        }\n        return reason;\n      });\n    });\n  }\n  listConnectionStatus() {\n    const map = /* @__PURE__ */ new Map();\n    this.relays.forEach((relay, url) => map.set(url, relay.connected));\n    return map;\n  }\n  destroy() {\n    this.relays.forEach((conn) => conn.close());\n    this.relays = /* @__PURE__ */ new Map();\n  }\n};\n\n// pool.ts\nvar _WebSocket2;\ntry {\n  _WebSocket2 = WebSocket;\n} catch {\n}\nvar SimplePool = class extends AbstractSimplePool {\n  constructor() {\n    super({ verifyEvent, websocketImplementation: _WebSocket2 });\n  }\n};\n\n// nip19.ts\nvar nip19_exports = {};\n__export(nip19_exports, {\n  BECH32_REGEX: () => BECH32_REGEX,\n  Bech32MaxSize: () => Bech32MaxSize,\n  NostrTypeGuard: () => NostrTypeGuard,\n  decode: () => decode,\n  decodeNostrURI: () => decodeNostrURI,\n  encodeBytes: () => encodeBytes,\n  naddrEncode: () => naddrEncode,\n  neventEncode: () => neventEncode,\n  noteEncode: () => noteEncode,\n  nprofileEncode: () => nprofileEncode,\n  npubEncode: () => npubEncode,\n  nsecEncode: () => nsecEncode\n});\nimport { bytesToHex as bytesToHex2, concatBytes, hexToBytes } from \"@noble/hashes/utils\";\nimport { bech32 } from \"@scure/base\";\nvar NostrTypeGuard = {\n  isNProfile: (value) => /^nprofile1[a-z\\d]+$/.test(value || \"\"),\n  isNEvent: (value) => /^nevent1[a-z\\d]+$/.test(value || \"\"),\n  isNAddr: (value) => /^naddr1[a-z\\d]+$/.test(value || \"\"),\n  isNSec: (value) => /^nsec1[a-z\\d]{58}$/.test(value || \"\"),\n  isNPub: (value) => /^npub1[a-z\\d]{58}$/.test(value || \"\"),\n  isNote: (value) => /^note1[a-z\\d]+$/.test(value || \"\"),\n  isNcryptsec: (value) => /^ncryptsec1[a-z\\d]+$/.test(value || \"\")\n};\nvar Bech32MaxSize = 5e3;\nvar BECH32_REGEX = /[\\x21-\\x7E]{1,83}1[023456789acdefghjklmnpqrstuvwxyz]{6,}/;\nfunction integerToUint8Array(number) {\n  const uint8Array = new Uint8Array(4);\n  uint8Array[0] = number >> 24 & 255;\n  uint8Array[1] = number >> 16 & 255;\n  uint8Array[2] = number >> 8 & 255;\n  uint8Array[3] = number & 255;\n  return uint8Array;\n}\nfunction decodeNostrURI(nip19code) {\n  try {\n    if (nip19code.startsWith(\"nostr:\"))\n      nip19code = nip19code.substring(6);\n    return decode(nip19code);\n  } catch (_err) {\n    return { type: \"invalid\", data: null };\n  }\n}\nfunction decode(code) {\n  let { prefix, words } = bech32.decode(code, Bech32MaxSize);\n  let data = new Uint8Array(bech32.fromWords(words));\n  switch (prefix) {\n    case \"nprofile\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nprofile\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      return {\n        type: \"nprofile\",\n        data: {\n          pubkey: bytesToHex2(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nevent\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nevent\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      if (tlv[2] && tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (tlv[3] && tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"nevent\",\n        data: {\n          id: bytesToHex2(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : [],\n          author: tlv[2]?.[0] ? bytesToHex2(tlv[2][0]) : void 0,\n          kind: tlv[3]?.[0] ? parseInt(bytesToHex2(tlv[3][0]), 16) : void 0\n        }\n      };\n    }\n    case \"naddr\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for naddr\");\n      if (!tlv[2]?.[0])\n        throw new Error(\"missing TLV 2 for naddr\");\n      if (tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (!tlv[3]?.[0])\n        throw new Error(\"missing TLV 3 for naddr\");\n      if (tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"naddr\",\n        data: {\n          identifier: utf8Decoder.decode(tlv[0][0]),\n          pubkey: bytesToHex2(tlv[2][0]),\n          kind: parseInt(bytesToHex2(tlv[3][0]), 16),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nsec\":\n      return { type: prefix, data };\n    case \"npub\":\n    case \"note\":\n      return { type: prefix, data: bytesToHex2(data) };\n    default:\n      throw new Error(`unknown prefix ${prefix}`);\n  }\n}\nfunction parseTLV(data) {\n  let result = {};\n  let rest = data;\n  while (rest.length > 0) {\n    let t = rest[0];\n    let l = rest[1];\n    let v = rest.slice(2, 2 + l);\n    rest = rest.slice(2 + l);\n    if (v.length < l)\n      throw new Error(`not enough data to read on TLV ${t}`);\n    result[t] = result[t] || [];\n    result[t].push(v);\n  }\n  return result;\n}\nfunction nsecEncode(key) {\n  return encodeBytes(\"nsec\", key);\n}\nfunction npubEncode(hex) {\n  return encodeBytes(\"npub\", hexToBytes(hex));\n}\nfunction noteEncode(hex) {\n  return encodeBytes(\"note\", hexToBytes(hex));\n}\nfunction encodeBech32(prefix, data) {\n  let words = bech32.toWords(data);\n  return bech32.encode(prefix, words, Bech32MaxSize);\n}\nfunction encodeBytes(prefix, bytes) {\n  return encodeBech32(prefix, bytes);\n}\nfunction nprofileEncode(profile) {\n  let data = encodeTLV({\n    0: [hexToBytes(profile.pubkey)],\n    1: (profile.relays || []).map((url) => utf8Encoder.encode(url))\n  });\n  return encodeBech32(\"nprofile\", data);\n}\nfunction neventEncode(event) {\n  let kindArray;\n  if (event.kind !== void 0) {\n    kindArray = integerToUint8Array(event.kind);\n  }\n  let data = encodeTLV({\n    0: [hexToBytes(event.id)],\n    1: (event.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: event.author ? [hexToBytes(event.author)] : [],\n    3: kindArray ? [new Uint8Array(kindArray)] : []\n  });\n  return encodeBech32(\"nevent\", data);\n}\nfunction naddrEncode(addr) {\n  let kind = new ArrayBuffer(4);\n  new DataView(kind).setUint32(0, addr.kind, false);\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(addr.identifier)],\n    1: (addr.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: [hexToBytes(addr.pubkey)],\n    3: [new Uint8Array(kind)]\n  });\n  return encodeBech32(\"naddr\", data);\n}\nfunction encodeTLV(tlv) {\n  let entries = [];\n  Object.entries(tlv).reverse().forEach(([t, vs]) => {\n    vs.forEach((v) => {\n      let entry = new Uint8Array(v.length + 2);\n      entry.set([parseInt(t)], 0);\n      entry.set([v.length], 1);\n      entry.set(v, 2);\n      entries.push(entry);\n    });\n  });\n  return concatBytes(...entries);\n}\n\n// references.ts\nvar mentionRegex = /\\bnostr:((note|npub|naddr|nevent|nprofile)1\\w+)\\b|#\\[(\\d+)\\]/g;\nfunction parseReferences(evt) {\n  let references = [];\n  for (let ref of evt.content.matchAll(mentionRegex)) {\n    if (ref[2]) {\n      try {\n        let { type, data } = decode(ref[1]);\n        switch (type) {\n          case \"npub\": {\n            references.push({\n              text: ref[0],\n              profile: { pubkey: data, relays: [] }\n            });\n            break;\n          }\n          case \"nprofile\": {\n            references.push({\n              text: ref[0],\n              profile: data\n            });\n            break;\n          }\n          case \"note\": {\n            references.push({\n              text: ref[0],\n              event: { id: data, relays: [] }\n            });\n            break;\n          }\n          case \"nevent\": {\n            references.push({\n              text: ref[0],\n              event: data\n            });\n            break;\n          }\n          case \"naddr\": {\n            references.push({\n              text: ref[0],\n              address: data\n            });\n            break;\n          }\n        }\n      } catch (err) {\n      }\n    } else if (ref[3]) {\n      let idx = parseInt(ref[3], 10);\n      let tag = evt.tags[idx];\n      if (!tag)\n        continue;\n      switch (tag[0]) {\n        case \"p\": {\n          references.push({\n            text: ref[0],\n            profile: { pubkey: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"e\": {\n          references.push({\n            text: ref[0],\n            event: { id: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"a\": {\n          try {\n            let [kind, pubkey, identifier] = tag[1].split(\":\");\n            references.push({\n              text: ref[0],\n              address: {\n                identifier,\n                pubkey,\n                kind: parseInt(kind, 10),\n                relays: tag[2] ? [tag[2]] : []\n              }\n            });\n          } catch (err) {\n          }\n          break;\n        }\n      }\n    }\n  }\n  return references;\n}\n\n// nip04.ts\nvar nip04_exports = {};\n__export(nip04_exports, {\n  decrypt: () => decrypt,\n  encrypt: () => encrypt\n});\nimport { bytesToHex as bytesToHex3, randomBytes } from \"@noble/hashes/utils\";\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\nimport { cbc } from \"@noble/ciphers/aes\";\nimport { base64 } from \"@scure/base\";\nfunction encrypt(secretKey, pubkey, text) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex3(secretKey) : secretKey;\n  const key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  const normalizedKey = getNormalizedX(key);\n  let iv = Uint8Array.from(randomBytes(16));\n  let plaintext = utf8Encoder.encode(text);\n  let ciphertext = cbc(normalizedKey, iv).encrypt(plaintext);\n  let ctb64 = base64.encode(new Uint8Array(ciphertext));\n  let ivb64 = base64.encode(new Uint8Array(iv.buffer));\n  return `${ctb64}?iv=${ivb64}`;\n}\nfunction decrypt(secretKey, pubkey, data) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex3(secretKey) : secretKey;\n  let [ctb64, ivb64] = data.split(\"?iv=\");\n  let key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  let normalizedKey = getNormalizedX(key);\n  let iv = base64.decode(ivb64);\n  let ciphertext = base64.decode(ctb64);\n  let plaintext = cbc(normalizedKey, iv).decrypt(ciphertext);\n  return utf8Decoder.decode(plaintext);\n}\nfunction getNormalizedX(key) {\n  return key.slice(1, 33);\n}\n\n// nip05.ts\nvar nip05_exports = {};\n__export(nip05_exports, {\n  NIP05_REGEX: () => NIP05_REGEX,\n  isNip05: () => isNip05,\n  isValid: () => isValid,\n  queryProfile: () => queryProfile,\n  searchDomain: () => searchDomain,\n  useFetchImplementation: () => useFetchImplementation\n});\nvar NIP05_REGEX = /^(?:([\\w.+-]+)@)?([\\w_-]+(\\.[\\w_-]+)+)$/;\nvar isNip05 = (value) => NIP05_REGEX.test(value || \"\");\nvar _fetch;\ntry {\n  _fetch = fetch;\n} catch (_) {\n  null;\n}\nfunction useFetchImplementation(fetchImplementation) {\n  _fetch = fetchImplementation;\n}\nasync function searchDomain(domain, query = \"\") {\n  try {\n    const url = `https://${domain}/.well-known/nostr.json?name=${query}`;\n    const res = await _fetch(url, { redirect: \"manual\" });\n    if (res.status !== 200) {\n      throw Error(\"Wrong response code\");\n    }\n    const json = await res.json();\n    return json.names;\n  } catch (_) {\n    return {};\n  }\n}\nasync function queryProfile(fullname) {\n  const match = fullname.match(NIP05_REGEX);\n  if (!match)\n    return null;\n  const [, name = \"_\", domain] = match;\n  try {\n    const url = `https://${domain}/.well-known/nostr.json?name=${name}`;\n    const res = await _fetch(url, { redirect: \"manual\" });\n    if (res.status !== 200) {\n      throw Error(\"Wrong response code\");\n    }\n    const json = await res.json();\n    const pubkey = json.names[name];\n    return pubkey ? { pubkey, relays: json.relays?.[pubkey] } : null;\n  } catch (_e) {\n    return null;\n  }\n}\nasync function isValid(pubkey, nip05) {\n  const res = await queryProfile(nip05);\n  return res ? res.pubkey === pubkey : false;\n}\n\n// nip10.ts\nvar nip10_exports = {};\n__export(nip10_exports, {\n  parse: () => parse\n});\nfunction parse(event) {\n  const result = {\n    reply: void 0,\n    root: void 0,\n    mentions: [],\n    profiles: [],\n    quotes: []\n  };\n  let maybeParent;\n  let maybeRoot;\n  for (let i2 = event.tags.length - 1; i2 >= 0; i2--) {\n    const tag = event.tags[i2];\n    if (tag[0] === \"e\" && tag[1]) {\n      const [_, eTagEventId, eTagRelayUrl, eTagMarker, eTagAuthor] = tag;\n      const eventPointer = {\n        id: eTagEventId,\n        relays: eTagRelayUrl ? [eTagRelayUrl] : [],\n        author: eTagAuthor\n      };\n      if (eTagMarker === \"root\") {\n        result.root = eventPointer;\n        continue;\n      }\n      if (eTagMarker === \"reply\") {\n        result.reply = eventPointer;\n        continue;\n      }\n      if (eTagMarker === \"mention\") {\n        result.mentions.push(eventPointer);\n        continue;\n      }\n      if (!maybeParent) {\n        maybeParent = eventPointer;\n      } else {\n        maybeRoot = eventPointer;\n      }\n      result.mentions.push(eventPointer);\n      continue;\n    }\n    if (tag[0] === \"q\" && tag[1]) {\n      const [_, eTagEventId, eTagRelayUrl] = tag;\n      result.quotes.push({\n        id: eTagEventId,\n        relays: eTagRelayUrl ? [eTagRelayUrl] : []\n      });\n    }\n    if (tag[0] === \"p\" && tag[1]) {\n      result.profiles.push({\n        pubkey: tag[1],\n        relays: tag[2] ? [tag[2]] : []\n      });\n      continue;\n    }\n  }\n  if (!result.root) {\n    result.root = maybeRoot || maybeParent || result.reply;\n  }\n  if (!result.reply) {\n    result.reply = maybeParent || result.root;\n  }\n  ;\n  [result.reply, result.root].forEach((ref) => {\n    if (!ref)\n      return;\n    let idx = result.mentions.indexOf(ref);\n    if (idx !== -1) {\n      result.mentions.splice(idx, 1);\n    }\n    if (ref.author) {\n      let author = result.profiles.find((p) => p.pubkey === ref.author);\n      if (author && author.relays) {\n        if (!ref.relays) {\n          ref.relays = [];\n        }\n        author.relays.forEach((url) => {\n          if (ref.relays?.indexOf(url) === -1)\n            ref.relays.push(url);\n        });\n        author.relays = ref.relays;\n      }\n    }\n  });\n  result.mentions.forEach((ref) => {\n    if (ref.author) {\n      let author = result.profiles.find((p) => p.pubkey === ref.author);\n      if (author && author.relays) {\n        if (!ref.relays) {\n          ref.relays = [];\n        }\n        author.relays.forEach((url) => {\n          if (ref.relays.indexOf(url) === -1)\n            ref.relays.push(url);\n        });\n        author.relays = ref.relays;\n      }\n    }\n  });\n  return result;\n}\n\n// nip11.ts\nvar nip11_exports = {};\n__export(nip11_exports, {\n  fetchRelayInformation: () => fetchRelayInformation,\n  useFetchImplementation: () => useFetchImplementation2\n});\nvar _fetch2;\ntry {\n  _fetch2 = fetch;\n} catch {\n}\nfunction useFetchImplementation2(fetchImplementation) {\n  _fetch2 = fetchImplementation;\n}\nasync function fetchRelayInformation(url) {\n  return await (await fetch(url.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\"), {\n    headers: { Accept: \"application/nostr+json\" }\n  })).json();\n}\n\n// nip13.ts\nvar nip13_exports = {};\n__export(nip13_exports, {\n  fastEventHash: () => fastEventHash,\n  getPow: () => getPow,\n  minePow: () => minePow\n});\nimport { bytesToHex as bytesToHex4 } from \"@noble/hashes/utils\";\nimport { sha256 as sha2562 } from \"@noble/hashes/sha256\";\nfunction getPow(hex) {\n  let count = 0;\n  for (let i2 = 0; i2 < 64; i2 += 8) {\n    const nibble = parseInt(hex.substring(i2, i2 + 8), 16);\n    if (nibble === 0) {\n      count += 32;\n    } else {\n      count += Math.clz32(nibble);\n      break;\n    }\n  }\n  return count;\n}\nfunction minePow(unsigned, difficulty) {\n  let count = 0;\n  const event = unsigned;\n  const tag = [\"nonce\", count.toString(), difficulty.toString()];\n  event.tags.push(tag);\n  while (true) {\n    const now2 = Math.floor(new Date().getTime() / 1e3);\n    if (now2 !== event.created_at) {\n      count = 0;\n      event.created_at = now2;\n    }\n    tag[1] = (++count).toString();\n    event.id = fastEventHash(event);\n    if (getPow(event.id) >= difficulty) {\n      break;\n    }\n  }\n  return event;\n}\nfunction fastEventHash(evt) {\n  return bytesToHex4(\n    sha2562(utf8Encoder.encode(JSON.stringify([0, evt.pubkey, evt.created_at, evt.kind, evt.tags, evt.content])))\n  );\n}\n\n// nip17.ts\nvar nip17_exports = {};\n__export(nip17_exports, {\n  unwrapEvent: () => unwrapEvent2,\n  unwrapManyEvents: () => unwrapManyEvents2,\n  wrapEvent: () => wrapEvent2,\n  wrapManyEvents: () => wrapManyEvents2\n});\n\n// nip59.ts\nvar nip59_exports = {};\n__export(nip59_exports, {\n  createRumor: () => createRumor,\n  createSeal: () => createSeal,\n  createWrap: () => createWrap,\n  unwrapEvent: () => unwrapEvent,\n  unwrapManyEvents: () => unwrapManyEvents,\n  wrapEvent: () => wrapEvent,\n  wrapManyEvents: () => wrapManyEvents\n});\n\n// nip44.ts\nvar nip44_exports = {};\n__export(nip44_exports, {\n  decrypt: () => decrypt2,\n  encrypt: () => encrypt2,\n  getConversationKey: () => getConversationKey,\n  v2: () => v2\n});\nimport { chacha20 } from \"@noble/ciphers/chacha\";\nimport { equalBytes } from \"@noble/ciphers/utils\";\nimport { secp256k1 as secp256k12 } from \"@noble/curves/secp256k1\";\nimport { extract as hkdf_extract, expand as hkdf_expand } from \"@noble/hashes/hkdf\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha256 as sha2563 } from \"@noble/hashes/sha256\";\nimport { concatBytes as concatBytes2, randomBytes as randomBytes2 } from \"@noble/hashes/utils\";\nimport { base64 as base642 } from \"@scure/base\";\nvar minPlaintextSize = 1;\nvar maxPlaintextSize = 65535;\nfunction getConversationKey(privkeyA, pubkeyB) {\n  const sharedX = secp256k12.getSharedSecret(privkeyA, \"02\" + pubkeyB).subarray(1, 33);\n  return hkdf_extract(sha2563, sharedX, \"nip44-v2\");\n}\nfunction getMessageKeys(conversationKey, nonce) {\n  const keys = hkdf_expand(sha2563, conversationKey, nonce, 76);\n  return {\n    chacha_key: keys.subarray(0, 32),\n    chacha_nonce: keys.subarray(32, 44),\n    hmac_key: keys.subarray(44, 76)\n  };\n}\nfunction calcPaddedLen(len) {\n  if (!Number.isSafeInteger(len) || len < 1)\n    throw new Error(\"expected positive integer\");\n  if (len <= 32)\n    return 32;\n  const nextPower = 1 << Math.floor(Math.log2(len - 1)) + 1;\n  const chunk = nextPower <= 256 ? 32 : nextPower / 8;\n  return chunk * (Math.floor((len - 1) / chunk) + 1);\n}\nfunction writeU16BE(num) {\n  if (!Number.isSafeInteger(num) || num < minPlaintextSize || num > maxPlaintextSize)\n    throw new Error(\"invalid plaintext size: must be between 1 and 65535 bytes\");\n  const arr = new Uint8Array(2);\n  new DataView(arr.buffer).setUint16(0, num, false);\n  return arr;\n}\nfunction pad(plaintext) {\n  const unpadded = utf8Encoder.encode(plaintext);\n  const unpaddedLen = unpadded.length;\n  const prefix = writeU16BE(unpaddedLen);\n  const suffix = new Uint8Array(calcPaddedLen(unpaddedLen) - unpaddedLen);\n  return concatBytes2(prefix, unpadded, suffix);\n}\nfunction unpad(padded) {\n  const unpaddedLen = new DataView(padded.buffer).getUint16(0);\n  const unpadded = padded.subarray(2, 2 + unpaddedLen);\n  if (unpaddedLen < minPlaintextSize || unpaddedLen > maxPlaintextSize || unpadded.length !== unpaddedLen || padded.length !== 2 + calcPaddedLen(unpaddedLen))\n    throw new Error(\"invalid padding\");\n  return utf8Decoder.decode(unpadded);\n}\nfunction hmacAad(key, message, aad) {\n  if (aad.length !== 32)\n    throw new Error(\"AAD associated data must be 32 bytes\");\n  const combined = concatBytes2(aad, message);\n  return hmac(sha2563, key, combined);\n}\nfunction decodePayload(payload) {\n  if (typeof payload !== \"string\")\n    throw new Error(\"payload must be a valid string\");\n  const plen = payload.length;\n  if (plen < 132 || plen > 87472)\n    throw new Error(\"invalid payload length: \" + plen);\n  if (payload[0] === \"#\")\n    throw new Error(\"unknown encryption version\");\n  let data;\n  try {\n    data = base642.decode(payload);\n  } catch (error) {\n    throw new Error(\"invalid base64: \" + error.message);\n  }\n  const dlen = data.length;\n  if (dlen < 99 || dlen > 65603)\n    throw new Error(\"invalid data length: \" + dlen);\n  const vers = data[0];\n  if (vers !== 2)\n    throw new Error(\"unknown encryption version \" + vers);\n  return {\n    nonce: data.subarray(1, 33),\n    ciphertext: data.subarray(33, -32),\n    mac: data.subarray(-32)\n  };\n}\nfunction encrypt2(plaintext, conversationKey, nonce = randomBytes2(32)) {\n  const { chacha_key, chacha_nonce, hmac_key } = getMessageKeys(conversationKey, nonce);\n  const padded = pad(plaintext);\n  const ciphertext = chacha20(chacha_key, chacha_nonce, padded);\n  const mac = hmacAad(hmac_key, ciphertext, nonce);\n  return base642.encode(concatBytes2(new Uint8Array([2]), nonce, ciphertext, mac));\n}\nfunction decrypt2(payload, conversationKey) {\n  const { nonce, ciphertext, mac } = decodePayload(payload);\n  const { chacha_key, chacha_nonce, hmac_key } = getMessageKeys(conversationKey, nonce);\n  const calculatedMac = hmacAad(hmac_key, ciphertext, nonce);\n  if (!equalBytes(calculatedMac, mac))\n    throw new Error(\"invalid MAC\");\n  const padded = chacha20(chacha_key, chacha_nonce, ciphertext);\n  return unpad(padded);\n}\nvar v2 = {\n  utils: {\n    getConversationKey,\n    calcPaddedLen\n  },\n  encrypt: encrypt2,\n  decrypt: decrypt2\n};\n\n// nip59.ts\nvar TWO_DAYS = 2 * 24 * 60 * 60;\nvar now = () => Math.round(Date.now() / 1e3);\nvar randomNow = () => Math.round(now() - Math.random() * TWO_DAYS);\nvar nip44ConversationKey = (privateKey, publicKey) => getConversationKey(privateKey, publicKey);\nvar nip44Encrypt = (data, privateKey, publicKey) => encrypt2(JSON.stringify(data), nip44ConversationKey(privateKey, publicKey));\nvar nip44Decrypt = (data, privateKey) => JSON.parse(decrypt2(data.content, nip44ConversationKey(privateKey, data.pubkey)));\nfunction createRumor(event, privateKey) {\n  const rumor = {\n    created_at: now(),\n    content: \"\",\n    tags: [],\n    ...event,\n    pubkey: getPublicKey(privateKey)\n  };\n  rumor.id = getEventHash(rumor);\n  return rumor;\n}\nfunction createSeal(rumor, privateKey, recipientPublicKey) {\n  return finalizeEvent(\n    {\n      kind: Seal,\n      content: nip44Encrypt(rumor, privateKey, recipientPublicKey),\n      created_at: randomNow(),\n      tags: []\n    },\n    privateKey\n  );\n}\nfunction createWrap(seal, recipientPublicKey) {\n  const randomKey = generateSecretKey();\n  return finalizeEvent(\n    {\n      kind: GiftWrap,\n      content: nip44Encrypt(seal, randomKey, recipientPublicKey),\n      created_at: randomNow(),\n      tags: [[\"p\", recipientPublicKey]]\n    },\n    randomKey\n  );\n}\nfunction wrapEvent(event, senderPrivateKey, recipientPublicKey) {\n  const rumor = createRumor(event, senderPrivateKey);\n  const seal = createSeal(rumor, senderPrivateKey, recipientPublicKey);\n  return createWrap(seal, recipientPublicKey);\n}\nfunction wrapManyEvents(event, senderPrivateKey, recipientsPublicKeys) {\n  if (!recipientsPublicKeys || recipientsPublicKeys.length === 0) {\n    throw new Error(\"At least one recipient is required.\");\n  }\n  const senderPublicKey = getPublicKey(senderPrivateKey);\n  const wrappeds = [wrapEvent(event, senderPrivateKey, senderPublicKey)];\n  recipientsPublicKeys.forEach((recipientPublicKey) => {\n    wrappeds.push(wrapEvent(event, senderPrivateKey, recipientPublicKey));\n  });\n  return wrappeds;\n}\nfunction unwrapEvent(wrap, recipientPrivateKey) {\n  const unwrappedSeal = nip44Decrypt(wrap, recipientPrivateKey);\n  return nip44Decrypt(unwrappedSeal, recipientPrivateKey);\n}\nfunction unwrapManyEvents(wrappedEvents, recipientPrivateKey) {\n  let unwrappedEvents = [];\n  wrappedEvents.forEach((e) => {\n    unwrappedEvents.push(unwrapEvent(e, recipientPrivateKey));\n  });\n  unwrappedEvents.sort((a, b) => a.created_at - b.created_at);\n  return unwrappedEvents;\n}\n\n// nip17.ts\nfunction createEvent(recipients, message, conversationTitle, replyTo) {\n  const baseEvent = {\n    created_at: Math.ceil(Date.now() / 1e3),\n    kind: PrivateDirectMessage,\n    tags: [],\n    content: message\n  };\n  const recipientsArray = Array.isArray(recipients) ? recipients : [recipients];\n  recipientsArray.forEach(({ publicKey, relayUrl }) => {\n    baseEvent.tags.push(relayUrl ? [\"p\", publicKey, relayUrl] : [\"p\", publicKey]);\n  });\n  if (replyTo) {\n    baseEvent.tags.push([\"e\", replyTo.eventId, replyTo.relayUrl || \"\", \"reply\"]);\n  }\n  if (conversationTitle) {\n    baseEvent.tags.push([\"subject\", conversationTitle]);\n  }\n  return baseEvent;\n}\nfunction wrapEvent2(senderPrivateKey, recipient, message, conversationTitle, replyTo) {\n  const event = createEvent(recipient, message, conversationTitle, replyTo);\n  return wrapEvent(event, senderPrivateKey, recipient.publicKey);\n}\nfunction wrapManyEvents2(senderPrivateKey, recipients, message, conversationTitle, replyTo) {\n  if (!recipients || recipients.length === 0) {\n    throw new Error(\"At least one recipient is required.\");\n  }\n  const senderPublicKey = getPublicKey(senderPrivateKey);\n  return [{ publicKey: senderPublicKey }, ...recipients].map(\n    (recipient) => wrapEvent2(senderPrivateKey, recipient, message, conversationTitle, replyTo)\n  );\n}\nvar unwrapEvent2 = unwrapEvent;\nvar unwrapManyEvents2 = unwrapManyEvents;\n\n// nip18.ts\nvar nip18_exports = {};\n__export(nip18_exports, {\n  finishRepostEvent: () => finishRepostEvent,\n  getRepostedEvent: () => getRepostedEvent,\n  getRepostedEventPointer: () => getRepostedEventPointer\n});\nfunction finishRepostEvent(t, reposted, relayUrl, privateKey) {\n  let kind;\n  const tags = [...t.tags ?? [], [\"e\", reposted.id, relayUrl], [\"p\", reposted.pubkey]];\n  if (reposted.kind === ShortTextNote) {\n    kind = Repost;\n  } else {\n    kind = GenericRepost;\n    tags.push([\"k\", String(reposted.kind)]);\n  }\n  return finalizeEvent(\n    {\n      kind,\n      tags,\n      content: t.content === \"\" || reposted.tags?.find((tag) => tag[0] === \"-\") ? \"\" : JSON.stringify(reposted),\n      created_at: t.created_at\n    },\n    privateKey\n  );\n}\nfunction getRepostedEventPointer(event) {\n  if (![Repost, GenericRepost].includes(event.kind)) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag?.[2]].filter((x) => typeof x === \"string\"),\n    author: lastPTag?.[1]\n  };\n}\nfunction getRepostedEvent(event, { skipVerification } = {}) {\n  const pointer = getRepostedEventPointer(event);\n  if (pointer === void 0 || event.content === \"\") {\n    return void 0;\n  }\n  let repostedEvent;\n  try {\n    repostedEvent = JSON.parse(event.content);\n  } catch (error) {\n    return void 0;\n  }\n  if (repostedEvent.id !== pointer.id) {\n    return void 0;\n  }\n  if (!skipVerification && !verifyEvent(repostedEvent)) {\n    return void 0;\n  }\n  return repostedEvent;\n}\n\n// nip21.ts\nvar nip21_exports = {};\n__export(nip21_exports, {\n  NOSTR_URI_REGEX: () => NOSTR_URI_REGEX,\n  parse: () => parse2,\n  test: () => test\n});\nvar NOSTR_URI_REGEX = new RegExp(`nostr:(${BECH32_REGEX.source})`);\nfunction test(value) {\n  return typeof value === \"string\" && new RegExp(`^${NOSTR_URI_REGEX.source}$`).test(value);\n}\nfunction parse2(uri) {\n  const match = uri.match(new RegExp(`^${NOSTR_URI_REGEX.source}$`));\n  if (!match)\n    throw new Error(`Invalid Nostr URI: ${uri}`);\n  return {\n    uri: match[0],\n    value: match[1],\n    decoded: decode(match[1])\n  };\n}\n\n// nip25.ts\nvar nip25_exports = {};\n__export(nip25_exports, {\n  finishReactionEvent: () => finishReactionEvent,\n  getReactedEventPointer: () => getReactedEventPointer\n});\nfunction finishReactionEvent(t, reacted, privateKey) {\n  const inheritedTags = reacted.tags.filter((tag) => tag.length >= 2 && (tag[0] === \"e\" || tag[0] === \"p\"));\n  return finalizeEvent(\n    {\n      ...t,\n      kind: Reaction,\n      tags: [...t.tags ?? [], ...inheritedTags, [\"e\", reacted.id], [\"p\", reacted.pubkey]],\n      content: t.content ?? \"+\"\n    },\n    privateKey\n  );\n}\nfunction getReactedEventPointer(event) {\n  if (event.kind !== Reaction) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0 || lastPTag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag[2]].filter((x) => x !== void 0),\n    author: lastPTag[1]\n  };\n}\n\n// nip27.ts\nvar nip27_exports = {};\n__export(nip27_exports, {\n  parse: () => parse3\n});\nvar noCharacter = /\\W/m;\nvar noURLCharacter = /\\W |\\W$|$|,| /m;\nfunction* parse3(content) {\n  const max = content.length;\n  let prevIndex = 0;\n  let index = 0;\n  while (index < max) {\n    let u = content.indexOf(\":\", index);\n    if (u === -1) {\n      break;\n    }\n    if (content.substring(u - 5, u) === \"nostr\") {\n      const m = content.substring(u + 60).match(noCharacter);\n      const end = m ? u + 60 + m.index : max;\n      try {\n        let pointer;\n        let { data, type } = decode(content.substring(u + 1, end));\n        switch (type) {\n          case \"npub\":\n            pointer = { pubkey: data };\n            break;\n          case \"nsec\":\n          case \"note\":\n            index = end + 1;\n            continue;\n          default:\n            pointer = data;\n        }\n        if (prevIndex !== u - 5) {\n          yield { type: \"text\", text: content.substring(prevIndex, u - 5) };\n        }\n        yield { type: \"reference\", pointer };\n        index = end;\n        prevIndex = index;\n        continue;\n      } catch (_err) {\n        index = u + 1;\n        continue;\n      }\n    } else if (content.substring(u - 5, u) === \"https\" || content.substring(u - 4, u) === \"http\") {\n      const m = content.substring(u + 4).match(noURLCharacter);\n      const end = m ? u + 4 + m.index : max;\n      const prefixLen = content[u - 1] === \"s\" ? 5 : 4;\n      try {\n        let url = new URL(content.substring(u - prefixLen, end));\n        if (url.hostname.indexOf(\".\") === -1) {\n          throw new Error(\"invalid url\");\n        }\n        if (prevIndex !== u - prefixLen) {\n          yield { type: \"text\", text: content.substring(prevIndex, u - prefixLen) };\n        }\n        if (url.pathname.endsWith(\".png\") || url.pathname.endsWith(\".jpg\") || url.pathname.endsWith(\".jpeg\") || url.pathname.endsWith(\".gif\") || url.pathname.endsWith(\".webp\")) {\n          yield { type: \"image\", url: url.toString() };\n          index = end;\n          prevIndex = index;\n          continue;\n        }\n        if (url.pathname.endsWith(\".mp4\") || url.pathname.endsWith(\".avi\") || url.pathname.endsWith(\".webm\") || url.pathname.endsWith(\".mkv\")) {\n          yield { type: \"video\", url: url.toString() };\n          index = end;\n          prevIndex = index;\n          continue;\n        }\n        if (url.pathname.endsWith(\".mp3\") || url.pathname.endsWith(\".aac\") || url.pathname.endsWith(\".ogg\") || url.pathname.endsWith(\".opus\")) {\n          yield { type: \"audio\", url: url.toString() };\n          index = end;\n          prevIndex = index;\n          continue;\n        }\n        yield { type: \"url\", url: url.toString() };\n        index = end;\n        prevIndex = index;\n        continue;\n      } catch (_err) {\n        index = end + 1;\n        continue;\n      }\n    } else if (content.substring(u - 3, u) === \"wss\" || content.substring(u - 2, u) === \"ws\") {\n      const m = content.substring(u + 4).match(noURLCharacter);\n      const end = m ? u + 4 + m.index : max;\n      const prefixLen = content[u - 1] === \"s\" ? 3 : 2;\n      try {\n        let url = new URL(content.substring(u - prefixLen, end));\n        if (url.hostname.indexOf(\".\") === -1) {\n          throw new Error(\"invalid ws url\");\n        }\n        if (prevIndex !== u - prefixLen) {\n          yield { type: \"text\", text: content.substring(prevIndex, u - prefixLen) };\n        }\n        yield { type: \"relay\", url: url.toString() };\n        index = end;\n        prevIndex = index;\n        continue;\n      } catch (_err) {\n        index = end + 1;\n        continue;\n      }\n    } else {\n      index = u + 1;\n      continue;\n    }\n  }\n  if (prevIndex !== max) {\n    yield { type: \"text\", text: content.substring(prevIndex) };\n  }\n}\n\n// nip28.ts\nvar nip28_exports = {};\n__export(nip28_exports, {\n  channelCreateEvent: () => channelCreateEvent,\n  channelHideMessageEvent: () => channelHideMessageEvent,\n  channelMessageEvent: () => channelMessageEvent,\n  channelMetadataEvent: () => channelMetadataEvent,\n  channelMuteUserEvent: () => channelMuteUserEvent\n});\nvar channelCreateEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelCreation,\n      tags: [...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMetadataEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMetadata,\n      tags: [[\"e\", t.channel_create_event_id], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMessageEvent = (t, privateKey) => {\n  const tags = [[\"e\", t.channel_create_event_id, t.relay_url, \"root\"]];\n  if (t.reply_to_channel_message_event_id) {\n    tags.push([\"e\", t.reply_to_channel_message_event_id, t.relay_url, \"reply\"]);\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMessage,\n      tags: [...tags, ...t.tags ?? []],\n      content: t.content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelHideMessageEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelHideMessage,\n      tags: [[\"e\", t.channel_message_event_id], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMuteUserEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMuteUser,\n      tags: [[\"p\", t.pubkey_to_mute], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\n\n// nip30.ts\nvar nip30_exports = {};\n__export(nip30_exports, {\n  EMOJI_SHORTCODE_REGEX: () => EMOJI_SHORTCODE_REGEX,\n  matchAll: () => matchAll,\n  regex: () => regex,\n  replaceAll: () => replaceAll\n});\nvar EMOJI_SHORTCODE_REGEX = /:(\\w+):/;\nvar regex = () => new RegExp(`\\\\B${EMOJI_SHORTCODE_REGEX.source}\\\\B`, \"g\");\nfunction* matchAll(content) {\n  const matches = content.matchAll(regex());\n  for (const match of matches) {\n    try {\n      const [shortcode, name] = match;\n      yield {\n        shortcode,\n        name,\n        start: match.index,\n        end: match.index + shortcode.length\n      };\n    } catch (_e) {\n    }\n  }\n}\nfunction replaceAll(content, replacer) {\n  return content.replaceAll(regex(), (shortcode, name) => {\n    return replacer({\n      shortcode,\n      name\n    });\n  });\n}\n\n// nip39.ts\nvar nip39_exports = {};\n__export(nip39_exports, {\n  useFetchImplementation: () => useFetchImplementation3,\n  validateGithub: () => validateGithub\n});\nvar _fetch3;\ntry {\n  _fetch3 = fetch;\n} catch {\n}\nfunction useFetchImplementation3(fetchImplementation) {\n  _fetch3 = fetchImplementation;\n}\nasync function validateGithub(pubkey, username, proof) {\n  try {\n    let res = await (await _fetch3(`https://gist.github.com/${username}/${proof}/raw`)).text();\n    return res === `Verifying that I control the following Nostr public key: ${pubkey}`;\n  } catch (_) {\n    return false;\n  }\n}\n\n// nip47.ts\nvar nip47_exports = {};\n__export(nip47_exports, {\n  makeNwcRequestEvent: () => makeNwcRequestEvent,\n  parseConnectionString: () => parseConnectionString\n});\nfunction parseConnectionString(connectionString) {\n  const { pathname, searchParams } = new URL(connectionString);\n  const pubkey = pathname;\n  const relay = searchParams.get(\"relay\");\n  const secret = searchParams.get(\"secret\");\n  if (!pubkey || !relay || !secret) {\n    throw new Error(\"invalid connection string\");\n  }\n  return { pubkey, relay, secret };\n}\nasync function makeNwcRequestEvent(pubkey, secretKey, invoice) {\n  const content = {\n    method: \"pay_invoice\",\n    params: {\n      invoice\n    }\n  };\n  const encryptedContent = await encrypt(secretKey, pubkey, JSON.stringify(content));\n  const eventTemplate = {\n    kind: NWCWalletRequest,\n    created_at: Math.round(Date.now() / 1e3),\n    content: encryptedContent,\n    tags: [[\"p\", pubkey]]\n  };\n  return finalizeEvent(eventTemplate, secretKey);\n}\n\n// nip54.ts\nvar nip54_exports = {};\n__export(nip54_exports, {\n  normalizeIdentifier: () => normalizeIdentifier\n});\nfunction normalizeIdentifier(name) {\n  name = name.trim().toLowerCase();\n  name = name.normalize(\"NFKC\");\n  return Array.from(name).map((char) => {\n    if (/\\p{Letter}/u.test(char) || /\\p{Number}/u.test(char)) {\n      return char;\n    }\n    return \"-\";\n  }).join(\"\");\n}\n\n// nip57.ts\nvar nip57_exports = {};\n__export(nip57_exports, {\n  getZapEndpoint: () => getZapEndpoint,\n  makeZapReceipt: () => makeZapReceipt,\n  makeZapRequest: () => makeZapRequest,\n  useFetchImplementation: () => useFetchImplementation4,\n  validateZapRequest: () => validateZapRequest\n});\nimport { bech32 as bech322 } from \"@scure/base\";\nvar _fetch4;\ntry {\n  _fetch4 = fetch;\n} catch {\n}\nfunction useFetchImplementation4(fetchImplementation) {\n  _fetch4 = fetchImplementation;\n}\nasync function getZapEndpoint(metadata) {\n  try {\n    let lnurl = \"\";\n    let { lud06, lud16 } = JSON.parse(metadata.content);\n    if (lud06) {\n      let { words } = bech322.decode(lud06, 1e3);\n      let data = bech322.fromWords(words);\n      lnurl = utf8Decoder.decode(data);\n    } else if (lud16) {\n      let [name, domain] = lud16.split(\"@\");\n      lnurl = new URL(`/.well-known/lnurlp/${name}`, `https://${domain}`).toString();\n    } else {\n      return null;\n    }\n    let res = await _fetch4(lnurl);\n    let body = await res.json();\n    if (body.allowsNostr && body.nostrPubkey) {\n      return body.callback;\n    }\n  } catch (err) {\n  }\n  return null;\n}\nfunction makeZapRequest({\n  profile,\n  event,\n  amount,\n  relays,\n  comment = \"\"\n}) {\n  if (!amount)\n    throw new Error(\"amount not given\");\n  if (!profile)\n    throw new Error(\"profile not given\");\n  let zr = {\n    kind: 9734,\n    created_at: Math.round(Date.now() / 1e3),\n    content: comment,\n    tags: [\n      [\"p\", profile],\n      [\"amount\", amount.toString()],\n      [\"relays\", ...relays]\n    ]\n  };\n  if (event && typeof event === \"string\") {\n    zr.tags.push([\"e\", event]);\n  }\n  if (event && typeof event === \"object\") {\n    if (isReplaceableKind(event.kind)) {\n      const a = [\"a\", `${event.kind}:${event.pubkey}:`];\n      zr.tags.push(a);\n    } else if (isAddressableKind(event.kind)) {\n      let d = event.tags.find(([t, v]) => t === \"d\" && v);\n      if (!d)\n        throw new Error(\"d tag not found or is empty\");\n      const a = [\"a\", `${event.kind}:${event.pubkey}:${d[1]}`];\n      zr.tags.push(a);\n    }\n  }\n  return zr;\n}\nfunction validateZapRequest(zapRequestString) {\n  let zapRequest;\n  try {\n    zapRequest = JSON.parse(zapRequestString);\n  } catch (err) {\n    return \"Invalid zap request JSON.\";\n  }\n  if (!validateEvent(zapRequest))\n    return \"Zap request is not a valid Nostr event.\";\n  if (!verifyEvent(zapRequest))\n    return \"Invalid signature on zap request.\";\n  let p = zapRequest.tags.find(([t, v]) => t === \"p\" && v);\n  if (!p)\n    return \"Zap request doesn't have a 'p' tag.\";\n  if (!p[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'p' tag is not valid hex.\";\n  let e = zapRequest.tags.find(([t, v]) => t === \"e\" && v);\n  if (e && !e[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'e' tag is not valid hex.\";\n  let relays = zapRequest.tags.find(([t, v]) => t === \"relays\" && v);\n  if (!relays)\n    return \"Zap request doesn't have a 'relays' tag.\";\n  return null;\n}\nfunction makeZapReceipt({\n  zapRequest,\n  preimage,\n  bolt11,\n  paidAt\n}) {\n  let zr = JSON.parse(zapRequest);\n  let tagsFromZapRequest = zr.tags.filter(([t]) => t === \"e\" || t === \"p\" || t === \"a\");\n  let zap = {\n    kind: 9735,\n    created_at: Math.round(paidAt.getTime() / 1e3),\n    content: \"\",\n    tags: [...tagsFromZapRequest, [\"P\", zr.pubkey], [\"bolt11\", bolt11], [\"description\", zapRequest]]\n  };\n  if (preimage) {\n    zap.tags.push([\"preimage\", preimage]);\n  }\n  return zap;\n}\n\n// nip98.ts\nvar nip98_exports = {};\n__export(nip98_exports, {\n  getToken: () => getToken,\n  hashPayload: () => hashPayload,\n  unpackEventFromToken: () => unpackEventFromToken,\n  validateEvent: () => validateEvent2,\n  validateEventKind: () => validateEventKind,\n  validateEventMethodTag: () => validateEventMethodTag,\n  validateEventPayloadTag: () => validateEventPayloadTag,\n  validateEventTimestamp: () => validateEventTimestamp,\n  validateEventUrlTag: () => validateEventUrlTag,\n  validateToken: () => validateToken\n});\nimport { sha256 as sha2564 } from \"@noble/hashes/sha256\";\nimport { bytesToHex as bytesToHex5 } from \"@noble/hashes/utils\";\nimport { base64 as base643 } from \"@scure/base\";\nvar _authorizationScheme = \"Nostr \";\nasync function getToken(loginUrl, httpMethod, sign, includeAuthorizationScheme = false, payload) {\n  const event = {\n    kind: HTTPAuth,\n    tags: [\n      [\"u\", loginUrl],\n      [\"method\", httpMethod]\n    ],\n    created_at: Math.round(new Date().getTime() / 1e3),\n    content: \"\"\n  };\n  if (payload) {\n    event.tags.push([\"payload\", hashPayload(payload)]);\n  }\n  const signedEvent = await sign(event);\n  const authorizationScheme = includeAuthorizationScheme ? _authorizationScheme : \"\";\n  return authorizationScheme + base643.encode(utf8Encoder.encode(JSON.stringify(signedEvent)));\n}\nasync function validateToken(token, url, method) {\n  const event = await unpackEventFromToken(token).catch((error) => {\n    throw error;\n  });\n  const valid = await validateEvent2(event, url, method).catch((error) => {\n    throw error;\n  });\n  return valid;\n}\nasync function unpackEventFromToken(token) {\n  if (!token) {\n    throw new Error(\"Missing token\");\n  }\n  token = token.replace(_authorizationScheme, \"\");\n  const eventB64 = utf8Decoder.decode(base643.decode(token));\n  if (!eventB64 || eventB64.length === 0 || !eventB64.startsWith(\"{\")) {\n    throw new Error(\"Invalid token\");\n  }\n  const event = JSON.parse(eventB64);\n  return event;\n}\nfunction validateEventTimestamp(event) {\n  if (!event.created_at) {\n    return false;\n  }\n  return Math.round(new Date().getTime() / 1e3) - event.created_at < 60;\n}\nfunction validateEventKind(event) {\n  return event.kind === HTTPAuth;\n}\nfunction validateEventUrlTag(event, url) {\n  const urlTag = event.tags.find((t) => t[0] === \"u\");\n  if (!urlTag) {\n    return false;\n  }\n  return urlTag.length > 0 && urlTag[1] === url;\n}\nfunction validateEventMethodTag(event, method) {\n  const methodTag = event.tags.find((t) => t[0] === \"method\");\n  if (!methodTag) {\n    return false;\n  }\n  return methodTag.length > 0 && methodTag[1].toLowerCase() === method.toLowerCase();\n}\nfunction hashPayload(payload) {\n  const hash = sha2564(utf8Encoder.encode(JSON.stringify(payload)));\n  return bytesToHex5(hash);\n}\nfunction validateEventPayloadTag(event, payload) {\n  const payloadTag = event.tags.find((t) => t[0] === \"payload\");\n  if (!payloadTag) {\n    return false;\n  }\n  const payloadHash = hashPayload(payload);\n  return payloadTag.length > 0 && payloadTag[1] === payloadHash;\n}\nasync function validateEvent2(event, url, method, body) {\n  if (!verifyEvent(event)) {\n    throw new Error(\"Invalid nostr event, signature invalid\");\n  }\n  if (!validateEventKind(event)) {\n    throw new Error(\"Invalid nostr event, kind invalid\");\n  }\n  if (!validateEventTimestamp(event)) {\n    throw new Error(\"Invalid nostr event, created_at timestamp invalid\");\n  }\n  if (!validateEventUrlTag(event, url)) {\n    throw new Error(\"Invalid nostr event, url tag invalid\");\n  }\n  if (!validateEventMethodTag(event, method)) {\n    throw new Error(\"Invalid nostr event, method tag invalid\");\n  }\n  if (Boolean(body) && typeof body === \"object\" && Object.keys(body).length > 0) {\n    if (!validateEventPayloadTag(event, body)) {\n      throw new Error(\"Invalid nostr event, payload tag does not match request body hash\");\n    }\n  }\n  return true;\n}\nexport {\n  Relay,\n  SimplePool,\n  finalizeEvent,\n  fakejson_exports as fj,\n  generateSecretKey,\n  getEventHash,\n  getFilterLimit,\n  getPublicKey,\n  kinds_exports as kinds,\n  matchFilter,\n  matchFilters,\n  mergeFilters,\n  nip04_exports as nip04,\n  nip05_exports as nip05,\n  nip10_exports as nip10,\n  nip11_exports as nip11,\n  nip13_exports as nip13,\n  nip17_exports as nip17,\n  nip18_exports as nip18,\n  nip19_exports as nip19,\n  nip21_exports as nip21,\n  nip25_exports as nip25,\n  nip27_exports as nip27,\n  nip28_exports as nip28,\n  nip30_exports as nip30,\n  nip39_exports as nip39,\n  nip42_exports as nip42,\n  nip44_exports as nip44,\n  nip47_exports as nip47,\n  nip54_exports as nip54,\n  nip57_exports as nip57,\n  nip59_exports as nip59,\n  nip98_exports as nip98,\n  parseReferences,\n  serializeEvent,\n  sortEvents,\n  utils_exports as utils,\n  validateEvent,\n  verifiedSymbol,\n  verifyEvent\n};\n", "import EventEmitter from './emitter.js';\nimport { Buff } from '@cmdcode/buff';\nimport { SimplePool } from 'nostr-tools';\nimport { get_pubkey } from '../lib/crypto.js';\nimport { create_event } from '../lib/event.js';\nimport { gen_message_id } from '../lib/util.js';\nimport { finalize_message, create_payload, decrypt_payload, parse_envelope } from '../lib/message.js';\nimport { verify_relays, verify_seckey } from '../lib/validate.js';\nimport * as Util from '../util/index.js';\nconst NODE_CONFIG = () => {\n    return {\n        envelope: {\n            kind: 20004,\n            tags: []\n        },\n        filter: {\n            kinds: [20004],\n            since: Util.now()\n        },\n        req_timeout: 5000,\n        since_offset: 5,\n        start_delay: 2000\n    };\n};\nexport default class NostrNode extends EventEmitter {\n    constructor(relays, seckey, options = {}) {\n        super();\n        this._inbox = {\n            event: new EventEmitter(),\n            id: new EventEmitter(),\n            peer: new EventEmitter(),\n            tag: new EventEmitter()\n        };\n        this._sub = null;\n        this._handler = (event) => {\n            try {\n                const payload = decrypt_payload(event, this._seckey.hex);\n                const msg = parse_envelope(payload, event);\n                this.emit('message', msg);\n                this.inbox.id.emit(msg.id, msg);\n                this.inbox.peer.emit(msg.env.pubkey, msg);\n                this.inbox.tag.emit(msg.tag, msg);\n            }\n            catch (err) {\n                this.emit('bounced', [event.id, Util.parse_error(err)]);\n            }\n        };\n        this._publish = async (message, peer_pk, options) => {\n            const cache = options?.cache ?? new Map();\n            const config = get_event_config(this, options);\n            const payload = create_payload(message.tag, message.data, message.id);\n            const event = create_event(config, payload, peer_pk, this._seckey.hex);\n            const signed = { ...message, env: event };\n            const receipts = this._pool.publish(this.relays, event);\n            this._inbox.event.emit('published', signed);\n            return Promise.all(receipts).then(acks => {\n                const fails = this.relays.filter(r => !acks.includes(r));\n                const msg_id = message.id;\n                const ok = acks.length > 0;\n                const res = { acks, fails, ok, peer_pk, data: signed };\n                cache.set(peer_pk, res);\n                this._inbox.event.emit('settled', { ...res, msg_id });\n                return { ...res, ok, msg_id };\n            });\n        };\n        verify_relays(relays);\n        verify_seckey(seckey);\n        this._seckey = new Buff(seckey);\n        this._pubkey = get_pubkey(this._seckey.hex);\n        this._config = get_node_config(options);\n        this._filter = get_filter_config(this, options.filter);\n        this._pool = new SimplePool();\n        this._relays = relays;\n        this.emit('info', ['filter:', JSON.stringify(this.filter, null, 2)]);\n    }\n    _subscribe(filter, timeout = this.config.req_timeout, sub_id = gen_message_id()) {\n        this._filter = get_filter_config(this, filter);\n        this.filter['#p'] = [...this.filter['#p'] ?? [], this.pubkey];\n        this._sub = this._pool.subscribeMany(this.relays, [this._filter], {\n            id: sub_id,\n            oneose: () => this.emit('subscribed', [sub_id, this.filter]),\n            onevent: this._handler\n        });\n        return new Promise(resolve => {\n            const timer = setTimeout(() => resolve('timeout'), timeout);\n            const resolver = (reason) => { clearTimeout(timer); resolve(reason); };\n            this.within('subscribed', ([id]) => {\n                if (id === sub_id)\n                    resolver(null);\n            }, timeout);\n        });\n    }\n    get config() {\n        return this._config;\n    }\n    get filter() {\n        return this._filter;\n    }\n    get inbox() {\n        return this._inbox;\n    }\n    get pubkey() {\n        return this._pubkey;\n    }\n    get relays() {\n        return this._relays;\n    }\n    async broadcast(message, peers, options) {\n        const cache = new Map();\n        const msg = finalize_message(message);\n        const outbox = peers.map(pk => this._publish(msg, pk, options));\n        return Promise.all(outbox).then(settled => {\n            const ok = settled.every(r => r.ok);\n            const res = { ok, cache, msg_id: msg.id, peers };\n            settled.forEach(r => cache.set(r.peer_pk, r));\n            this.emit('broadcast', res);\n            return { ...res };\n        });\n    }\n    async connect(timeout = this.config.req_timeout) {\n        const res = await this._subscribe(this._filter, timeout);\n        if (res !== null)\n            throw new Error(res);\n        this.emit('ready', this);\n        return this;\n    }\n    async close() {\n        if (this._sub !== null) {\n            this._sub.close();\n        }\n        if (this._pool.close !== undefined) {\n            this._pool.close(this.relays);\n        }\n        this.emit('close', this);\n    }\n    async request(message, peer_pk, options) {\n        const msg = finalize_message(message);\n        const receipt = this.subscribe({ id: msg.id, peers: [peer_pk] }, options);\n        this.publish(msg, peer_pk, options);\n        return receipt;\n    }\n    async multicast(message, peers, options = {}) {\n        const msg = finalize_message(message);\n        const sub = this.subscribe({ id: msg.id, peers }, options);\n        const pub = this.broadcast(msg, peers, options);\n        return Promise.all([sub, pub]).then(([sub, pub]) => {\n            return { sub, pub };\n        });\n    }\n    async publish(message, pubkey, options) {\n        const msg = finalize_message(message);\n        return this._publish(msg, pubkey, options);\n    }\n    async subscribe(filter, options) {\n        const config = get_sub_config(this, options);\n        return new Promise(resolve => {\n            const { timeout, threshold } = config;\n            const { id, peers = [], tag } = filter;\n            const authors = new Set();\n            const inbox = new Set();\n            const timer = setTimeout(() => resolver(false, 'timeout'), timeout);\n            const resolver = (ok, reason) => {\n                clearTimeout(timer);\n                const res = {\n                    ok,\n                    authors: Array.from(authors),\n                    inbox: Array.from(inbox),\n                    peers,\n                    reason\n                };\n                this.emit('resolved', res);\n                resolve({ ...res });\n            };\n            const is_bounce = (msg) => ((typeof id === 'string' && id !== msg.id) ||\n                (typeof tag === 'string' && tag !== msg.tag) ||\n                (peers.length > 0 && !peers.includes(msg.env.pubkey)));\n            this.within('message', (msg) => {\n                if (!is_bounce(msg)) {\n                    authors.add(msg.env.pubkey);\n                    inbox.add(msg);\n                }\n                if (typeof threshold === 'number' && authors.size >= threshold) {\n                    resolver(true, 'threshold');\n                }\n                if (Array.isArray(peers) && peers.every(e => authors.has(e))) {\n                    resolver(true, 'complete');\n                }\n            }, timeout);\n        });\n    }\n    async update(filter) {\n        if (this._sub !== null)\n            this._sub.close();\n        return this._subscribe(filter);\n    }\n}\nfunction get_node_config(opt = {}) {\n    const config = NODE_CONFIG();\n    const envelope = { ...config.envelope, ...opt.envelope };\n    const filter = { ...config.filter, ...opt.filter };\n    return { ...config, envelope, filter };\n}\nfunction get_event_config(node, opt = {}) {\n    let { created_at = Util.now(), tags = [], ...rest } = opt;\n    const envelope = node.config.envelope;\n    tags = [...envelope.tags ?? [], ...opt.tags ?? []];\n    return { ...envelope, ...rest, created_at, tags };\n}\nfunction get_filter_config(node, filter = {}) {\n    return { ...node.config.filter, ...filter };\n}\nfunction get_sub_config(node, opt = {}) {\n    const timeout = opt.timeout ?? node.config.req_timeout;\n    return { ...opt, timeout };\n}\n", "import { EventEmitter } from './emitter.js';\nimport { BifrostSigner } from './signer.js';\nimport { SignerQueue } from './queue.js';\nimport { NostrNode } from '@cmdcode/nostr-p2p';\nimport { parse_error } from '@cmdcode/nostr-p2p/util';\nimport { convert_pubkey } from '../util/crypto.js';\nimport { parse_ecdh_message, parse_session_message } from '../lib/parse.js';\nimport * as API from '../api/index.js';\nconst NODE_CONFIG = () => {\n    return {\n        debug: false,\n        middleware: {},\n        policies: [],\n        sign_interval: 100\n    };\n};\nexport class BifrostNode extends EventEmitter {\n    constructor(group, share, relays, options) {\n        super();\n        this._cache = get_node_cache(options);\n        this._config = get_node_config(options);\n        this._queue = new SignerQueue(this);\n        this._signer = new BifrostSigner(group, share, options);\n        this._peers = get_peer_policies(this);\n        this._client = new NostrNode(relays, share.seckey, {\n            filter: { authors: this.peers.all }\n        });\n        this._client.on('message', (msg) => {\n            this.emit('message', msg);\n            if (!this._filter(msg))\n                return;\n            try {\n                switch (msg.tag) {\n                    case '/ping/req': {\n                        API.ping_handler_api(this, msg);\n                        break;\n                    }\n                    case '/ecdh/req': {\n                        const parsed = parse_ecdh_message(msg);\n                        API.ecdh_handler_api(this, parsed);\n                        break;\n                    }\n                    case '/sign/req': {\n                        const parsed = parse_session_message(msg);\n                        API.sign_handler_api(this, parsed);\n                        break;\n                    }\n                }\n            }\n            catch (err) {\n                this.emit('bounced', [parse_error(err), msg]);\n            }\n        });\n    }\n    _filter(msg) {\n        if (!this.peers.recv.includes(msg.env.pubkey)) {\n            this.emit('bounced', ['unauthorized', msg]);\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    get cache() {\n        return this._cache;\n    }\n    get client() {\n        return this._client;\n    }\n    get config() {\n        return this._config;\n    }\n    get debug() {\n        return this._config.debug;\n    }\n    get group() {\n        return this._signer.group;\n    }\n    get queue() {\n        return this._queue;\n    }\n    get peers() {\n        return {\n            all: this._peers.map(e => e[0]),\n            send: this._peers.filter(e => e[1]).map(e => e[0]),\n            recv: this._peers.filter(e => e[2]).map(e => e[0])\n        };\n    }\n    get pubkey() {\n        return convert_pubkey(this.signer.pubkey, 'bip340');\n    }\n    get req() {\n        return {\n            ecdh: API.ecdh_request_api(this),\n            ping: API.ping_request_api(this),\n            queue: API.sign_queue_api(this),\n            sign: API.sign_request_api(this)\n        };\n    }\n    get signer() {\n        return this._signer;\n    }\n    async connect() {\n        await this.client.connect();\n        this.emit('ready', this);\n        return this;\n    }\n    async close() {\n        await this.client.close();\n        this.emit('closed', this);\n        return this;\n    }\n}\nfunction get_node_config(opt = {}) {\n    return { ...NODE_CONFIG(), ...opt };\n}\nfunction get_node_cache(opt = {}) {\n    return {\n        ecdh: opt.cache?.ecdh ?? new Map()\n    };\n}\nfunction get_peer_policies(node) {\n    const pubkey = node.pubkey;\n    const peers = node.group.commits\n        .map(e => convert_pubkey(e.pubkey, 'bip340'))\n        .filter(e => e !== pubkey);\n    let policies = [];\n    for (const peer of peers) {\n        const config = node.config.policies.find(e => e[0] === peer);\n        policies.push(config ?? [peer, true, true]);\n    }\n    return policies;\n}\n", "import { Buff } from '@cmdcode/buff';\nimport * as CONST from '../const.js';\nimport { Assert, normalize_obj } from '../util/index.js';\nexport function encode_group_pkg(pkg) {\n    const data = serialize_group_data(pkg);\n    return data.to_bech32m('bfgroup');\n}\nexport function decode_group_pkg(str) {\n    const data = Buff.bech32m(str);\n    return deserialize_group_data(data);\n}\nexport function serialize_group_data(pkg) {\n    const thd = Buff.num(pkg.threshold, CONST.GROUP_THOLD_SIZE);\n    const gpk = Buff.hex(pkg.group_pk, CONST.GROUP_PUBKEY_SIZE);\n    const com = pkg.commits.map(e => serialize_commit_data(e));\n    return Buff.join([gpk, thd, ...com]);\n}\nexport function deserialize_group_data(data) {\n    const stream = new Buff(data).stream;\n    const group_pk = stream.read(CONST.COMMIT_PUBKEY_SIZE).hex;\n    const threshold = stream.read(CONST.GROUP_THOLD_SIZE).num;\n    Assert.ok(stream.size % CONST.COMMIT_DATA_SIZE === 0, 'commit data is malformed');\n    const count = stream.size / CONST.COMMIT_DATA_SIZE;\n    const commits = [];\n    for (let i = 0; i < count; i++) {\n        const cbytes = stream.read(CONST.COMMIT_DATA_SIZE);\n        commits.push(deserialize_commit_data(cbytes));\n    }\n    Assert.size(stream.data, 0);\n    return normalize_obj({ commits, group_pk, threshold });\n}\nfunction serialize_commit_data(pkg) {\n    const idx = Buff.num(pkg.idx, CONST.COMMIT_INDEX_SIZE);\n    const spk = Buff.hex(pkg.pubkey, CONST.COMMIT_PUBKEY_SIZE);\n    const bpn = Buff.hex(pkg.binder_pn, CONST.COMMIT_PNONCE_SIZE);\n    const hpn = Buff.hex(pkg.hidden_pn, CONST.COMMIT_PNONCE_SIZE);\n    return Buff.join([idx, spk, bpn, hpn]);\n}\nfunction deserialize_commit_data(data) {\n    const stream = new Buff(data).stream;\n    Assert.size(stream.data, CONST.COMMIT_DATA_SIZE);\n    const idx = stream.read(CONST.COMMIT_INDEX_SIZE).num;\n    const pubkey = stream.read(CONST.COMMIT_PUBKEY_SIZE).hex;\n    const binder_pn = stream.read(CONST.COMMIT_PNONCE_SIZE).hex;\n    const hidden_pn = stream.read(CONST.COMMIT_PNONCE_SIZE).hex;\n    Assert.size(stream.data, 0);\n    return { idx, binder_pn, hidden_pn, pubkey };\n}\n", "import { Buff } from '@cmdcode/buff';\nimport * as CONST from '../const.js';\nimport { Assert, normalize_obj } from '../util/index.js';\nexport function encode_share_pkg(pkg) {\n    const data = serialize_share_data(pkg);\n    Assert.size(data, CONST.SHARE_DATA_SIZE);\n    return data.to_bech32m('bfshare');\n}\nexport function decode_share_pkg(sharestr) {\n    const data = Buff.bech32m(sharestr);\n    return deserialize_share_data(data);\n}\nexport function serialize_share_data(pkg) {\n    const idx = Buff.num(pkg.idx, CONST.SHARE_INDEX_SIZE);\n    const ssk = Buff.hex(pkg.seckey, CONST.SHARE_SECKEY_SIZE);\n    const bsn = Buff.hex(pkg.binder_sn, CONST.SHARE_SNONCE_SIZE);\n    const hsn = Buff.hex(pkg.hidden_sn, CONST.SHARE_SNONCE_SIZE);\n    return Buff.join([idx, ssk, bsn, hsn]);\n}\nexport function deserialize_share_data(data) {\n    const stream = new Buff(data).stream;\n    Assert.size(stream.data, CONST.SHARE_DATA_SIZE);\n    const idx = stream.read(CONST.SHARE_INDEX_SIZE).num;\n    const seckey = stream.read(CONST.SHARE_SECKEY_SIZE).hex;\n    const binder_sn = stream.read(CONST.SHARE_SNONCE_SIZE).hex;\n    const hidden_sn = stream.read(CONST.SHARE_SNONCE_SIZE).hex;\n    Assert.size(stream.data, 0);\n    return normalize_obj({ idx, binder_sn, hidden_sn, seckey });\n}\n", "import { Buff } from '@cmdcode/buff';\nimport { is_group_member } from '../lib/group.js';\nimport { Assert } from '../util/index.js';\nimport { deserialize_group_data, serialize_group_data } from './group.js';\nimport { deserialize_share_data, serialize_share_data } from './share.js';\nimport * as CONST from '../const.js';\nconst SPLIT_IDX = CONST.SHARE_DATA_SIZE;\nexport function encode_credentials(group_pkg, share_pkg) {\n    Assert.ok(is_group_member(group_pkg, share_pkg), 'share not included in group');\n    const group = serialize_group_data(group_pkg);\n    const share = serialize_share_data(share_pkg);\n    const cred = Buff.join([share, group]);\n    return cred.to_bech32m('bfcred');\n}\nexport function decode_credentials(credstr) {\n    const bytes = Buff.bech32m(credstr);\n    const sdata = bytes.slice(0, SPLIT_IDX);\n    const gdata = bytes.slice(SPLIT_IDX);\n    const group = deserialize_group_data(gdata);\n    const share = deserialize_share_data(sdata);\n    Assert.ok(is_group_member(group, share), 'share not included in group');\n    return { group, share };\n}\n", "import * as CredEncoder from './cred.js';\nimport * as GroupEncoder from './group.js';\nimport * as ShareEncoder from './share.js';\nexport * from './cred.js';\nexport * from './group.js';\nexport * from './share.js';\nexport var PackageEncoder;\n(function (PackageEncoder) {\n    PackageEncoder.cred = {\n        encode: CredEncoder.encode_credentials,\n        decode: CredEncoder.decode_credentials\n    };\n    PackageEncoder.group = {\n        encode: GroupEncoder.encode_group_pkg,\n        decode: GroupEncoder.decode_group_pkg,\n        serialize: GroupEncoder.serialize_group_data,\n        deserialize: GroupEncoder.deserialize_group_data\n    };\n    PackageEncoder.share = {\n        encode: ShareEncoder.encode_share_pkg,\n        decode: ShareEncoder.decode_share_pkg,\n        serialize: ShareEncoder.serialize_share_data,\n        deserialize: ShareEncoder.deserialize_share_data\n    };\n})(PackageEncoder || (PackageEncoder = {}));\n", "import type { AppStore } from './types/index.js'\n\nexport const LOG_LIMIT = 100\n\nexport const STORE_KEY = 'frostr-demo'\n\nexport const DEFAULT_STORE : AppStore = {\n  creds  : null,\n  relays : [],\n  peers  : [],\n  logs   : []\n}\n", "type Subscriber = () => void\n\nexport class DBController<T> {\n  private readonly _defaults  : T\n  private readonly _store_key : string\n  private readonly _subs      : Set<Subscriber> = new Set()\n\n  constructor (\n    store_key : string,\n    defaults  : T\n  ) {\n    this._defaults  = defaults\n    this._store_key = store_key\n  }\n\n  get_defaults () : T {\n    return this._defaults\n  }\n\n  get () : T {\n    try {\n      const item = localStorage.getItem(this._store_key)\n      return item ? JSON.parse(item) : this._defaults\n    } catch {\n      return this._defaults\n    }\n  }\n\n  reset () : void {\n    this.set(this._defaults)\n  }\n\n  set (value : T ) : void {\n    try {\n      localStorage.setItem(this._store_key, JSON.stringify(value))\n      this._notify_subs()\n    } catch (error) {\n      console.error('Error saving to localStorage:', error)\n    }\n  }\n\n  subscribe (callback : Subscriber) : () => void {\n    this._subs.add(callback)\n    return () => this._subs.delete(callback)\n  }\n\n  update (value : Partial<T>) : void {\n    this.set({ ...this.get(), ...value })\n  }\n\n  private _notify_subs(): void {\n    this._subs.forEach(subscriber => subscriber())\n  }\n}\n", "import { DBController } from './controller.js'\n\nimport {\n  createContext,\n  useContext,\n  useState\n} from 'react'\n\nimport type { ReactNode } from 'react'\n\ninterface StoreAPI <T> {\n  data   : T\n  update : (store: Partial<T>) => void\n  reset  : () => void\n}\n\ninterface StoreProviderProps {\n  children : ReactNode\n}\n\nexport function createStoreProvider<T> (\n  controller : DBController<T>\n) {\n\n  const Context = createContext<StoreAPI<T> | null>(null)\n\n  const StoreProvider = ({ children }: StoreProviderProps): JSX.Element => {\n    const [ _store, _setStore ] = useState<T>(controller.get())\n\n    const reset = () => {\n      controller.reset()\n      _setStore(controller.get_defaults())\n    }\n\n    const update = (store: Partial<T>) => {\n      const new_store = { ..._store, ...store }\n      controller.set(new_store)\n      _setStore(new_store)\n    }\n\n    return (\n      <Context.Provider value={{ data : _store, reset, update }}>\n        {children}\n      </Context.Provider>\n    )\n  }\n\n  const useStore = () => {\n    const ctx = useContext(Context)\n    if (ctx === null) {\n      throw new Error('useStore must be used within a StoreProvider')\n    }\n    return ctx\n  }\n\n  return {\n    StoreProvider,\n    useStore\n  }\n\n}\n", "import { DEFAULT_STORE, STORE_KEY } from '@/const.js'\nimport { DBController }             from './controller.js'\nimport { createStoreProvider }      from './context.js'\n\nimport type { AppStore } from '@/types/index.js'\n\nconst params = new URLSearchParams(window.location.search)\nconst name   = params.get('name')\n\nconst store_key = name ?\n  `${STORE_KEY}-${name}`\n  : STORE_KEY\n\nexport const StoreDB = new DBController<AppStore>(store_key, DEFAULT_STORE)\nexport const { StoreProvider, useStore } = createStoreProvider(StoreDB)\n", "import { BifrostNode } from '@frostr/bifrost'\nimport { useStore }    from '@/store/index.js'\nimport { LOG_LIMIT }   from '@/const.js'\n\nimport { useEffect, useRef, useState } from 'react'\n\nimport type {\n  AppStore,\n  NodeStatus,\n  StoreReady,\n  NodeAPI,\n  LogEntry,\n  LogType\n} from '@/types/index.js'\n\nexport function useBifrost () : NodeAPI {\n  const [ status, setStatus ] = useState<NodeStatus>('stopped')\n\n  const store     = useStore()\n  const node_ref  = useRef<BifrostNode | null>(null)\n  const store_ref = useRef(store.data)\n\n  useEffect(() => {\n    store_ref.current = store.data\n  }, [store.data])\n\n  const reset = () => {\n    if (!is_store_ready(store.data)) return\n\n    store.update({ logs: [] })\n\n    const { creds, peers, relays } = store.data\n\n    const urls = relays.map(r => r.url)\n\n    node_ref.current = new BifrostNode(creds.group, creds.share, urls, { policies : peers })\n\n    node_ref.current.once('ready', () => {\n      console.log('node ready')\n      setStatus('online')\n    })\n\n    node_ref.current.once('error', (error) => {\n      console.error('node error:', error)\n      setStatus('offline')\n    })\n\n    node_ref.current.once('closed', () => {\n      console.log('node closed')\n      setStatus('offline')\n    })\n\n    node_ref.current.on('*', (event) => {\n      const log = {\n        timestamp : new Date().toISOString(),\n        message   : String(event),\n        type      : 'info' as LogType\n      }\n      store.update({ logs: update_log(store_ref.current, log) })\n    })\n\n    node_ref.current.connect()\n  }\n\n  const stop = () => {\n    if (!node_ref.current) return\n    node_ref.current = null\n  }\n\n  useEffect(() => {\n    reset()\n  }, [ store.data.creds, store.data.relays, store.data.peers ])\n\n  return { ref: node_ref, reset, stop, status }\n}\n\nfunction is_store_ready (store : AppStore) : store is StoreReady {\n  return store.creds !== null && store.relays.length > 0\n}\n\nfunction update_log (store : AppStore, log : LogEntry) {\n  let new_logs = [ ...store.logs, log ]\n  if (new_logs.length > LOG_LIMIT) {\n    const diff = new_logs.length - LOG_LIMIT\n    new_logs = new_logs.slice(diff)\n  }\n  return new_logs\n}\n", "import { useBifrost } from '@/hooks/useBifrost.js'\n\nimport {\n  createContext,\n  useContext\n} from 'react'\n\nimport type { ReactNode } from 'react'\nimport type { NodeAPI }   from '@/types/index.js'\n\ninterface ProviderProps {\n  children : ReactNode\n}\n\nconst Context = createContext<NodeAPI | null>(null)\n\nexport function NodeProvider ({ children }: ProviderProps): JSX.Element {\n\n  const node = useBifrost()\n\n  return (\n    <Context.Provider value={node}>\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport function useNode () {\n  const ctx = useContext(Context)\n  if (ctx === null) {\n    throw new Error('useNode must be used within a NodeProvider')\n  }\n  return ctx\n}\n", "export function Header () {\n  return (\n    <div className=\"page-header\">\n      <img\n        src=\"assets/frostr-icon.png\" \n        alt=\"Frost Logo\" \n        className=\"frost-logo\"\n      />\n      <div className=\"title-container\">\n        <h1>FROSTR Web Demo</h1>\n      </div>\n      <p>FROSTR Web Demo</p>\n      <a \n        href=\"https://frostr.org\" \n        target=\"_blank\" \n        rel=\"noopener noreferrer\"\n      >\n        https://frostr.org\n      </a>\n      <div className=\"alpha-pill alpha-pill-standalone\">alpha edition</div>\n    </div>\n  )\n}\n", "\nimport { useState }  from 'react'\nimport { Console }   from '@/components/node/console.js'\nimport { Dashboard } from '@/components/node/dash.js'\nimport { Settings }  from '@/components/settings/index.js'\n\nimport type { ReactElement } from 'react'\n\nimport * as Icons from '@/components/icons.js'\n\nexport function Tabs(): ReactElement {\n  const [ activeTab, setActiveTab ] = useState('dashboard')\n\n  return (\n    <div className=\"tabs-container\">\n      <div className=\"tabs-nav-wrapper\">\n\n        <div className=\"tabs-navigation\">\n          <button \n            className={`tab-button ${activeTab === 'dashboard' ? 'active' : ''}`}\n            onClick={() => setActiveTab('dashboard')}\n          >\n            <Icons.ConsoleIcon />\n            <span>Dashboard</span>\n          </button>\n\n          <button\n            className={`tab-button ${activeTab === 'settings' ? 'active' : ''}`}\n            onClick={() => setActiveTab('settings')}\n          >\n            <Icons.SettingsIcon />\n            <span>Settings</span>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"tab-content\">\n        {activeTab === 'dashboard' && (\n          <div className=\"tab-panel\">\n            <Dashboard />\n            <Console />\n          </div>\n        )}\n\n        {activeTab === 'settings' && (\n          <div className=\"tab-panel\">\n            <Settings />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n", "import { useStore } from '@/store/index.js'\n\nexport function Console () {\n  \n  const store = useStore()\n  \n  // Clear logs handler\n  const clear_logs = async () => {\n    store.update({ logs: [] })\n  }\n\n  return (\n    <div className=\"console-container\">\n      <h2 className=\"section-header\">Event Console</h2>\n      <p className=\"description\">Monitor events from your bifrost node.</p>\n      \n      <div className=\"console-output\">\n        {store.data.logs.length === 0 ? (\n          <div className=\"console-empty\">No events logged yet</div>\n        ) : (\n          store.data.logs.map((log, idx) => (\n            <div key={idx} className={`console-entry`}>\n              <span className=\"console-timestamp\">\n                {new Date(log.timestamp).toLocaleTimeString()}\n              </span>\n              <span className={`console-message console-${log.type}`}>{log.message}</span>\n            </div>\n          ))\n        )}\n      </div>\n\n      <div className=\"console-controls\">\n        <button className=\"button\" onClick={clear_logs}>Clear Console</button>\n      </div>\n    </div>\n  )\n}\n", "import { useNode } from '@/context/node.js'\n\nexport function Dashboard () {\n  const node = useNode()\n\n  return (\n    <div className=\"node-container\">\n      <h2 className=\"section-header\">Node Manager</h2>\n      <pre>pubkey: {node.ref.current?.pubkey || 'unknown'}</pre>\n      <pre>status: {node.status}</pre>\n      <button className=\"button\" onClick={() => node.reset()}>Reset Node</button>\n    </div>\n  )\n}\n", "import { useEffect, useState } from 'react'\nimport { get_pubkey }          from '@frostr/bifrost/util'\nimport { useStore }            from '@/store/index.js'\n\nimport {\n  decode_credentials,\n  encode_credentials\n} from '@frostr/bifrost/encoder'\n\nimport type { PeerPolicy }      from '@frostr/bifrost'\nimport type { NodeCredentials } from '@/types/node.js'\n\nexport function CredentialsConfig() {\n  const store = useStore()\n\n  const [ input, setInput ] = useState<string>('')\n  const [ error, setError ] = useState<string | null>(null)\n  const [ show, setShow   ] = useState<boolean>(false)\n  const [ saved, setSaved ] = useState<boolean>(false)\n\n  /**\n   * Handle the update of the store.\n   */\n  const update_creds = () => {\n    // If an error exists, do not update the group.\n    if (error !== null) return\n    // If the input is empty,\n    if (input === '') {\n      store.update({ creds : null, peers : [] })\n    } else {\n      try {\n        // Parse the input into a group package.\n        const creds = decode_credentials(input)\n        // Initialize the peers.\n        const peers = init_peer_permissions(creds)\n        // If the credentials package is invalid, return.\n        if (creds === null) return\n        // Update the credentials in the store.\n        store.update({ creds, peers })\n      } catch (err) {\n        console.log(err)\n        setError('failed to decode package data')\n      }\n    }\n    // Set the saved state, and reset it after a short delay.\n    setSaved(true)\n    setTimeout(() => setSaved(false), 1500)\n  }\n\n  useEffect(() => {\n    try {\n      if (store.data.creds !== null) {\n        setInput(get_creds_str(store.data.creds))\n      } else {\n        setInput('')\n      }\n    } catch {\n      setInput('')\n    }\n  }, [ store.data.creds ])\n\n  /**\n   * Handle the validation of the input when it changes.\n   */\n  useEffect(() => {\n    // If the input is empty, clear the error.\n    if (input === '') {\n      setError(null)\n    } else if (!input.startsWith('bfcred')) {\n      // If the input does not start with \"bfcred\", set an error.\n      setError('input must start with \"bfcred\"')\n    } else if (!is_cred_string(input)) {\n      // If the input contains invalid characters, set an error.\n      setError('input contains invalid characters')\n    } else {\n      // Parse the input into a credential package.\n      const pkg = get_creds_pkg(input)\n      // If the credential package is valid, clear the error.\n      if (pkg !== null) {\n        setError(null)\n      } else {\n        // If the credential package is invalid, set an error.\n        setError('failed to decode package data')\n      }\n    }\n  }, [ input ])\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"section-header\">Credentials Package</h2>\n      <p className=\"description\">Paste your encoded credentials string (starts with bfcred). It contains your secrets, plus information about your signing group.</p>\n      <div className=\"content-container\">\n        <div className=\"input-with-button\">\n          <input\n            type={show ? \"text\" : \"password\"}\n            value={input}\n            onChange={e => setInput(e.target.value.trim())}\n            placeholder=\"bfcred1...\"\n          />\n          <div className=\"input-actions\">\n            <button \n              className=\"button\"\n              onClick={() => setShow(!show)}\n            >\n              {show ? 'hide' : 'show'}\n            </button>\n            <button\n              className={`button action-button ${saved ? 'saved-button' : ''}`} \n              onClick={update_creds}\n              disabled={!is_creds_changed(input, store.data.creds) || error !== null}\n            >\n              {saved ? 'Saved' : 'Save'}\n            </button>\n          </div>\n        </div>\n        \n        {input !== '' && error === null && show && (\n          <pre className=\"code-display\">\n            {get_creds_json(input) ?? 'invalid group package'}\n          </pre>\n        )}\n        <div className=\"notification-container\">\n          {error && <p className=\"error-text\">{error}</p>}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n/**\n * Check if the input is a valid credential string.\n */\nfunction is_cred_string(input : string) {\n  return /^bfcred1[023456789acdefghjklmnpqrstuvwxyz]+$/.test(input)\n}\n\n/**\n * Check if the input has changed and is valid.\n */\nfunction is_creds_changed (\n  input : string,\n  creds : NodeCredentials | null\n) {\n  if (creds === null) {\n    return input !== ''\n  } else {\n    // Encode the existing credentials to a string.\n    const creds_str = get_creds_str(creds)\n    // Determine if the credentials input has changed and is valid.\n    return input !== creds_str\n  }\n}\n\n/**\n * Get the credentials string from the package.\n */\nfunction get_creds_str (creds : NodeCredentials) {\n  try {\n    return (creds !== null)\n      ? encode_credentials(creds.group, creds.share)\n      : ''\n  } catch {\n    return ''\n  }\n}\n\n/**\n * Get the credentials package from the input.\n */\nfunction get_creds_pkg (input : string) {\n  try {\n    return (input !== '')\n      ? decode_credentials(input)\n      : null\n  } catch {\n    return null\n  }\n}\n\n/**\n * Get the credentials JSON from the input.\n */\nfunction get_creds_json(input : string) {\n  try {\n    const creds = decode_credentials(input)\n    return JSON.stringify(creds, null, 2)\n  } catch (err) {\n    return null\n  }\n}\n\n/**\n * Initialize the peer permissions.\n */\nfunction init_peer_permissions (\n  creds : NodeCredentials\n) : PeerPolicy[] {\n  const pubkey = get_pubkey(creds.share.seckey, 'ecdsa')\n  console.log('pubkey', pubkey)\n  console.log('commits', creds.group.commits)\n  return creds.group.commits\n    .filter(commit => commit.pubkey !== pubkey)\n    .map(commit => [ commit.pubkey, false, false ])\n}\n", "import { useEffect, useState } from 'react'\nimport { useStore } from '@/store/index.js'\n\nimport type { PeerPolicy } from '@frostr/bifrost'\n\nexport function PeerConfig() {\n  const store = useStore()\n\n  const [ peers, setPeers ]     = useState<PeerPolicy[]>(store.data.peers)\n  const [ changes, setChanges ] = useState<boolean>(false)\n  const [ saved, setSaved ]     = useState<boolean>(false)\n\n  // Update the peer policies in the store.\n  const update = () => {\n    store.update({ peers })\n    setChanges(false)\n    setSaved(true)\n    setTimeout(() => setSaved(false), 1500)\n  }\n\n  // Discard changes by resetting local state from store\n  const cancel = () => {\n    setPeers(store.data.peers)\n    setChanges(false)\n  }\n\n  // Update peer connectivity status locally\n  const update_peer = (idx: number, key: number, value: boolean) => {\n    setPeers(prev => {\n      const updated = [ ...prev ?? [] ]\n      updated[idx][key] = value\n      return updated\n    })\n    setChanges(true)\n  }\n\n  useEffect(() => {\n    setPeers(store.data.peers)\n  }, [ store.data.peers ])\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"section-header\">Peer Connections</h2>\n      <p className=\"description\">Configure how you communicate with other peers in your signing group. \"Request\" will send signature requests to that peer, and \"Respond\" will co-sign requests from that peer.</p>\n\n      {peers === null &&\n        <p className=\"description\">You must configure your node's credentials first.</p>\n      }\n      \n      {peers !== null &&\n        <div>\n          <table>\n            <thead>\n              <tr>\n                <th>Peer Public Key</th>\n                <th className=\"checkbox-cell\">Request</th>\n                <th className=\"checkbox-cell\">Respond</th>\n              </tr>\n            </thead>\n            <tbody>\n              {peers.map((peer, idx) => (\n                <tr key={idx}>\n                  <td className=\"pubkey-cell\">{peer[0]}</td>\n                  <td className=\"checkbox-cell\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"peer-checkbox\"\n                      checked={peer[1]}\n                      onChange={() => update_peer(idx, 1, !peer[1])}\n                    />\n                  </td>\n                  <td className=\"checkbox-cell\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"peer-checkbox\"\n                      checked={peer[2]}\n                      onChange={() => update_peer(idx, 2, !peer[2])}\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          \n          <div className=\"action-buttons\">\n            <button \n              onClick={update}\n              disabled={!changes}\n              className={`button button-primary action-button ${saved ? 'saved-button' : ''}`}\n            >\n              {saved ? 'Saved' : 'Save'}\n            </button>\n            \n            {changes && (\n              <button \n                onClick={cancel}\n                className=\"button\"\n              >\n                Cancel\n              </button>\n            )}\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n", "import { useEffect, useState } from 'react'\nimport { useStore }            from '@/store/index.js'\n\nimport type { RelayPolicy } from '@/types/index.js'\n\nexport function RelayConfig() {\n  const store = useStore()\n\n  const [ relays, setRelays ]   = useState<RelayPolicy[]>(store.data.relays)\n  const [ relayUrl, setUrl ]    = useState('')\n  const [ changes, setChanges ] = useState<boolean>(false)\n  const [ error, setError ]     = useState<string | null>(null)\n  const [ saved, setSaved ]     = useState<boolean>(false)\n\n  // Update the peer policies in the store.\n  const update = () => {\n    // TODO: PWA storage update\n    store.update({ relays })\n    setChanges(false)\n    setSaved(true)\n    setTimeout(() => setSaved(false), 1500)\n  }\n\n  // Discard changes by resetting local state from store\n  const cancel = () => {\n    setRelays(store.data.relays)\n    setChanges(false)\n  }\n  \n  // Update relay enabled status locally\n  const update_relay = (idx: number, key: 'read' | 'write') => {\n    setRelays(prev => {\n      const updated = [ ...prev ]\n      updated[idx] = {\n        ...updated[idx],\n        [key]: !updated[idx][key]\n      }\n      return updated\n    })\n    setChanges(true)\n  }\n  \n  // Add a new relay to local state\n  const add_relay = () => {  \n    if (!relayUrl.trim()) return\n    \n    if (!(relayUrl.startsWith('wss://') || relayUrl.startsWith('ws://'))) {\n      setError('Relay URL must start with wss:// or ws://')\n    } else if (!validateUrl(relayUrl)) {\n      setError('Invalid URL format')\n    } else if (relays.some(relay => relay.url === relayUrl)) {\n      setError('Relay already exists')\n    } else {\n      setRelays(prev => [...prev, { url: relayUrl, read: true, write: true }])\n      setUrl('')\n      setChanges(true)\n    }\n  }\n  \n  // Remove a relay from local state\n  const remove_relay = (idx: number) => {\n    setRelays(prev => prev.filter((_, i) => i !== idx))\n    setChanges(true)\n  }\n\n  useEffect(() => {\n    if (error !== null) setError(null)\n  }, [ relayUrl ])\n\n  useEffect(() => {\n    setRelays(store.data.relays)\n  }, [ store.data.relays ])\n  \n  return (\n    <div className=\"container\">\n      <h2 className=\"section-header\">Relay Connections</h2>\n      <p className=\"description\">Configure which relays your node will use to communicate. \"Read\" will enable listening for inbound requests, and \"Write\" will enable publishing outbound requests.</p>\n      \n      <table>\n        <thead>\n          <tr>\n            <th className=\"url-column\">Relay URL</th>\n            <th className=\"checkbox-cell\">Read</th>\n            <th className=\"checkbox-cell\">Write</th>\n            <th className=\"action-cell\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {relays.map((relay, idx) => (\n            <tr key={idx}>\n              <td>{relay.url}</td>\n              <td className=\"checkbox-cell\">\n                <input\n                  type=\"checkbox\"\n                  className=\"relay-checkbox\"\n                  checked={relay.read}\n                  onChange={() => update_relay(idx, 'read')}\n                />\n              </td>\n              <td className=\"checkbox-cell\">\n                <input\n                  type=\"checkbox\"\n                  className=\"relay-checkbox\"\n                  checked={relay.write}\n                  onChange={() => update_relay(idx, 'write')}\n                />\n              </td>\n              <td className=\"action-cell\">\n                <button \n                  onClick={() => remove_relay(idx)} \n                  className=\"button button-remove\"\n                >\n                  Remove\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      \n      <div className=\"input-group relay-controls\">\n        <input\n          type=\"text\"\n          value={relayUrl}\n          onChange={(e) => setUrl(e.target.value)}\n          placeholder=\"wss://relay.example.com\"\n          className=\"relay-input\"\n        />\n        <button onClick={add_relay} className=\"button add-relay-button\">\n          Add Relay\n        </button>\n      </div>\n      \n      <div className=\"action-buttons\">\n        <button \n          onClick={update}\n          disabled={!changes}\n          className={`button button-primary action-button ${saved ? 'saved-button' : ''}`}\n        >\n          {saved ? 'Saved' : 'Save'}\n        </button>\n        \n        {changes && (\n          <button \n            onClick={cancel}\n            className=\"button\"\n          >\n            Cancel\n          </button>\n        )}\n        <div className=\"notification-container\">\n          {error && <p className=\"error-text\">{error}</p>}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction validateUrl(url: string): boolean {\n  try {\n    new URL(url)\n    return true\n  } catch (e) {\n    return false\n  }\n}", "import { useStore } from '@/store/index.js'\n\nexport function ResetStore() {\n  const store = useStore()\n\n  // Update the peer policies in the store.\n  const reset = () => {\n    store.reset()\n  }\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"section-header\">Reset Store</h2>\n      <p className=\"description\">Reset the store to the initial state.</p>\n\n      <button \n        onClick={reset}\n        className=\"button\"\n      >\n        Reset Store\n      </button>\n    </div>\n  )\n}\n", "import { CredentialsConfig } from './creds.js'\nimport { PeerConfig }        from './peers.js'\nimport { RelayConfig }       from './relays.js'\nimport { ResetStore }        from './reset.js'\n\nexport function Settings () {\n  return (\n    <>\n      <CredentialsConfig />\n      <PeerConfig        />\n      <RelayConfig       />\n      <ResetStore        />\n    </>\n  )\n}\n", "export const NodeIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <path d=\"M12 4L20 8L12 12L4 8L12 4Z\" />\n      <path d=\"M4 8V16L12 20V12\" />\n      <path d=\"M20 8V16L12 20\" />\n    </svg>\n  );\n  \n  export const SettingsIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n      <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>\n    </svg>\n  );\n  \n  export const PermissionsIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect>\n      <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>\n    </svg>\n  );\n  \n  export const ConsoleIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <polyline points=\"4 17 10 11 4 5\"></polyline>\n      <line x1=\"12\" y1=\"19\" x2=\"20\" y2=\"19\"></line>\n    </svg>\n  );\n  \n  export const WalletIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <rect x=\"2\" y=\"5\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"></rect>\n      <line x1=\"16\" y1=\"12\" x2=\"16\" y2=\"12\"></line>\n      <path d=\"M22 10V8a2 2 0 0 0-2-2h-1\"></path>\n      <path d=\"M22 14v2a2 2 0 0 1-2 2h-1\"></path>\n    </svg>\n  );\n  \n  export const MempoolIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <ellipse cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\" />\n      <path d=\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3\" />\n      <path d=\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\" />\n    </svg>\n  );\n  \n  export const OnChainIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path>\n      <path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path>\n    </svg>\n  );\n  \n  // Info bar icons\n  export const TotalIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <path d=\"M20 7h-9\" />\n      <path d=\"M14 17H5\" />\n      <circle cx=\"5\" cy=\"7\" r=\"2\" />\n      <circle cx=\"20\" cy=\"17\" r=\"2\" />\n    </svg>\n  );\n  \n  export const SentIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <path d=\"M12 19V5\" />\n      <path d=\"m5 12 7-7 7 7\" />\n    </svg>\n  );\n  \n  export const ReceivedIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <path d=\"M12 5v14\" />\n      <path d=\"m19 12-7 7-7-7\" />\n    </svg>\n  );\n  \n  // Add copy, check, and refresh icons\n  \n  // Copy icon for clipboard functionality\n  export const CopyIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n      <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\n    </svg>\n  );\n  \n  // Check icon for successful copy operation\n  export const CheckIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <polyline points=\"20 6 9 17 4 12\"></polyline>\n    </svg>\n  );\n  \n  // Refresh icon for refreshing addresses\n  export const RefreshIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <path d=\"M23 4v6h-6\"></path>\n      <path d=\"M1 20v-6h6\"></path>\n      <path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10\"></path>\n      <path d=\"M20.49 15a9 9 0 0 1-14.85 3.36L1 14\"></path>\n    </svg>\n  );\n  \n  // QR Code icon for displaying QR codes\n  export const QrCodeIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <rect x=\"3\" y=\"3\" width=\"7\" height=\"7\"></rect>\n      <rect x=\"14\" y=\"3\" width=\"7\" height=\"7\"></rect>\n      <rect x=\"14\" y=\"14\" width=\"7\" height=\"7\"></rect>\n      <rect x=\"3\" y=\"14\" width=\"7\" height=\"7\"></rect>\n    </svg>\n  );", "import { Header } from './header.js'\nimport { Tabs }   from './tabs.js'\n\nexport function App () {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Tabs />\n    </div>\n  )\n}\n", "\n              const link = document.createElement('link');\n              link.rel = 'stylesheet';\n              link.href = 'styles/global.css';\n              document.head.appendChild(link);\n            ", "\n              const link = document.createElement('link');\n              link.rel = 'stylesheet';\n              link.href = 'styles/layout.css';\n              document.head.appendChild(link);\n            ", "\n              const link = document.createElement('link');\n              link.rel = 'stylesheet';\n              link.href = 'styles/node.css';\n              document.head.appendChild(link);\n            ", "\n              const link = document.createElement('link');\n              link.rel = 'stylesheet';\n              link.href = 'styles/settings.css';\n              document.head.appendChild(link);\n            "],
  "mappings": "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",
  "names": ["require_react_production_min", "__commonJSMin", "exports", "l", "n", "p", "q", "r", "t", "u", "v", "w", "x", "y", "z", "A", "a", "B", "C", "D", "E", "b", "e", "F", "G", "H", "I", "J", "K", "L", "M", "d", "c", "k", "h", "g", "f", "m", "N", "O", "escape", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "require_react", "__commonJSMin", "exports", "module", "require_scheduler_production_min", "__commonJSMin", "exports", "f", "a", "b", "c", "d", "e", "g", "h", "k", "w", "m", "C", "n", "x", "l", "p", "q", "r", "t", "u", "v", "y", "z", "A", "B", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "require_scheduler", "__commonJSMin", "exports", "module", "require_react_dom_production_min", "__commonJSMin", "exports", "aa", "ca", "p", "a", "b", "c", "da", "ea", "fa", "ha", "ia", "ja", "ka", "la", "ma", "oa", "pa", "d", "qa", "v", "e", "f", "g", "z", "ra", "sa", "ta", "ua", "va", "wa", "ya", "za", "Aa", "Ba", "Ca", "Da", "Ea", "Fa", "Ga", "Ha", "Ia", "Ja", "Ka", "A", "La", "Ma", "Na", "Oa", "h", "k", "Pa", "Qa", "Ra", "Sa", "Ta", "Ua", "Va", "Wa", "Xa", "Ya", "Za", "ab", "bb", "cb", "db", "eb", "fb", "gb", "hb", "ib", "jb", "kb", "lb", "mb", "nb", "ob", "pb", "qb", "rb", "sb", "tb", "ub", "vb", "wb", "xb", "yb", "zb", "Ab", "Bb", "Cb", "Db", "Eb", "Fb", "Gb", "Hb", "Ib", "Jb", "Kb", "Lb", "Mb", "Nb", "m", "Ob", "Pb", "Qb", "Rb", "Sb", "Tb", "Ub", "Vb", "Wb", "Xb", "Yb", "Zb", "$b", "ac", "bc", "cc", "dc", "B", "ec", "fc", "gc", "hc", "ic", "jc", "kc", "lc", "mc", "oc", "nc", "pc", "qc", "rc", "sc", "tc", "uc", "vc", "wc", "xc", "yc", "zc", "Ac", "Bc", "Cc", "C", "Dc", "Ec", "Fc", "Gc", "Hc", "Ic", "Jc", "Kc", "Lc", "Mc", "Nc", "Oc", "Pc", "Qc", "Rc", "Sc", "Tc", "Uc", "Vc", "Wc", "Xc", "Yc", "Zc", "$c", "ad", "bd", "cd", "dd", "ed", "fd", "gd", "hd", "id", "jd", "kd", "ld", "md", "nd", "od", "pd", "qd", "rd", "sd", "td", "ud", "vd", "wd", "xd", "yd", "Ad", "zd", "Bd", "Cd", "Dd", "Ed", "Fd", "Gd", "Hd", "Id", "Jd", "Kd", "Ld", "Md", "Nd", "Od", "Pd", "Qd", "Rd", "Sd", "Td", "Ud", "Vd", "Wd", "Xd", "Yd", "Zd", "$d", "ae", "be", "ce", "de", "ee", "fe", "ge", "he", "ie", "je", "ke", "le", "me", "ne", "oe", "pe", "qe", "re", "se", "te", "ue", "ve", "we", "ye", "ze", "xe", "Ae", "Be", "Ce", "De", "Ee", "Fe", "Ge", "He", "Ie", "Je", "Ke", "Le", "Me", "Ne", "Oe", "Pe", "Qe", "Re", "Se", "Te", "Ue", "Ve", "We", "Xe", "Ye", "Ze", "$e", "af", "bf", "cf", "df", "ef", "ff", "gf", "hf", "jf", "kf", "lf", "mf", "nf", "D", "of", "pf", "qf", "rf", "sf", "n", "t", "J", "x", "w", "u", "F", "tf", "uf", "vf", "wf", "na", "xa", "$a", "ba", "xf", "yf", "zf", "Af", "Bf", "Cf", "Df", "Ef", "Ff", "Gf", "Hf", "Jf", "If", "Kf", "Lf", "Mf", "Nf", "Of", "Pf", "Qf", "Rf", "Sf", "Tf", "Uf", "E", "G", "Vf", "H", "Wf", "Xf", "Yf", "Zf", "$f", "ag", "bg", "cg", "dg", "eg", "fg", "gg", "hg", "ig", "jg", "kg", "lg", "mg", "ng", "og", "pg", "qg", "rg", "sg", "tg", "ug", "vg", "wg", "xg", "yg", "I", "zg", "Ag", "Bg", "Cg", "Dg", "Eg", "Gg", "Hg", "Ig", "Jg", "Kg", "Lg", "Mg", "Ng", "Og", "Pg", "Qg", "Rg", "Sg", "Tg", "q", "r", "y", "l", "Ug", "Vg", "Wg", "Xg", "Yg", "Zg", "$g", "ah", "bh", "ch", "dh", "eh", "fh", "gh", "hh", "ih", "jh", "kh", "lh", "mh", "nh", "K", "oh", "ph", "qh", "rh", "sh", "th", "uh", "vh", "wh", "xh", "yh", "zh", "Ah", "Bh", "L", "Ch", "Dh", "Eh", "Fh", "Gh", "Hh", "M", "N", "O", "Ih", "Jh", "Kh", "Lh", "P", "Mh", "Nh", "Oh", "Ph", "Qh", "Rh", "Sh", "Th", "Uh", "Vh", "Wh", "Xh", "Yh", "Zh", "$h", "ai", "bi", "ci", "Q", "di", "ei", "fi", "gi", "hi", "ii", "ji", "ki", "li", "mi", "ni", "oi", "pi", "qi", "ri", "si", "ti", "ui", "vi", "wi", "xi", "yi", "zi", "Ai", "R", "Bi", "Ci", "Di", "Ei", "Fi", "Gi", "Hi", "Ii", "Ji", "Ki", "Li", "Mi", "Ni", "Oi", "Pi", "Qi", "Ri", "Si", "Ti", "Ui", "Vi", "Wi", "Xi", "Yi", "Zi", "$i", "aj", "bj", "cj", "dj", "ej", "fj", "gj", "hj", "ij", "jj", "kj", "lj", "mj", "nj", "oj", "pj", "qj", "rj", "sj", "tj", "uj", "vj", "wj", "xj", "yj", "zj", "Aj", "Bj", "Cj", "Dj", "S", "Ej", "Fj", "T", "Gj", "Hj", "Ij", "Jj", "U", "Kj", "Lj", "W", "Mj", "Nj", "Oj", "Pj", "Qj", "Rj", "Sj", "Tj", "Uj", "Vj", "Wj", "X", "Xj", "Yj", "Zj", "ak", "bk", "ck", "dk", "ek", "fk", "gk", "hk", "ik", "jk", "kk", "lk", "mk", "nk", "ok", "Y", "Z", "pk", "qk", "rk", "sk", "tk", "uk", "vk", "wk", "xk", "yk", "zk", "Ak", "Bk", "Ck", "Dk", "Ek", "Fk", "Gk", "Hk", "Ik", "Jk", "Kk", "Lk", "Mk", "Nk", "Ok", "Pk", "Qk", "Rk", "Sk", "Tk", "Uk", "Vk", "Wk", "Xk", "Yk", "Zk", "$k", "al", "bl", "cl", "dl", "el", "fl", "gl", "hl", "il", "jl", "kl", "ll", "ml", "nl", "ol", "pl", "ql", "rl", "sl", "tl", "ul", "vl", "require_react_dom", "__commonJSMin", "exports", "module", "checkDCE", "err", "require_client", "__commonJSMin", "exports", "m", "i", "require_react_jsx_runtime_production_min", "__commonJSMin", "exports", "f", "k", "l", "m", "n", "p", "q", "c", "a", "g", "b", "d", "e", "h", "require_jsx_runtime", "__commonJSMin", "exports", "module", "import_react", "import_client", "crypto", "isBytes", "a", "anumber", "n", "abytes", "b", "lengths", "ahash", "h", "aexists", "instance", "checkFinished", "aoutput", "out", "min", "clean", "arrays", "i", "createView", "arr", "rotr", "word", "shift", "utf8ToBytes", "str", "toBytes", "data", "utf8ToBytes", "abytes", "concatBytes", "arrays", "sum", "i", "a", "abytes", "res", "pad", "Hash", "createHasher", "hashCons", "hashC", "msg", "toBytes", "tmp", "randomBytes", "bytesLength", "crypto", "setBigUint64", "view", "byteOffset", "value", "isLE", "_32n", "_u32_max", "wh", "wl", "h", "Chi", "a", "b", "c", "Maj", "HashMD", "Hash", "blockLen", "outputLen", "padOffset", "createView", "data", "aexists", "toBytes", "abytes", "buffer", "len", "pos", "take", "dataView", "out", "aoutput", "clean", "i", "oview", "outLen", "state", "res", "to", "length", "finished", "destroyed", "SHA256_IV", "SHA256_K", "SHA256_W", "SHA256", "HashMD", "outputLen", "SHA256_IV", "A", "B", "C", "D", "E", "F", "G", "H", "view", "offset", "i", "W15", "W2", "s0", "rotr", "s1", "sigma1", "T1", "Chi", "T2", "Maj", "clean", "sha256", "createHasher", "SHA256", "sha256", "assert_exports", "__export", "is_hex", "is_json", "is_prefix", "is_safe_num", "within_size", "data", "size", "hex", "str", "e", "num", "actual", "target", "ec", "dc", "strToBytes", "str", "bytesToStr", "bytes", "hex_size", "hexstr", "size", "is_hex", "len", "hexToBytes", "endian", "use_le", "buffer", "dataView", "offset", "i", "char", "num", "bytesToHex", "chars", "isBytes", "a", "abytes", "b", "lengths", "isArrayOf", "isString", "arr", "item", "afn", "input", "astr", "label", "anumber", "n", "aArr", "astrArr", "anumArr", "chain", "args", "id", "wrap", "c", "encode", "x", "decode", "alphabet", "letters", "lettersA", "len", "indexes", "l", "i", "digits", "letter", "join", "separator", "from", "to", "padding", "bits", "chr", "data", "end", "convertRadix", "data", "from", "to", "aArr", "pos", "res", "digits", "d", "anumber", "dlen", "carry", "done", "i", "digit", "fromCarry", "digitBase", "div", "rounded", "gcd", "a", "b", "radix2carry", "powers", "convertRadix2", "padding", "max", "mask", "n", "pow", "radix", "num", "_256", "bytes", "isBytes", "anumArr", "radix2", "bits", "revPadding", "unsafeWrapper", "fn", "afn", "args", "e", "checksum", "len", "sum", "payload", "oldChecksum", "newChecksum", "hasBase64Builtin", "base64", "b", "abytes", "s", "astr", "chain", "radix2", "alphabet", "padding", "join", "base64urlnopad", "chain", "radix2", "alphabet", "join", "genBase58", "abc", "radix", "base58", "createBase58check", "sha256", "chain", "checksum", "data", "base58", "base58check", "BECH_ALPHABET", "alphabet", "join", "POLYMOD_GENERATORS", "bech32Polymod", "pre", "b", "chk", "i", "bechChecksum", "prefix", "words", "encodingConst", "len", "c", "v", "convertRadix2", "powers", "genBech32", "encoding", "ENCODING_CONST", "_words", "radix2", "fromWords", "toWords", "fromWordsUnsafe", "unsafeWrapper", "encode", "limit", "astr", "isBytes", "anumArr", "plen", "actualLength", "lowered", "sum", "decode", "str", "slen", "sepIndex", "decodeUnsafe", "decodeToBytes", "encodeFromBytes", "bytes", "bech32", "bech32m", "B58chk", "data", "base58check", "sha256", "Base64", "base64", "B64url", "base64urlnopad", "Bech32", "bech32", "prefix", "words", "limit", "Bech32m", "bech32m", "_0n", "_255n", "_256n", "big_size", "big", "bigToBytes", "size", "endian", "use_le", "buffer", "dataView", "offset", "byte", "num", "bytesToBig", "bytes", "i", "binToBytes", "binary", "bins", "bytes", "i", "ct", "byte", "j", "bytesToBin", "bin", "count", "num", "num_size", "num", "numToBytes", "size", "endian", "use_le", "buffer", "dataView", "offset", "byte", "bytesToNum", "bytes", "i", "is_safe_num", "utils_exports", "__export", "bigint_replacer", "bigint_reviver", "is_bytes", "is_hex", "join_array", "parse_data", "set_buffer", "is_hex", "input", "is_bytes", "e", "set_buffer", "data", "size", "endian", "within_size", "buffer", "offset", "join_array", "arr", "i", "len", "buff", "a", "bigint_replacer", "_", "v", "bigint_reviver", "parse_data", "data_blob", "chunk_size", "total_size", "count", "chunks", "idx", "buffer_data", "data", "size", "endian", "set_buffer", "bytes", "e", "join_array", "hexToBytes", "bigToBytes", "numToBytes", "_Buff", "size", "rand", "randomBytes", "stamp", "data", "endian", "buffer", "buffer_data", "Stream", "bytes", "bytesToNum", "bytesToBig", "bytesToBin", "digest", "sha256", "reviver", "bigint_reviver", "str", "bytesToStr", "prefix", "limit", "encode", "to_words", "Bech32", "words", "Bech32m", "bytesToHex", "B58chk", "Base64", "B64url", "arr", "start", "end", "array", "offset", "begin", "b", "args", "e", "joined", "join_array", "hex", "num", "numToBuff", "bigToBuff", "binToBuff", "rawToBuff", "strToBuff", "hexToBuff", "jsonToBuff", "base64ToBuff", "b64urlToBuff", "bech32ToBuff", "bech32mToBuff", "b58chkToBuff", "strToBytes", "parse_data", "is_bytes", "is_hex", "is_equal", "Buff", "number", "binToBytes", "bigint", "replacer", "bigint_replacer", "chk_prefix", "decode", "to_bytes", "is_prefix", "data_blob", "chunk_size", "total_size", "a", "chunk", "HMAC", "Hash", "hash", "_key", "ahash", "key", "toBytes", "blockLen", "pad", "clean", "buf", "aexists", "out", "abytes", "to", "oHash", "iHash", "finished", "destroyed", "outputLen", "hmac", "message", "_0n", "_1n", "isBytes", "a", "abytes", "item", "abool", "title", "value", "numberToHexUnpadded", "num", "hex", "hexToNumber", "hasHexBuiltin", "hexes", "_", "i", "bytesToHex", "bytes", "asciis", "asciiToBase16", "ch", "hexToBytes", "hl", "al", "array", "ai", "hi", "n1", "n2", "char", "bytesToNumberBE", "bytesToNumberLE", "numberToBytesBE", "n", "len", "numberToBytesLE", "ensureBytes", "title", "hex", "expectedLength", "res", "hexToBytes", "e", "isBytes", "len", "concatBytes", "arrays", "sum", "i", "a", "abytes", "pad", "utf8ToBytes", "str", "isPosBig", "n", "_0n", "inRange", "min", "max", "aInRange", "title", "bitLen", "len", "_1n", "bitMask", "n", "_1n", "u8n", "len", "u8fr", "arr", "createHmacDrbg", "hashLen", "qByteLen", "hmacFn", "v", "k", "i", "reset", "h", "b", "reseed", "seed", "gen", "out", "sl", "concatBytes", "pred", "res", "validatorFns", "val", "isBytes", "object", "validateObject", "validators", "optValidators", "checkField", "fieldName", "type", "isOptional", "checkVal", "memoized", "fn", "map", "arg", "args", "val", "computed", "_0n", "_1n", "_2n", "_3n", "_4n", "_5n", "_8n", "mod", "a", "b", "result", "pow2", "x", "power", "modulo", "res", "_0n", "invert", "number", "a", "mod", "b", "y", "_1n", "u", "v", "q", "r", "m", "n", "sqrt3mod4", "Fp", "p1div4", "_4n", "root", "sqrt5mod8", "p5div8", "_5n", "_8n", "n2", "_2n", "nv", "tonelliShanks", "P", "Q", "S", "Z", "_Fp", "Field", "FpLegendre", "cc", "Q1div2", "M", "c", "t", "R", "i", "t_tmp", "exponent", "FpSqrt", "_3n", "FIELD_FIELDS", "validateField", "field", "initial", "opts", "map", "val", "validateObject", "FpPow", "Fp", "num", "power", "_0n", "_1n", "p", "d", "FpInvertBatch", "nums", "passZero", "inverted", "multipliedAcc", "acc", "i", "invertedAcc", "FpLegendre", "Fp", "n", "p1mod2", "_1n", "_2n", "powered", "yes", "zero", "no", "nLength", "n", "nBitLength", "anumber", "_nBitLength", "nByteLength", "Field", "ORDER", "bitLen", "isLE", "redef", "_0n", "BITS", "BYTES", "sqrtP", "f", "bitMask", "_1n", "num", "mod", "lhs", "rhs", "power", "FpPow", "invert", "FpSqrt", "numberToBytesLE", "numberToBytesBE", "bytes", "bytesToNumberLE", "bytesToNumberBE", "lst", "FpInvertBatch", "a", "b", "c", "getFieldBytesLength", "fieldOrder", "bitLength", "getMinHashLength", "length", "mapHashToField", "key", "isLE", "len", "fieldLen", "minLen", "num", "bytesToNumberLE", "bytesToNumberBE", "reduced", "mod", "_1n", "numberToBytesLE", "numberToBytesBE", "_0n", "_1n", "constTimeNegate", "condition", "item", "neg", "validateW", "W", "bits", "calcWOpts", "scalarBits", "windows", "windowSize", "maxNumber", "mask", "bitMask", "shiftBy", "calcOffsets", "n", "window", "wOpts", "wbits", "nextN", "offsetStart", "offset", "isZero", "isNeg", "isNegF", "validateMSMPoints", "points", "c", "p", "i", "validateMSMScalars", "scalars", "field", "s", "pointPrecomputes", "pointWindowSizes", "getW", "P", "wNAF", "elm", "d", "base", "precomputes", "f", "wo", "offsetF", "acc", "transform", "comp", "prev", "pippenger", "fieldN", "plength", "slength", "zero", "bitLen", "MASK", "buckets", "lastBits", "sum", "j", "scalar", "resI", "sumI", "validateBasic", "curve", "validateField", "validateObject", "__spreadProps", "__spreadValues", "nLength", "validateSigVerOpts", "opts", "abool", "validatePointOpts", "curve", "validateBasic", "validateObject", "endo", "Fp", "a", "__spreadValues", "DERErr", "m", "DER", "tag", "data", "E", "dataLen", "len", "numberToHexUnpadded", "lenLen", "pos", "first", "isLong", "length", "lengthBytes", "b", "v", "num", "_0n", "hex", "bytesToNumberBE", "int", "tlv", "ensureBytes", "seqBytes", "seqLeftBytes", "rBytes", "rLeftBytes", "sBytes", "sLeftBytes", "sig", "rs", "ss", "seq", "numToSizedHex", "size", "bytesToHex", "numberToBytesBE", "_1n", "_2n", "_3n", "_4n", "weierstrassPoints", "CURVE", "Fn", "Field", "toBytes", "_c", "point", "_isCompressed", "concatBytes", "fromBytes", "bytes", "tail", "x", "y", "weierstrassEquation", "x2", "x3", "isValidXY", "left", "right", "_4a3", "_27b2", "isWithinCurveOrder", "inRange", "normPrivateKeyToScalar", "key", "lengths", "nByteLength", "wrapPrivateKey", "N", "isBytes", "error", "mod", "aInRange", "aprjpoint", "other", "Point", "toAffineMemo", "memoized", "p", "iz", "z", "is0", "ax", "ay", "zz", "assertValidMemo", "px", "py", "pz", "i", "points", "toInv", "FpInvertBatch", "P", "privateKey", "scalars", "pippenger", "windowSize", "wnaf", "X1", "Y1", "Z1", "X2", "Y2", "Z2", "U1", "U2", "b3", "X3", "Y3", "Z3", "t0", "t1", "t2", "t3", "t4", "t5", "n", "sc", "I", "k1neg", "k1", "k2neg", "k2", "k1p", "k2p", "d", "scalar", "fake", "f1p", "f2p", "f", "Q", "G", "mul", "sum", "cofactor", "isTorsionFree", "clearCofactor", "isCompressed", "nBitLength", "wNAF", "validateOpts", "weierstrass", "curveDef", "CURVE_ORDER", "compressedLen", "uncompressedLen", "modN", "invN", "invert", "__spreadProps", "cat", "head", "y2", "sqrtError", "suffix", "isYOdd", "cl", "ul", "isBiggerThanHalfOrder", "number", "HALF", "normalizeS", "s", "slcNum", "from", "to", "Signature", "r", "recovery", "l", "msgHash", "rec", "h", "bits2int_modN", "radj", "prefix", "R", "ir", "u1", "u2", "hexToBytes", "utils", "getMinHashLength", "mapHashToField", "getPublicKey", "isProbPub", "item", "fpl", "compLen", "uncompLen", "getSharedSecret", "privateA", "publicB", "bits2int", "delta", "ORDER_MASK", "bitMask", "int2octets", "prepSig", "defaultSigOpts", "k", "hash", "randomBytes", "lowS", "prehash", "ent", "h1int", "seedArgs", "e", "seed", "k2sig", "kBytes", "ik", "q", "normS", "defaultVerOpts", "sign", "privKey", "C", "createHmacDrbg", "verify", "signature", "publicKey", "_a", "sg", "format", "isHex", "isObj", "_sig", "derError", "is", "getHash", "hash", "key", "msgs", "hmac", "concatBytes", "randomBytes", "createCurve", "curveDef", "defHash", "create", "weierstrass", "__spreadValues", "__spreadProps", "os2ip", "bytesToNumberBE", "i2osp", "value", "length", "anum", "res", "i", "strxor", "a", "b", "arr", "item", "expand_message_xmd", "msg", "DST", "lenInBytes", "H", "abytes", "concatBytes", "utf8ToBytes", "b_in_bytes", "r_in_bytes", "ell", "DST_prime", "Z_pad", "l_i_b_str", "b_0", "args", "expand_message_xof", "k", "dkLen", "hash_to_field", "count", "options", "validateObject", "p", "m", "hash", "expand", "_DST", "log2p", "L", "len_in_bytes", "prb", "u", "e", "j", "elm_offset", "tv", "mod", "secp256k1P", "secp256k1N", "_0n", "_1n", "_2n", "divNearest", "a", "b", "sqrtMod", "y", "P", "_3n", "_6n", "_11n", "_22n", "_23n", "_44n", "_88n", "b2", "b3", "b6", "pow2", "b9", "b11", "b22", "b44", "b88", "b176", "b220", "b223", "t1", "t2", "root", "Fpk1", "Field", "secp256k1", "createCurve", "k", "n", "a1", "b1", "a2", "POW_2_128", "c1", "c2", "k1", "mod", "k2", "k1neg", "k2neg", "sha256", "TAGGED_HASH_PREFIXES", "taggedHash", "tag", "messages", "tagP", "tagH", "c", "concatBytes", "pointToBytes", "point", "numTo32b", "numberToBytesBE", "modP", "x", "modN", "Point", "GmulAdd", "Q", "schnorrGetExtPubKey", "priv", "d_", "p", "lift_x", "aInRange", "xx", "num", "bytesToNumberBE", "challenge", "args", "schnorrGetPublicKey", "privateKey", "schnorrSign", "message", "auxRand", "randomBytes", "m", "ensureBytes", "px", "d", "t", "rand", "k_", "rx", "e", "sig", "schnorrVerify", "signature", "publicKey", "pub", "r", "inRange", "s", "R", "error", "schnorr", "isBytes", "a", "abool", "b", "abytes", "b", "lengths", "isBytes", "aexists", "instance", "checkFinished", "aoutput", "out", "abytes", "min", "u8", "arr", "u32", "clean", "arrays", "i", "createView", "isLE", "utf8ToBytes", "str", "toBytes", "data", "utf8ToBytes", "isBytes", "copyBytes", "equalBytes", "a", "b", "diff", "i", "wrapCipher", "params", "constructor", "wrappedCipher", "key", "args", "abytes", "isLE", "nonce", "tagl", "cipher", "checkOutput", "fnLength", "output", "called", "data", "getOutput", "expectedLength", "out", "onlyAligned", "isAligned32", "setBigUint64", "view", "byteOffset", "value", "_32n", "_u32_max", "wh", "wl", "h", "u64Lengths", "dataLength", "aadLength", "abool", "num", "createView", "bytes", "copyBytes", "BLOCK_SIZE", "ZEROS16", "ZEROS32", "u32", "POLY", "mul2", "s0", "s1", "s2", "s3", "hiBit", "swapLE", "n", "_toGHASHKey", "k", "carry", "i", "t", "estimateWindow", "bytes", "GHASH", "key", "expectedLength", "toBytes", "abytes", "kView", "createView", "k0", "k1", "k2", "k3", "doubles", "W", "windows", "windowSize", "items", "w", "byte", "j", "d0", "d1", "d2", "d3", "o0", "o1", "o2", "o3", "mask", "num", "bytePos", "bitPos", "bit", "e0", "e1", "e2", "e3", "data", "aexists", "b32", "blocks", "left", "clean", "elm", "out", "aoutput", "o32", "res", "Polyval", "ghKey", "copyBytes", "wrapConstructorWithKey", "hashCons", "hashC", "msg", "tmp", "ghash", "polyval", "BLOCK_SIZE", "BLOCK_SIZE32", "EMPTY_BLOCK", "POLY", "mul2", "n", "mul", "a", "b", "res", "sbox", "t", "i", "x", "box", "clean", "rotr32_8", "n", "rotl32_8", "genTtable", "sbox", "fn", "T0", "_", "j", "T1", "rotl32_8", "T2", "T3", "T01", "T23", "sbox2", "i", "idx", "tableEncoding", "s", "mul", "xPowers", "p", "i", "x", "mul2", "expandKeyLE", "key", "abytes", "len", "sbox2", "tableEncoding", "toClean", "isAligned32", "copyBytes", "k32", "u32", "Nk", "subByte", "n", "applySbox", "xk", "t", "rotr32_8", "clean", "apply0123", "T01", "T23", "s0", "s1", "s2", "s3", "applySbox", "sbox2", "encrypt", "xk", "tableEncoding", "k", "rounds", "i", "t0", "t1", "t2", "t3", "ctr32", "xk", "isLE", "nonce", "src", "dst", "abytes", "BLOCK_SIZE", "getOutput", "ctr", "c32", "u32", "view", "createView", "src32", "dst32", "ctrPos", "srcLen", "ctrNum", "s0", "s1", "s2", "s3", "encrypt", "i", "start", "BLOCK_SIZE32", "b32", "buf", "u8", "pos", "clean", "computeTag", "fn", "isLE", "key", "data", "AAD", "aadLength", "h", "num", "u64Lengths", "res", "clean", "gcm", "wrapCipher", "nonce", "tagLength", "_computeTag", "authKey", "tagMask", "tag", "ghash", "i", "deriveKeys", "xk", "expandKeyLE", "EMPTY_BLOCK", "counter", "ctr32", "nonceLen", "view", "createView", "setBigUint64", "plaintext", "out", "toClean", "isAligned32", "copyBytes", "ciphertext", "passedTag", "equalBytes", "get_pubkey", "seckey", "pbytes", "schnorr", "Buff", "get_shared_secret", "peer_pk", "pubkey", "sbytes", "secp256k1", "sign_msg", "message", "sig", "verify_sig", "signature", "encrypt_content", "secret", "content", "iv", "cbytes", "vector", "encrypted", "gcm", "decrypt_content", "encryped", "decrypted", "gen_message_id", "Buff", "get_event_id", "template", "preimg", "get_tags", "event", "tag", "e", "is_recipient", "pubkey", "util", "val", "assertIs", "_arg", "assertNever", "_x", "items", "obj", "item", "validKeys", "k", "filtered", "e", "object", "keys", "key", "arr", "checker", "joinValues", "array", "separator", "_", "value", "objectUtil", "first", "second", "__spreadValues", "ZodParsedType", "getParsedType", "data", "ZodIssueCode", "quotelessJson", "ZodError", "_ZodError", "issues", "sub", "subs", "actualProto", "_mapper", "mapper", "issue", "fieldErrors", "processError", "error", "curr", "i", "el", "formErrors", "errorMap", "_ctx", "message", "overrideErrorMap", "setErrorMap", "map", "getErrorMap", "makeIssue", "params", "path", "errorMaps", "issueData", "fullPath", "fullIssue", "__spreadProps", "errorMessage", "maps", "m", "EMPTY_PATH", "addIssueToContext", "ctx", "overrideMap", "x", "ParseStatus", "_ParseStatus", "status", "results", "arrayValue", "s", "INVALID", "pairs", "syncPairs", "pair", "finalObject", "DIRTY", "OK", "isAborted", "isDirty", "isValid", "isAsync", "__classPrivateFieldGet", "receiver", "state", "kind", "f", "__classPrivateFieldSet", "errorUtil", "message", "_ZodEnum_cache", "_ZodNativeEnum_cache", "ParseInputLazyPath", "parent", "value", "path", "key", "handleResult", "ctx", "result", "isValid", "error", "ZodError", "processCreateParams", "params", "errorMap", "invalid_type_error", "required_error", "description", "iss", "_a", "_b", "ZodType", "input", "getParsedType", "ParseStatus", "isAsync", "data", "err", "maybeAsyncResult", "check", "getIssueProperties", "val", "setError", "__spreadValues", "ZodIssueCode", "refinementData", "refinement", "ZodEffects", "ZodFirstPartyTypeKind", "def", "ZodOptional", "ZodNullable", "ZodArray", "ZodPromise", "option", "ZodUnion", "incoming", "ZodIntersection", "transform", "__spreadProps", "defaultValueFunc", "ZodDefault", "ZodBranded", "catchValueFunc", "ZodCatch", "This", "target", "ZodPipeline", "ZodReadonly", "cuidRegex", "cuid2Regex", "ulidRegex", "uuidRegex", "nanoidRegex", "jwtRegex", "durationRegex", "emailRegex", "_emojiRegex", "emojiRegex", "ipv4Regex", "ipv4CidrRegex", "ipv6Regex", "ipv6CidrRegex", "base64Regex", "base64urlRegex", "dateRegexSource", "dateRegex", "timeRegexSource", "args", "secondsRegexSource", "secondsQuantifier", "timeRegex", "datetimeRegex", "regex", "opts", "isValidIP", "ip", "version", "isValidJWT", "jwt", "alg", "header", "base64", "decoded", "isValidCidr", "ZodString", "_ZodString", "ZodParsedType", "addIssueToContext", "INVALID", "status", "tooBig", "tooSmall", "util", "validation", "options", "minLength", "maxLength", "len", "ch", "min", "max", "floatSafeRemainder", "step", "valDecCount", "stepDecCount", "decCount", "valInt", "stepInt", "ZodNumber", "_ZodNumber", "kind", "inclusive", "ZodBigInt", "_ZodBigInt", "ZodBoolean", "OK", "ZodDate", "_ZodDate", "minDate", "maxDate", "ZodSymbol", "ZodUndefined", "ZodNull", "ZodAny", "ZodUnknown", "ZodNever", "ZodVoid", "_ZodArray", "item", "i", "schema", "deepPartialify", "ZodObject", "newShape", "fieldSchema", "ZodTuple", "_ZodObject", "shape", "keys", "shapeKeys", "extraKeys", "pairs", "keyValidator", "unknownKeys", "catchall", "syncPairs", "pair", "issue", "_c", "_d", "defaultError", "augmentation", "merging", "index", "mask", "newField", "createZodEnum", "handleResults", "results", "unionErrors", "childCtx", "dirty", "issues", "types", "getDiscriminator", "type", "ZodLazy", "ZodLiteral", "ZodEnum", "ZodNativeEnum", "ZodDiscriminatedUnion", "_ZodDiscriminatedUnion", "discriminator", "discriminatorValue", "optionsMap", "discriminatorValues", "mergeValues", "a", "b", "aType", "bType", "bKeys", "sharedKeys", "newObj", "sharedValue", "newArray", "itemA", "itemB", "handleParsed", "parsedLeft", "parsedRight", "isAborted", "merged", "isDirty", "left", "right", "_ZodTuple", "items", "itemIndex", "x", "rest", "schemas", "ZodRecord", "_ZodRecord", "keyType", "valueType", "first", "second", "third", "ZodMap", "finalMap", "ZodSet", "_ZodSet", "finalizeSet", "elements", "parsedSet", "element", "minSize", "maxSize", "size", "ZodFunction", "_ZodFunction", "makeArgsIssue", "makeIssue", "getErrorMap", "makeReturnsIssue", "returns", "fn", "me", "parsedArgs", "e", "parsedReturns", "returnType", "func", "getter", "values", "_ZodEnum", "expectedValues", "__classPrivateFieldGet", "__classPrivateFieldSet", "enumValues", "newDef", "opt", "nativeEnumValues", "promisified", "effect", "checkCtx", "arg", "processed", "DIRTY", "executeRefinement", "acc", "inner", "base", "preprocess", "newCtx", "ZodNaN", "BRAND", "_ZodPipeline", "inResult", "freeze", "cleanParams", "p", "custom", "_params", "fatal", "r", "_fatal", "late", "instanceOfType", "cls", "stringType", "numberType", "nanType", "bigIntType", "booleanType", "dateType", "symbolType", "undefinedType", "nullType", "anyType", "unknownType", "neverType", "voidType", "arrayType", "objectType", "strictObjectType", "unionType", "discriminatedUnionType", "intersectionType", "tupleType", "recordType", "mapType", "setType", "functionType", "lazyType", "literalType", "enumType", "nativeEnumType", "promiseType", "effectsType", "optionalType", "nullableType", "preprocessType", "pipelineType", "ostring", "onumber", "oboolean", "coerce", "NEVER", "z", "setErrorMap", "EMPTY_PATH", "objectUtil", "quotelessJson", "big", "z", "bool", "date", "num", "uint", "str", "stamp", "url", "any", "hex", "literal", "hex16", "hex20", "hex32", "hex64", "pubkey", "base58", "base64", "b64url", "bech32", "base_default", "tags", "base_default", "template", "z", "unsigned", "signed", "event_default", "mid", "base_default", "payload", "topic", "envelope", "z", "msg_default", "schema_default", "base_default", "event_default", "msg_default", "Assert", "ok", "value", "message", "exists", "input", "err_msg", "size", "bytes", "Buff", "now", "parse_error", "err", "create_event", "config", "payload", "peer_pk", "seckey", "_a", "created_at", "now", "pubkey", "get_pubkey", "secret", "get_shared_secret", "content", "encrypt_content", "event", "__spreadProps", "__spreadValues", "sign_event", "template", "id", "get_event_id", "sig", "sign_msg", "verify_event", "__objRest", "parsed", "schema_default", "vid", "verify_sig", "decrypt_payload", "event", "seckey", "error", "verify_event", "pubkey", "get_pubkey", "is_recipient", "secret", "get_shared_secret", "content", "decrypt_content", "finalize_message", "template", "_a", "id", "gen_message_id", "__spreadProps", "__spreadValues", "create_payload", "tag", "data", "err", "parse_envelope", "envelope", "parsed", "schema_default", "verify_relays", "relays", "schema_default", "verify_seckey", "seckey", "hash_exports", "__export", "H1", "H2", "H3", "H4", "H5", "_0n", "_1n", "_P", "_N", "CURVE", "secp256k1", "FIELD", "Field", "POINT", "DOMAIN", "const_default", "POINT", "_N", "_P", "const_default", "mod_n", "x", "mod", "str_to_bytes", "str", "lift_x", "pubkey", "bytes", "Buff", "POINT", "OPT", "_N", "sha256", "get_opts", "DST", "__spreadProps", "__spreadValues", "H1", "msg", "DOMAIN", "nums", "hash_to_field", "Buff", "H2", "H3", "H4", "str_to_bytes", "hash", "H5", "group_exports", "__export", "DeserializeElement", "DeserializeScalar", "ElementAdd", "ElementAddMany", "Identity", "Order", "RandomScalar", "ScalarBaseMulti", "ScalarMulti", "SerializeElement", "SerializeScalar", "assert_exports", "__export", "equal_arr_size", "exists", "is_equal_set", "is_included", "is_unique_set", "ok", "size", "ok", "value", "message", "exists", "input", "size", "bytes", "Buff", "is_included", "array", "item", "is_unique_set", "x", "e", "is_equal_set", "equal_arr_size", "array_a", "array_b", "taghash", "tag", "hash", "Buff", "hash340", "data", "bytes", "e", "POINT", "_0n", "_1n", "_N", "const_default", "Order", "Identity", "RandomScalar", "bigint", "Buff", "mod_n", "ElementAdd", "A", "B", "assert_exports", "C", "ElementAddMany", "elem", "sum", "p", "c", "ScalarMulti", "k", "pt", "ScalarBaseMulti", "secp256k1", "SerializeElement", "DeserializeElement", "bytes", "hex", "SerializeScalar", "scalar", "DeserializeScalar", "get_pubkey", "secret", "scalar", "Buff", "point", "group_exports", "get_challenge", "pnonce", "pubkey", "message", "grp_pk", "convert_pubkey", "grp_pn", "assert_exports", "hash340", "type", "pub", "Buff", "get_nonce_ids", "pnonces", "pn", "get_commits_prefix", "enc_group_commit", "sorted_pnonces", "a", "b", "idx", "hidden_pn", "binder_pn", "enc_commit", "group_exports", "Buff", "get_group_prefix", "group_pk", "message", "msg_bytes", "msg_hash", "hash_exports", "commit_list", "commit_hash", "get_bind_factor", "binders", "bind", "get_group_binders", "nonces", "prefix", "scalar", "rho_input", "get_group_pubnonce", "group_commit", "hidden_elem", "binding_elem", "bind_factor", "factored_elem", "assert_exports", "get_point_state", "element", "tweaks", "ints", "e", "Buff", "pos", "_1n", "neg", "_N", "point", "parity", "state", "tweak", "_0n", "t", "tG", "ScalarBaseMulti", "ElementAdd", "mod_n", "get_group_key_context", "pubkey", "tweaks", "int_pk", "Buff", "int_pt", "lift_x", "group_pt", "get_point_state", "group_pk", "get_group_commit_context", "key_ctx", "pnonces", "message", "group_pubkey", "bind_prefix", "get_group_prefix", "bind_factors", "get_group_binders", "group_pn", "get_group_pubnonce", "indexes", "get_nonce_ids", "challenge", "get_challenge", "get_group_signing_ctx", "com_ctx", "__spreadValues", "interpolate_x", "L", "x", "assert_exports", "numerator", "_1n", "denominator", "x_j", "mod_n", "FIELD", "calc_lagrange_coeff", "P", "create_ecdh_share", "members", "share", "pubkey", "mbrs", "idx", "i", "secret", "Buff", "point", "lift_x", "L_coeff", "calc_lagrange_coeff", "_0n", "P_coeff", "mod_n", "ecdh_pt", "ecdh_pk", "group_exports", "derive_ecdh_secret", "shares", "pt", "assert_exports", "sign_msg", "ctx", "share", "snonce", "bind_factors", "challenge", "indexes", "Q", "bind_factor", "get_bind_factor", "coefficient", "interpolate_x", "snonce_h", "Buff", "snonce_b", "seckey", "lift_x", "CURVE", "sk", "mod_n", "nk", "ps", "get_pubkey", "combine_partial_sigs", "context", "psigs", "pnonces", "group_pk", "message", "commit_prefix", "get_group_prefix", "group_binders", "get_group_binders", "group_pnonce", "get_group_pubnonce", "e", "acc", "nxt", "_0n", "twk", "s", "verify_partial_sig", "pnonce", "share_pk", "share_psig", "group_pn", "binder", "hidden_elem", "binder_elem", "public_elem", "group_exports", "_1n", "commit_elem", "nonce_elem", "lambda_i", "state", "chal", "sig", "sG", "pki", "R", "create_ecdh_pkg", "members", "ecdh_pk", "secshare", "ecdh_share", "create_ecdh_share", "combine_ecdh_pkgs", "pkgs", "keyshares", "e", "derive_ecdh_secret", "big", "z", "bool", "date", "num", "uint", "str", "stamp", "any", "sats", "literal", "json", "hex", "hex20", "hex32", "hex33", "hex64", "base58", "base64", "base64url", "bech32", "base_default", "commit", "z", "base_default", "group", "share", "ecdh", "pkg_default", "commit", "pkg_default", "base_default", "member", "psig_entry", "z", "sighash_vec", "template", "session", "psig_pkg", "sign_default", "schema_default", "base_default", "pkg_default", "sign_default", "parse_ecdh_message", "msg", "schema", "schema_default", "json", "parsed", "__spreadProps", "__spreadValues", "e", "parse_session_message", "parse_psig_message", "err", "parse_group_pkg", "group_pkg", "parse_share_pkg", "share_pkg", "now", "copy_obj", "obj", "normalize_obj", "_", "value", "sorted", "key", "parse_error", "err", "validate_schema", "schema", "err_msg", "Assert", "ok", "value", "message", "equal", "actual", "expected", "err_msg", "exists", "input", "size", "bytes", "Buff", "schema", "validate_schema", "is_hex", "_N", "secp256k1", "FD", "Field", "GP", "get_seckey", "secret", "even_y", "sk", "serialize_bytes", "Buff", "get_pubkey", "seckey", "format", "pk", "convert_pubkey", "tweak_seckey", "tweak", "twk", "tweaked_sk", "new_secret", "tweak_pubkey", "pubkey", "get_pubkey_format", "twk_big", "pub_pt", "lift_pubkey", "tweak_pt", "tweaked_pt", "lift_pubkey", "pubkey", "pk", "convert_pubkey", "secp256k1", "err", "serialize_pubkey", "format", "serialize_bytes", "get_pubkey_format", "bytes", "Buff", "Parse", "error", "err", "data", "schema", "array", "parsed", "e", "errors", "x", "select_random_peers", "peers", "thold", "rnd", "idx", "get_member_indexes", "group", "pubkeys", "indexes", "e", "convert_pubkey", "Assert", "ecdh_handler_api", "node", "msg", "middleware", "copy_obj", "members", "ecdh_pk", "pkg", "envelope", "finalize_message", "res", "err", "parse_error", "ecdh_request_api", "peers", "thold", "selected", "select_random_peers", "encrypted", "get_member_indexes", "self_pkg", "msgs", "create_ecdh_request", "reason", "Assert", "pkgs", "e", "secret", "finalize_ecdh_response", "content", "parsed", "parse_ecdh_message", "combine_ecdh_pkgs", "ping_handler_api", "node", "msg", "copy_obj", "envelope", "finalize_message", "res", "err", "parse_error", "ping_request_api", "msgs", "create_ping_request", "reason", "Assert", "pubkeys", "e", "format_sigvector", "message", "create_sighash_commit", "session_id", "commit", "sigvec", "bind_hash", "get_sighash_binder", "hidden_pn", "tweak_pubkey", "binder_pn", "sighash", "__spreadProps", "__spreadValues", "create_sighash_share", "share", "hidden_sn", "tweak_seckey", "binder_sn", "member_idx", "sid", "Buff", "idx", "msg", "get_group_id", "group", "prefix", "get_commits_prefix", "Buff", "get_commit_by_idx", "commits", "idx", "commit", "e", "Assert", "is_group_member", "group", "share", "pubkey", "get_pubkey", "GET_DEFAULT_SESSION_CONFIG", "now", "create_session_template", "members", "messages", "options", "hashes", "parsed", "schema_default", "__spreadProps", "__spreadValues", "create_session_pkg", "group", "template", "gid", "get_group_id", "sid", "get_session_id", "get_session_id", "group_id", "template", "_a", "mbrs", "e", "Buff", "msgs", "cont", "type", "ts", "create_member_commits", "group", "session", "idx", "commit", "get_commit_by_idx", "vec", "create_sighash_commit", "create_member_shares", "share", "create_sighash_share", "create_session_commits", "get_session_ctx", "pubkeys", "session_commits", "sigmap", "sighash", "tweaks", "sighash_commits", "context", "get_group_signing_ctx", "create_psig_pkg", "ctx", "share", "sid", "pubkey", "get_pubkey", "sighashes", "e", "sig_shares", "create_member_shares", "psigs", "sighash", "sig_share", "sig_ctx", "Assert", "psig", "create_partial_sig", "verify_psig_pkg", "pkg", "idx", "sigctx", "psig_entry", "pnonce", "verify_partial_sig", "create_psig_records", "pkgs", "combine_signature_pkgs", "count", "records", "sigs", "sig", "combine_partial_sigs", "binder_sn", "hidden_sn", "seckey", "sign_msg", "sign_handler_api", "node", "msg", "middleware", "copy_obj", "pkg", "envelope", "finalize_message", "res", "err", "parse_error", "sign_queue_api", "message", "sigvec", "format_sigvector", "sign_request_api", "options", "_a", "sigvecs", "peers", "thold", "selected", "select_random_peers", "members", "get_member_indexes", "template", "create_session_template", "Assert", "session", "create_session_pkg", "msgs", "create_sign_request", "reason", "sigs", "finalize_sign_response", "responses", "ctx", "get_session_ctx", "pkgs", "e", "parsed", "parse_psig_message", "error", "verify_psig_pkg", "combine_signature_pkgs", "EventEmitter", "eventName", "handlers", "newHandlers", "handler", "oneTimeHandler", "payload", "timeoutMs", "timeoutHandler", "promises", "result", "SIGNER_CONFIG", "BifrostSigner", "group", "share", "options", "__spreadValues", "parse_group_pkg", "parse_share_pkg", "get_pubkey", "members", "ecdh_pk", "create_ecdh_pkg", "message", "auxrand", "sig", "schnorr", "Buff", "session", "ctx", "get_session_ctx", "create_psig_pkg", "content", "pubkey", "seckey", "secret", "get_shared_secret", "decrypt_content", "encrypt_content", "SignerQueue", "node", "sigvec", "resolve", "reject", "batch", "req", "vec", "res", "sig_entry", "e", "err", "EventEmitter", "eventName", "handlers", "newHandlers", "handler", "oneTimeHandler", "payload", "timeoutMs", "timeoutHandler", "promises", "result", "number", "n", "bytes", "b", "lengths", "hash", "number", "exists", "instance", "checkFinished", "output", "out", "min", "crypto", "u8a", "a", "createView", "arr", "rotr", "word", "shift", "isLE", "utf8ToBytes", "str", "toBytes", "data", "u8a", "concatBytes", "arrays", "r", "sum", "a", "pad", "Hash", "toStr", "wrapConstructor", "hashCons", "hashC", "msg", "toBytes", "tmp", "randomBytes", "bytesLength", "crypto", "setBigUint64", "view", "byteOffset", "value", "isLE", "_32n", "_u32_max", "wh", "wl", "h", "SHA2", "Hash", "blockLen", "outputLen", "padOffset", "createView", "data", "exists", "buffer", "toBytes", "len", "pos", "take", "dataView", "out", "output", "i", "oview", "outLen", "state", "res", "to", "length", "finished", "destroyed", "Chi", "a", "b", "c", "Maj", "SHA256_K", "IV", "SHA256_W", "SHA256", "SHA2", "A", "B", "C", "D", "E", "F", "G", "H", "view", "offset", "i", "W15", "W2", "s0", "rotr", "s1", "sigma1", "T1", "T2", "sha256", "wrapConstructor", "SHA256", "utils_exports", "__export", "bitGet", "bitLen", "bitMask", "bitSet", "bytesToHex", "bytesToNumberBE", "bytesToNumberLE", "concatBytes", "createHmacDrbg", "ensureBytes", "equalBytes", "hexToBytes", "hexToNumber", "numberToBytesBE", "numberToBytesLE", "numberToHexUnpadded", "numberToVarBytesBE", "utf8ToBytes", "validateObject", "_0n", "_1n", "_2n", "u8a", "a", "hexes", "_", "i", "bytes", "hex", "num", "len", "array", "j", "hexByte", "byte", "n", "title", "expectedLength", "res", "e", "arrays", "r", "sum", "pad", "b1", "b2", "str", "pos", "value", "u8n", "data", "u8fr", "arr", "hashLen", "qByteLen", "hmacFn", "v", "k", "reset", "h", "b", "reseed", "seed", "gen", "out", "sl", "pred", "validatorFns", "val", "object", "validators", "optValidators", "checkField", "fieldName", "type", "isOptional", "checkVal", "_0n", "_1n", "_2n", "_3n", "_4n", "_5n", "_8n", "_9n", "_16n", "mod", "a", "b", "result", "pow", "num", "power", "modulo", "res", "pow2", "x", "invert", "number", "y", "u", "v", "q", "r", "m", "n", "tonelliShanks", "P", "legendreC", "Q", "S", "Z", "p1div4", "Fp", "root", "Q1div2", "g", "t2", "ge", "FpSqrt", "c1", "n2", "nv", "i", "FIELD_FIELDS", "validateField", "field", "initial", "opts", "map", "val", "validateObject", "FpPow", "f", "num", "power", "_0n", "_1n", "p", "d", "FpInvertBatch", "nums", "tmp", "lastMultiplied", "acc", "i", "inverted", "nLength", "n", "nBitLength", "_nBitLength", "nByteLength", "Field", "ORDER", "bitLen", "isLE", "redef", "_0n", "BITS", "BYTES", "sqrtP", "FpSqrt", "f", "bitMask", "_1n", "num", "mod", "lhs", "rhs", "power", "FpPow", "invert", "lst", "FpInvertBatch", "a", "b", "c", "numberToBytesLE", "numberToBytesBE", "bytes", "bytesToNumberLE", "bytesToNumberBE", "getFieldBytesLength", "fieldOrder", "bitLength", "getMinHashLength", "length", "mapHashToField", "key", "isLE", "len", "fieldLen", "minLen", "num", "bytesToNumberBE", "bytesToNumberLE", "reduced", "mod", "_1n", "numberToBytesLE", "numberToBytesBE", "_0n", "_1n", "wNAF", "c", "bits", "constTimeNegate", "condition", "item", "neg", "opts", "W", "windows", "windowSize", "elm", "n", "p", "d", "points", "base", "window", "i", "precomputes", "f", "mask", "maxNumber", "shiftBy", "offset", "wbits", "offset1", "offset2", "cond1", "cond2", "P", "precomputesMap", "transform", "comp", "validateBasic", "curve", "validateField", "validateObject", "__spreadProps", "__spreadValues", "nLength", "validatePointOpts", "curve", "opts", "validateBasic", "validateObject", "endo", "Fp", "a", "__spreadValues", "b2n", "h2b", "utils_exports", "DER", "m", "data", "E", "len", "res", "hex", "l", "r", "sBytes", "s", "rBytesLeft", "sig", "slice", "h", "num", "shl", "rhl", "sl", "rl", "_0n", "_1n", "_2n", "_3n", "_4n", "weierstrassPoints", "CURVE", "toBytes", "_c", "point", "_isCompressed", "concatBytes", "fromBytes", "bytes", "tail", "y", "weierstrassEquation", "x", "b", "x2", "x3", "isWithinCurveOrder", "assertGE", "normPrivateKeyToScalar", "key", "lengths", "nByteLength", "wrapPrivateKey", "n", "bytesToHex", "bytesToNumberBE", "ensureBytes", "error", "mod", "pointPrecomputes", "assertPrjPoint", "other", "Point", "px", "py", "pz", "p", "is0", "i", "points", "toInv", "P", "privateKey", "windowSize", "left", "right", "X1", "Y1", "Z1", "X2", "Y2", "Z2", "U1", "U2", "b3", "X3", "Y3", "Z3", "t0", "t1", "t2", "t3", "t4", "t5", "wnaf", "comp", "I", "k1neg", "k1", "k2neg", "k2", "k1p", "k2p", "d", "scalar", "fake", "f1p", "f2p", "f", "Q", "G", "mul", "sum", "iz", "z", "ax", "ay", "zz", "cofactor", "isTorsionFree", "clearCofactor", "isCompressed", "_bits", "wNAF", "validateOpts", "weierstrass", "curveDef", "CURVE_ORDER", "compressedLen", "uncompressedLen", "isValidFieldElement", "modN", "invN", "invert", "__spreadProps", "cat", "head", "y2", "isYOdd", "numToNByteStr", "numberToBytesBE", "isBiggerThanHalfOrder", "number", "HALF", "normalizeS", "slcNum", "from", "to", "Signature", "recovery", "msgHash", "rec", "bits2int_modN", "radj", "prefix", "R", "ir", "u1", "u2", "hexToBytes", "utils", "length", "getMinHashLength", "mapHashToField", "getPublicKey", "isProbPub", "item", "arr", "str", "getSharedSecret", "privateA", "publicB", "bits2int", "delta", "ORDER_MASK", "bitMask", "int2octets", "prepSig", "defaultSigOpts", "k", "hash", "randomBytes", "lowS", "prehash", "ent", "h1int", "seedArgs", "e", "seed", "k2sig", "kBytes", "ik", "q", "normS", "defaultVerOpts", "sign", "privKey", "C", "createHmacDrbg", "verify", "signature", "publicKey", "_a", "sg", "_sig", "derError", "is", "HMAC", "Hash", "hash", "_key", "key", "toBytes", "blockLen", "pad", "buf", "exists", "out", "bytes", "to", "oHash", "iHash", "finished", "destroyed", "outputLen", "hmac", "message", "getHash", "hash", "key", "msgs", "hmac", "concatBytes", "randomBytes", "createCurve", "curveDef", "defHash", "create", "weierstrass", "__spreadValues", "__spreadProps", "secp256k1P", "secp256k1N", "_1n", "_2n", "divNearest", "a", "b", "sqrtMod", "y", "P", "_3n", "_6n", "_11n", "_22n", "_23n", "_44n", "_88n", "b2", "b3", "b6", "pow2", "b9", "b11", "b22", "b44", "b88", "b176", "b220", "b223", "t1", "t2", "root", "Fp", "Field", "secp256k1", "createCurve", "k", "n", "a1", "b1", "a2", "POW_2_128", "c1", "c2", "k1", "mod", "k2", "k1neg", "k2neg", "sha256", "_0n", "fe", "x", "ge", "TAGGED_HASH_PREFIXES", "taggedHash", "tag", "messages", "tagP", "tagH", "c", "concatBytes", "pointToBytes", "point", "numTo32b", "numberToBytesBE", "modP", "modN", "Point", "GmulAdd", "Q", "schnorrGetExtPubKey", "priv", "d_", "p", "lift_x", "xx", "challenge", "args", "bytesToNumberBE", "schnorrGetPublicKey", "privateKey", "schnorrSign", "message", "auxRand", "randomBytes", "m", "ensureBytes", "px", "d", "t", "rand", "k_", "rx", "e", "sig", "schnorrVerify", "signature", "publicKey", "pub", "r", "s", "R", "error", "schnorr", "crypto", "u8a", "a", "createView", "arr", "rotr", "word", "shift", "isLE", "hexes", "v", "i", "bytesToHex", "bytes", "u8a", "hex", "hexToBytes", "len", "array", "j", "hexByte", "byte", "utf8ToBytes", "str", "toBytes", "data", "u8a", "concatBytes", "arrays", "r", "sum", "a", "pad", "Hash", "wrapConstructor", "hashCons", "hashC", "msg", "toBytes", "tmp", "randomBytes", "bytesLength", "crypto", "number", "n", "bool", "b", "bytes", "lengths", "hash", "exists", "instance", "checkFinished", "output", "out", "min", "assert", "assert_default", "setBigUint64", "view", "byteOffset", "value", "isLE", "_32n", "_u32_max", "wh", "wl", "h", "SHA2", "Hash", "blockLen", "outputLen", "padOffset", "createView", "data", "assert_default", "buffer", "toBytes", "len", "pos", "take", "dataView", "out", "i", "oview", "outLen", "state", "res", "to", "length", "finished", "destroyed", "Chi", "a", "b", "c", "Maj", "SHA256_K", "IV", "SHA256_W", "SHA256", "SHA2", "A", "B", "C", "D", "E", "F", "G", "H", "view", "offset", "i", "W15", "W2", "s0", "rotr", "s1", "sigma1", "T1", "T2", "SHA224", "sha256", "wrapConstructor", "sha224", "assertNumber", "n", "chain", "args", "wrap", "a", "b", "c", "encode", "acc", "i", "decode", "alphabet", "digits", "input", "letter", "index", "join", "separator", "from", "to", "padding", "bits", "chr", "data", "end", "normalize", "fn", "convertRadix", "pos", "res", "d", "carry", "done", "digit", "digitBase", "gcd", "radix2carry", "convertRadix2", "mask", "radix", "num", "bytes", "radix2", "revPadding", "unsafeWrapper", "e", "base16", "chain", "radix2", "alphabet", "join", "base32", "padding", "base32hex", "base32crockford", "normalize", "s", "base64", "base64url", "genBase58", "abc", "radix", "base58", "base58flickr", "base58xrp", "XMR_BLOCK_LEN", "base58xmr", "data", "res", "i", "block", "str", "slice", "blockLen", "j", "BECH_ALPHABET", "chain", "alphabet", "join", "POLYMOD_GENERATORS", "bech32Polymod", "pre", "b", "chk", "i", "bechChecksum", "prefix", "words", "encodingConst", "len", "c", "v", "convertRadix2", "genBech32", "encoding", "ENCODING_CONST", "_words", "radix2", "fromWords", "toWords", "fromWordsUnsafe", "unsafeWrapper", "encode", "limit", "actualLength", "decode", "str", "lowered", "sepIndex", "sum", "decodeUnsafe", "decodeToBytes", "bech32", "bech32m", "utf8", "data", "hex", "normalize", "s", "CODERS", "base16", "base32", "base64", "base64url", "base58", "base58xmr", "coderTypeError", "number", "n", "bool", "b", "isBytes", "a", "bytes", "lengths", "exists", "instance", "checkFinished", "output", "out", "bytes", "min", "u8", "arr", "u32", "arr", "createView", "isLE", "utf8ToBytes", "str", "toBytes", "data", "utf8ToBytes", "isBytes", "checkOpts", "defaults", "opts", "equalBytes", "a", "b", "diff", "i", "wrapCipher", "params", "c", "setBigUint64", "view", "byteOffset", "value", "isLE", "_32n", "_u32_max", "wh", "wl", "h", "BLOCK_SIZE", "ZEROS16", "ZEROS32", "u32", "POLY", "mul2", "s0", "s1", "s2", "s3", "hiBit", "swapLE", "n", "_toGHASHKey", "k", "carry", "i", "t", "estimateWindow", "bytes", "GHASH", "key", "expectedLength", "toBytes", "kView", "createView", "k0", "k1", "k2", "k3", "doubles", "W", "windows", "windowSize", "items", "w", "byte", "j", "d0", "d1", "d2", "d3", "o0", "o1", "o2", "o3", "mask", "num", "bytePos", "bitPos", "bit", "e0", "e1", "e2", "e3", "data", "exists", "b32", "blocks", "left", "elm", "out", "output", "o32", "res", "Polyval", "ghKey", "wrapConstructorWithKey", "hashCons", "hashC", "msg", "tmp", "ghash", "polyval", "BLOCK_SIZE", "BLOCK_SIZE32", "EMPTY_BLOCK", "POLY", "mul2", "n", "mul", "a", "b", "res", "sbox", "t", "i", "x", "box", "invSbox", "_", "j", "rotr32_8", "rotl32_8", "genTtable", "fn", "T0", "T1", "T2", "T3", "T01", "T23", "sbox2", "idx", "tableEncoding", "s", "tableDecoding", "xPowers", "p", "expandKeyLE", "key", "bytes", "len", "k32", "u32", "Nk", "subByte", "applySbox", "xk", "expandKeyDecLE", "encKey", "w", "apply0123", "s0", "s1", "s2", "s3", "encrypt", "k", "rounds", "t0", "t1", "t2", "t3", "decrypt", "getDst", "dst", "ctrCounter", "nonce", "src", "srcLen", "ctr", "c32", "src32", "dst32", "carry", "start", "b32", "buf", "u8", "pos", "ctr32", "isLE", "view", "createView", "ctrPos", "ctrNum", "wrapCipher", "processCtr", "out", "plaintext", "ciphertext", "validateBlockDecrypt", "data", "validateBlockEncrypt", "pcks5", "outLen", "remaining", "left", "o", "validatePCKS", "lastByte", "padPCKS", "tmp", "tmp32", "paddingByte", "ecb", "opts", "_out", "cbc", "iv", "n32", "ps0", "ps1", "ps2", "ps3", "o0", "o1", "o2", "o3", "cfb", "processCfb", "isEncrypt", "next32", "e0", "e1", "e2", "e3", "computeTag", "AAD", "h", "num", "setBigUint64", "gcm", "tagLength", "_computeTag", "authKey", "tagMask", "tag", "ghash", "deriveKeys", "counter", "nonceLen", "passedTag", "equalBytes", "limit", "name", "min", "max", "value", "siv", "AAD_LIMIT", "PLAIN_LIMIT", "NONCE_LIMIT", "CIPHER_LIMIT", "derivedKey", "d32", "polyval", "t32", "processSiv", "input", "block", "expectedTag", "u8to16", "a", "i", "Poly1305", "key", "toBytes", "bytes", "t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7", "data", "offset", "isLast", "hibit", "h", "r", "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9", "h0", "h1", "h2", "h3", "h4", "h5", "h6", "h7", "h8", "h9", "c", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "pad", "g", "mask", "f", "exists", "buffer", "blockLen", "len", "pos", "take", "out", "output", "opos", "outputLen", "res", "wrapConstructorWithKey", "hashCons", "hashC", "msg", "tmp", "poly1305", "_utf8ToBytes", "str", "c", "sigma16", "sigma32", "sigma16_32", "u32", "sigma32_32", "sigma", "rotl", "a", "b", "isAligned32", "BLOCK_LEN", "BLOCK_LEN32", "MAX_COUNTER", "U32_EMPTY", "runCipher", "core", "key", "nonce", "data", "output", "counter", "rounds", "len", "block", "b32", "isAligned", "d32", "o32", "pos", "take", "pos32", "j", "posj", "createCipher", "opts", "allowShortKeys", "extendNonceFn", "counterLength", "counterRight", "checkOpts", "number", "bool", "bytes", "toClean", "l", "k", "k32", "nonceNcLen", "nc", "n32", "chachaCore", "s", "k", "out", "cnt", "rounds", "y00", "y01", "y02", "y03", "y04", "y05", "y06", "y07", "y08", "y09", "y10", "y11", "y12", "y13", "y14", "y15", "x00", "x01", "x02", "x03", "x04", "x05", "x06", "x07", "x08", "x09", "x10", "x11", "x12", "x13", "x14", "x15", "r", "rotl", "oi", "hchacha", "i", "o32", "chacha20", "createCipher", "chachaCore", "xchacha20", "hchacha", "ZEROS16", "updatePadded", "h", "msg", "left", "ZEROS32", "computeTag", "fn", "key", "nonce", "data", "AAD", "authKey", "poly1305", "num", "view", "createView", "setBigUint64", "res", "_poly1305_aead", "xorStream", "bytes", "plaintext", "output", "plength", "clength", "tag", "ciphertext", "passedTag", "equalBytes", "chacha20poly1305", "wrapCipher", "chacha20", "xchacha20poly1305", "xchacha20", "HMAC", "Hash", "hash", "_key", "assert_default", "key", "toBytes", "blockLen", "pad", "buf", "out", "to", "oHash", "iHash", "finished", "destroyed", "outputLen", "hmac", "message", "extract", "hash", "ikm", "salt", "assert_default", "hmac", "toBytes", "HKDF_COUNTER", "EMPTY_BUFFER", "expand", "prk", "info", "length", "blocks", "okm", "HMAC", "HMACTmp", "T", "counter", "__defProp", "__export", "target", "all", "name", "verifiedSymbol", "isRecord", "obj", "validateEvent", "event", "i2", "tag", "j", "utils_exports", "__export", "Queue", "QueueNode", "binarySearch", "insertEventIntoAscendingList", "insertEventIntoDescendingList", "normalizeURL", "utf8Decoder", "utf8Encoder", "url", "p", "e", "sortedArray", "event", "idx", "found", "b", "arr", "compare", "start", "end", "mid", "cmp", "message", "__publicField", "value", "newNode", "target2", "target", "JS", "schnorr", "secretKey", "bytesToHex", "t", "getEventHash", "verifiedSymbol", "hash", "valid", "err", "serializeEvent", "evt", "validateEvent", "eventHash", "sha256", "i", "generateSecretKey", "getPublicKey", "finalizeEvent", "verifyEvent", "kinds_exports", "Application", "BadgeAward", "BadgeDefinition", "BlockedRelaysList", "BookmarkList", "Bookmarksets", "Calendar", "CalendarEventRSVP", "ChannelCreation", "ChannelHideMessage", "ChannelMessage", "ChannelMetadata", "ChannelMuteUser", "ClassifiedListing", "ClientAuth", "CommunitiesList", "CommunityDefinition", "CommunityPostApproval", "Contacts", "CreateOrUpdateProduct", "CreateOrUpdateStall", "Curationsets", "Date2", "DirectMessageRelaysList", "DraftClassifiedListing", "DraftLong", "Emojisets", "EncryptedDirectMessage", "EventDeletion", "FileMetadata", "FileServerPreference", "Followsets", "GenericRepost", "Genericlists", "GiftWrap", "HTTPAuth", "Handlerinformation", "Handlerrecommendation", "Highlights", "InterestsList", "Interestsets", "JobFeedback", "JobRequest", "JobResult", "Label", "LightningPubRPC", "LiveChatMessage", "LiveEvent", "LongFormArticle", "Metadata", "Mutelist", "NWCWalletInfo", "NWCWalletRequest", "NWCWalletResponse", "NostrConnect", "OpenTimestamps", "Pinlist", "PrivateDirectMessage", "ProblemTracker", "ProfileBadges", "PublicChatsList", "Reaction", "RecommendRelay", "RelayList", "Relaysets", "Report", "Reporting", "Repost", "Seal", "SearchRelaysList", "ShortTextNote", "Time", "UserEmojiList", "UserStatuses", "Zap", "ZapGoal", "ZapRequest", "classifyKind", "isAddressableKind", "isEphemeralKind", "isKind", "isParameterizedReplaceableKind", "isRegularKind", "isReplaceableKind", "kind", "kindAsArray", "matchFilter", "filter", "f", "tagName", "values", "v", "matchFilters", "filters", "i2", "fakejson_exports", "__export", "getHex64", "getInt", "getSubscriptionId", "matchEventId", "matchEventKind", "matchEventPubkey", "json", "field", "len", "idx", "s", "sliced", "end", "pstart", "start", "pend", "id", "pubkey", "kind", "nip42_exports", "makeAuthEvent", "relayURL", "challenge", "ClientAuth", "yieldThread", "resolve", "ch", "handler", "alwaysTrue", "t", "verifiedSymbol", "AbstractRelay", "url", "opts", "__publicField", "msg", "Queue", "normalizeURL", "relay", "reason", "_", "sub", "ep", "cr", "reject", "_a", "err", "ev", "_b", "_c", "subid", "so", "alreadyHave", "data", "event", "matchFilters", "payload", "ok", "message", "signAuthEvent", "evt", "timeout", "ret", "filters", "params", "subscription", "Subscription", "_WebSocket", "AbstractSimplePool", "opts", "__publicField", "url", "params", "normalizeURL", "relay", "AbstractRelay", "alwaysTrue", "relays", "_a", "filter", "filters", "requests", "id", "set", "_knownIds", "subs", "eosesReceived", "handleEose", "i2", "a", "closesReceived", "handleClose", "reason", "localAlreadyHaveEventHandler", "have", "allOpened", "err", "subscription", "__spreadProps", "__spreadValues", "reason2", "sub", "relaysLength", "req", "arr", "subcloser", "resolve", "events", "event", "_", "b", "r", "map", "conn", "_WebSocket2", "SimplePool", "verifyEvent", "nip19_exports", "__export", "BECH32_REGEX", "Bech32MaxSize", "NostrTypeGuard", "decode", "decodeNostrURI", "encodeBytes", "naddrEncode", "neventEncode", "noteEncode", "nprofileEncode", "npubEncode", "nsecEncode", "value", "integerToUint8Array", "number", "uint8Array", "nip19code", "_err", "code", "_b", "_c", "_d", "_e", "_f", "_g", "prefix", "words", "bech32", "data", "tlv", "parseTLV", "bytesToHex", "utf8Decoder", "result", "rest", "t", "l", "v", "key", "hex", "hexToBytes", "encodeBech32", "bytes", "profile", "encodeTLV", "utf8Encoder", "kindArray", "addr", "kind", "entries", "vs", "entry", "concatBytes", "nip04_exports", "__export", "decrypt", "encrypt", "secretKey", "pubkey", "text", "privkey", "bytesToHex", "key", "secp256k1", "normalizedKey", "getNormalizedX", "iv", "randomBytes", "plaintext", "utf8Encoder", "ciphertext", "cbc", "ctb64", "base64", "ivb64", "data", "utf8Decoder", "nip05_exports", "NIP05_REGEX", "isNip05", "isValid", "queryProfile", "searchDomain", "useFetchImplementation", "value", "_fetch", "_", "fetchImplementation", "domain", "query", "url", "res", "fullname", "_a", "match", "name", "json", "_e", "nip05", "nip10_exports", "parse", "event", "result", "maybeParent", "maybeRoot", "i2", "tag", "eTagEventId", "eTagRelayUrl", "eTagMarker", "eTagAuthor", "eventPointer", "ref", "idx", "author", "p", "nip11_exports", "fetchRelayInformation", "useFetchImplementation2", "_fetch2", "nip13_exports", "fastEventHash", "getPow", "minePow", "hex", "count", "nibble", "unsigned", "difficulty", "now2", "evt", "sha256", "nip17_exports", "unwrapEvent2", "unwrapManyEvents2", "wrapEvent2", "wrapManyEvents2", "nip59_exports", "createRumor", "createSeal", "createWrap", "unwrapEvent", "unwrapManyEvents", "wrapEvent", "wrapManyEvents", "nip44_exports", "decrypt2", "encrypt2", "getConversationKey", "v2", "minPlaintextSize", "maxPlaintextSize", "privkeyA", "pubkeyB", "sharedX", "extract", "getMessageKeys", "conversationKey", "nonce", "keys", "expand", "calcPaddedLen", "len", "nextPower", "chunk", "writeU16BE", "num", "arr", "pad", "unpadded", "unpaddedLen", "prefix", "suffix", "concatBytes", "unpad", "padded", "hmacAad", "message", "aad", "combined", "hmac", "decodePayload", "payload", "plen", "error", "dlen", "vers", "chacha_key", "chacha_nonce", "hmac_key", "chacha20", "mac", "calculatedMac", "equalBytes", "TWO_DAYS", "now", "randomNow", "nip44ConversationKey", "privateKey", "publicKey", "nip44Encrypt", "nip44Decrypt", "rumor", "__spreadProps", "__spreadValues", "getPublicKey", "getEventHash", "recipientPublicKey", "finalizeEvent", "Seal", "seal", "randomKey", "generateSecretKey", "GiftWrap", "senderPrivateKey", "recipientsPublicKeys", "senderPublicKey", "wrappeds", "wrap", "recipientPrivateKey", "unwrappedSeal", "wrappedEvents", "unwrappedEvents", "e", "a", "b", "createEvent", "recipients", "conversationTitle", "replyTo", "baseEvent", "PrivateDirectMessage", "relayUrl", "recipient", "nip18_exports", "finishRepostEvent", "getRepostedEvent", "getRepostedEventPointer", "t", "reposted", "_b", "kind", "tags", "ShortTextNote", "Repost", "GenericRepost", "lastETag", "lastPTag", "x", "skipVerification", "pointer", "repostedEvent", "verifyEvent", "nip21_exports", "NOSTR_URI_REGEX", "parse2", "test", "BECH32_REGEX", "uri", "decode", "nip25_exports", "finishReactionEvent", "getReactedEventPointer", "reacted", "inheritedTags", "Reaction", "nip27_exports", "parse3", "noCharacter", "noURLCharacter", "content", "max", "prevIndex", "index", "u", "m", "end", "type", "_err", "prefixLen", "nip28_exports", "channelCreateEvent", "channelHideMessageEvent", "channelMessageEvent", "channelMetadataEvent", "channelMuteUserEvent", "ChannelCreation", "ChannelMetadata", "ChannelMessage", "ChannelHideMessage", "ChannelMuteUser", "nip30_exports", "EMOJI_SHORTCODE_REGEX", "matchAll", "regex", "replaceAll", "matches", "shortcode", "replacer", "nip39_exports", "useFetchImplementation3", "validateGithub", "_fetch3", "username", "proof", "nip47_exports", "makeNwcRequestEvent", "parseConnectionString", "connectionString", "pathname", "searchParams", "relay", "secret", "invoice", "encryptedContent", "eventTemplate", "NWCWalletRequest", "nip54_exports", "normalizeIdentifier", "char", "nip57_exports", "getZapEndpoint", "makeZapReceipt", "makeZapRequest", "useFetchImplementation4", "validateZapRequest", "_fetch4", "metadata", "lnurl", "lud06", "lud16", "words", "bech32", "body", "err", "profile", "amount", "relays", "comment", "zr", "isReplaceableKind", "isAddressableKind", "d", "v", "zapRequestString", "zapRequest", "validateEvent", "preimage", "bolt11", "paidAt", "tagsFromZapRequest", "zap", "nip98_exports", "getToken", "hashPayload", "unpackEventFromToken", "validateEvent2", "validateEventKind", "validateEventMethodTag", "validateEventPayloadTag", "validateEventTimestamp", "validateEventUrlTag", "validateToken", "_authorizationScheme", "loginUrl", "httpMethod", "sign", "includeAuthorizationScheme", "HTTPAuth", "signedEvent", "token", "method", "eventB64", "urlTag", "methodTag", "hash", "payloadTag", "payloadHash", "NODE_CONFIG", "now", "NostrNode", "EventEmitter", "relays", "seckey", "options", "event", "payload", "decrypt_payload", "msg", "parse_envelope", "err", "parse_error", "message", "peer_pk", "_a", "cache", "config", "get_event_config", "create_payload", "create_event", "signed", "__spreadProps", "__spreadValues", "receipts", "acks", "fails", "r", "msg_id", "ok", "res", "verify_relays", "verify_seckey", "Buff", "get_pubkey", "get_node_config", "get_filter_config", "SimplePool", "filter", "timeout", "sub_id", "gen_message_id", "resolve", "timer", "resolver", "reason", "id", "peers", "finalize_message", "outbox", "pk", "settled", "receipt", "sub", "pub", "pubkey", "get_sub_config", "threshold", "tag", "authors", "inbox", "is_bounce", "e", "opt", "envelope", "node", "_b", "_c", "created_at", "tags", "rest", "__objRest", "NODE_CONFIG", "BifrostNode", "EventEmitter", "group", "share", "relays", "options", "get_node_cache", "get_node_config", "SignerQueue", "BifrostSigner", "get_peer_policies", "NostrNode", "msg", "ping_handler_api", "parsed", "parse_ecdh_message", "ecdh_handler_api", "parse_session_message", "sign_handler_api", "err", "parse_error", "e", "convert_pubkey", "ecdh_request_api", "ping_request_api", "sign_queue_api", "sign_request_api", "opt", "__spreadValues", "_a", "_b", "node", "pubkey", "peers", "policies", "peer", "config", "encode_group_pkg", "pkg", "serialize_group_data", "decode_group_pkg", "str", "data", "Buff", "deserialize_group_data", "thd", "gpk", "com", "e", "serialize_commit_data", "stream", "group_pk", "threshold", "Assert", "count", "commits", "cbytes", "deserialize_commit_data", "normalize_obj", "idx", "spk", "bpn", "hpn", "pubkey", "binder_pn", "hidden_pn", "encode_share_pkg", "pkg", "data", "serialize_share_data", "Assert", "decode_share_pkg", "sharestr", "Buff", "deserialize_share_data", "idx", "ssk", "bsn", "hsn", "stream", "seckey", "binder_sn", "hidden_sn", "normalize_obj", "SPLIT_IDX", "encode_credentials", "group_pkg", "share_pkg", "Assert", "is_group_member", "group", "serialize_group_data", "share", "serialize_share_data", "Buff", "decode_credentials", "credstr", "bytes", "sdata", "gdata", "deserialize_group_data", "deserialize_share_data", "PackageEncoder", "encode_credentials", "decode_credentials", "encode_group_pkg", "decode_group_pkg", "serialize_group_data", "deserialize_group_data", "encode_share_pkg", "decode_share_pkg", "serialize_share_data", "deserialize_share_data", "STORE_KEY", "DEFAULT_STORE", "DBController", "store_key", "defaults", "item", "e", "value", "error", "callback", "__spreadValues", "subscriber", "import_react", "import_jsx_runtime", "createStoreProvider", "controller", "Context", "children", "_store", "_setStore", "reset", "update", "store", "new_store", "__spreadValues", "ctx", "params", "name", "store_key", "STORE_KEY", "StoreDB", "DBController", "DEFAULT_STORE", "StoreProvider", "useStore", "createStoreProvider", "import_react", "useBifrost", "status", "setStatus", "store", "useStore", "node_ref", "store_ref", "reset", "is_store_ready", "creds", "peers", "relays", "urls", "r", "BifrostNode", "error", "event", "log", "update_log", "stop", "new_logs", "diff", "import_react", "import_jsx_runtime", "Context", "NodeProvider", "children", "node", "useBifrost", "useNode", "ctx", "import_jsx_runtime", "Header", "import_react", "import_jsx_runtime", "Console", "store", "useStore", "clear_logs", "log", "idx", "import_jsx_runtime", "Dashboard", "_a", "node", "useNode", "import_react", "import_jsx_runtime", "CredentialsConfig", "_a", "store", "useStore", "input", "setInput", "error", "setError", "show", "setShow", "saved", "setSaved", "update_creds", "creds", "decode_credentials", "peers", "init_peer_permissions", "err", "get_creds_str", "e", "is_cred_string", "pkg", "get_creds_pkg", "is_creds_changed", "get_creds_json", "creds_str", "encode_credentials", "pubkey", "get_pubkey", "commit", "import_react", "import_jsx_runtime", "PeerConfig", "store", "useStore", "peers", "setPeers", "changes", "setChanges", "saved", "setSaved", "update", "cancel", "update_peer", "idx", "key", "value", "prev", "updated", "peer", "import_react", "import_jsx_runtime", "RelayConfig", "store", "useStore", "relays", "setRelays", "relayUrl", "setUrl", "changes", "setChanges", "error", "setError", "saved", "setSaved", "update", "cancel", "update_relay", "idx", "key", "prev", "updated", "__spreadProps", "__spreadValues", "add_relay", "validateUrl", "relay", "remove_relay", "_", "i", "e", "url", "import_jsx_runtime", "ResetStore", "store", "useStore", "import_jsx_runtime", "Settings", "CredentialsConfig", "PeerConfig", "RelayConfig", "ResetStore", "import_jsx_runtime", "SettingsIcon", "ConsoleIcon", "import_jsx_runtime", "Tabs", "activeTab", "setActiveTab", "ConsoleIcon", "SettingsIcon", "Dashboard", "Console", "Settings", "import_jsx_runtime", "App", "Header", "Tabs", "link", "link", "link", "link", "import_jsx_runtime", "container", "root", "StoreProvider", "NodeProvider", "App"]
}
